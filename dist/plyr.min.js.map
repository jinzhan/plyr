{"version":3,"sources":["src/js/utils/is.js","src/js/utils/arrays.js","src/js/utils/events.js","src/js/utils/elements.js","src/js/utils/animation.js","src/js/utils/browser.js","src/js/support.js","src/js/html5.js","src/js/utils/objects.js","src/js/utils/strings.js","src/js/utils/i18n.js","src/js/storage.js","src/js/utils/fetch.js","src/js/utils/loadSprite.js","src/js/utils/time.js","src/js/controls.js","src/js/utils/urls.js","src/js/captions.js","src/js/config/defaults.js","src/js/config/states.js","src/js/config/types.js","src/js/console.js","src/js/fullscreen.js","src/js/utils/loadImage.js","src/js/ui.js","src/js/listeners.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils/loadScript.js","src/js/plugins/vimeo.js","src/js/plugins/youtube.js","src/js/media.js","src/js/plugins/ads.js","src/js/source.js","src/js/plyr.js"],"names":["getConstructor","input","constructor","instanceOf","Boolean","isNullOrUndefined","isObject","Object","isString","String","isArray","Array","isNodeList","NodeList","isEmpty","length","keys","is","nullOrUndefined","object","number","Number","isNaN","string","boolean","function","Function","array","weakMap","WeakMap","nodeList","element","Element","textNode","Text","event","Event","keyboardEvent","KeyboardEvent","cue","window","TextTrackCue","VTTCue","track","TextTrack","kind","url","URL","startsWith","concat","hostname","e","empty","dedupe","filter","item","index","indexOf","prototype","find","args","this","supportsPassiveListeners","supported","options","defineProperty","get","addEventListener","removeEventListener","toggleListener","callback","_this","toggle","arguments","undefined","passive","capture","events","split","forEach","type","eventListeners","push","on","call","off","once","onceCallback","_len","_key","apply","triggerEvent","bubbles","detail","CustomEvent","assign","plyr","dispatchEvent","wrap","elements","wrapper","targets","from","reverse","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","insertBefore","setAttributes","attributes","entries","_ref","value","_slicedToArray","_ref3","_ref4","key","setAttribute","createElement","text","document","innerText","insertElement","removeElement","removeChild","emptyElement","childNodes","lastChild","replaceElement","newChild","oldChild","replaceChild","getAttributesFromSelector","sel","existingAttributes","existing","s","selector","trim","className","replace","parts","charAt","class","id","toggleHidden","hidden","hide","removeAttribute","toggleClass","force","map","method","classList","contains","hasClass","matches","querySelectorAll","includes","getElements","container","getElement","querySelector","setFocus","tabFocus","focus","preventScroll","config","classNames","transitionEndEvent","WebkitTransition","MozTransition","OTransition","transition","style","repaint","setTimeout","offsetHeight","range","browser","isIE","documentMode","isWebkit","documentElement","test","navigator","userAgent","isIPhone","platform","isIos","defaultCodecs","audio/ogg","audio/wav","video/webm","video/mp4","video/ogg","support","audio","video","check","provider","playsinline","canPlayInline","api","ui","rangeInput","pip","webkitSetPresentationMode","pictureInPictureEnabled","disablePictureInPicture","airplay","WebKitPlaybackTargetAvailabilityEvent","mime","inputType","mediaType","isHTML5","media","canPlayType","textTracks","touch","transitions","reducedMotion","matchMedia","html5","getSources","source","getAttribute","getQualityOptions","extend","player","set","_player$media","currentTime","paused","preload","readyState","src","play","load","quality","cancelRequests","blankVideo","debug","log","getDeep","path","reduce","obj","target","sources","shift","_defineProperty","format","toString","match","i","replaceAll","RegExp","toTitleCase","toUpperCase","substr","toLowerCase","toCamelCase","toPascalCase","slice","getHTML","innerHTML","resources","vimeo","youtube","i18n","{seektime}","seekTime","{title}","title","_ref2","Storage","_classCallCheck","enabled","storage","store","localStorage","getItem","json","JSON","parse","setItem","stringify","removeItem","fetch","responseType","Promise","resolve","reject","request","XMLHttpRequest","responseText","response","Error","status","open","send","loadSprite","option","hasId","exists","getElementById","update","data","body","insertAdjacentElement","useStorage","inlineSvg","str","prefix","svg","decodeURIComponent","substring","toSvg","cached","content","then","result","catch","getHours","parseInt","getMinutes","getSeconds","formatTime","time","displayHours","inverted","hours","mins","secs","controls","getIconUrl","cors","iconUrl","location","host","svg4everybody","findElements","selectors","buttons","pause","restart","rewind","fastForward","mute","settings","captions","fullscreen","progress","inputs","seek","volume","display","buffer","duration","seekTooltip","tooltip","error","warn","toggleNativeControls","createIcon","iconPath","iconPrefix","icon","createElementNS","role","focusable","use","setAttributeNS","createLabel","attr","join","createBadge","badge","menu","createButton","buttonType","props","label","labelPressed","iconPressed","control","button","createRange","min","max","step","autocomplete","aria-label","aria-valuemin","aria-valuemax","aria-valuenow","updateRangeFill","createProgress","aria-hidden","suffixKey","played","suffix","createTime","bindMenuItemShortcuts","menuItem","which","preventDefault","stopPropagation","isRadioButton","showMenuPanel","nextElementSibling","firstElementChild","previousElementSibling","lastElementChild","focusFirstMenuItem","createMenuItem","_this2","list","_ref$badge","_ref$checked","checked","aria-checked","flex","enumerable","children","node","listeners","bind","currentTrack","speed","parseFloat","updateTimeDisplay","updateVolume","setRange","muted","pressed","updateProgress","_this3","current","toFixed","getElementsByTagName","nodeValue","setProgress","buffered","percent","setProperty","updateSeekTooltip","_this4","tooltips","clientRect","getBoundingClientRect","visible","width","pageX","left","timeUpdate","invert","invertTime","seeking","durationUpdate","Math","pow","hasDuration","displayDuration","toggleMenuButton","setting","updateSetting","pane","panels","default","getLabel","setQualityMenu","_this5","checkMenu","getBadge","sort","a","b","sorting","setCaptionsMenu","_this6","tracks","getTracks","toggled","language","unshift","setSpeedMenu","_this7","isVimeo","values","some","popup","firstItem","toggleMenu","show","isMenuItem","getMenuSize","tab","clone","position","opacity","scrollWidth","height","scrollHeight","_this8","size","restore","propertyName","setDownloadLink","download","create","_this9","aria-haspopup","aria-controls","aria-expanded","inner","home","backButton","href","urls","isEmbed","inject","_this10","floor","random","seektime","addProperty","controlPressed","parseUrl","parser","buildUrlParams","params","URLSearchParams","setup","isVideo","isYouTube","protocol","blob","createObjectURL","languages","userLanguage","active","trackEvents","_this$captions","meta","currentTrackNode","languageExists","mode","updateCues","setLanguage","activeClass","findTrack","_toConsumableArray","embed","enableTextTrack","has","sortIsDefault","sorted","every","getCurrentTrack","cues","activeCues","getCueAsHTML","cueText","caption","defaults","autoplay","autopause","toggleInvert","ratio","clickToPlay","hideControls","resetOnEnd","disableContextMenu","loop","selected","keyboard","focused","global","fallback","iosNative","seekLabel","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","frameTitle","menuBack","normal","start","end","all","reset","disabled","advertisement","qualityBadge","2160","1440","1080","720","576","480","sdk","iframe","googleIMA","editable","labels","videoInitFlag","embedContainer","poster","posterEnabled","ads","playing","stopped","loading","hover","isTouch","uiSupported","noTransition","google","publisherId","providers","types","noop","Console","console","onChange","first","last","keyCode","activeElement","shiftKey","toggleFallback","scrollPosition","x","scrollX","y","scrollY","scrollTo","overflow","viewport","head","property","hasProperty","cleanupViewport","part","Fullscreen","native","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","action","cancelFullScreen","exit","enter","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","pre","loadImage","minWidth","image","Image","handler","onload","onerror","naturalWidth","addStyleHook","build","checkPlaying","ready","setTitle","setPoster","togglePoster","enable","err","backgroundImage","backgroundSize","toggleControls","checkLoading","clearTimeout","timers","recentTouchSeek","lastSeekTime","Date","now","Listeners","lastKey","focusTimer","lastKeyDown","handleKey","setTabFocus","firstTouch","code","repeat","altKey","ctrlKey","metaKey","togglePlay","increaseVolume","decreaseVolume","forward","toggleCaptions","timeStamp","wasKeyDown","delay","initialized","managerPromise","isAudio","ended","proxyEvents","_event$detail","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","proxy","inputEvent","rect","currentTarget","hasAttribute","done","seekTo","webkitDirectionInvertedFromDevice","_map2","deltaX","deltaY","direction","sign","abs","module","exports","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","splice","executeCallbacks","depsNotFound","success","loadFile","callbackFn","numTries","isLegacyIECss","doc","async","maxTries","numRetries","beforeCallbackFn","before","pathStripped","rel","relList","as","onbeforeload","ev","sheet","cssText","defaultPrevented","loadjs","paths","arg1","arg2","loadFn","fn","numWaiting","loadFiles","returnPromise","deps","bundleIds","r","subscribe","isDefined","factory","loadScript","assurePlaybackState","hasPlayed","setAspectRatio","Vimeo","_split$map2","padding","paddingBottom","offset","transform","byline","portrait","transparent","gesture","$2","thumbnail_large","pathname","Player","disableTextTrack","stop","restorePause","setVolume","setCurrentTime","setPlaybackRate","name","currentSrc","setLoop","getVideoUrl","getVideoWidth","getVideoHeight","dimensions","getRatio","w","h","setAutopause","state","getVideoTitle","getCurrentTime","getDuration","getTextTracks","_ref$cues","strippedCues","fragment","createDocumentFragment","firstChild","getPaused","seconds","_vimeo$ratio$split$ma2","dimension","YT","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","getTitle","videoId","getVideoData","items","snippet","currentId","posterSrc","playerVars","hl","showinfo","iv_load_policy","modestbranding","disablekb","widget_referrer","cc_load_policy","cc_lang_pref","onError","message","2","5","100","101","150","onPlaybackRateChange","instance","playbackRate","getPlaybackRate","onReady","playVideo","pauseVideo","stopVideo","getAvailablePlaybackRates","clearInterval","buffering","setInterval","getVideoLoadedFraction","lastBuffered","onStateChange","unMute","Ads","displayContainer","manager","loader","cuePoints","safetyTimer","countdownTimer","ima","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","AdEvent","onAdEvent","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","contentComplete","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","initialize","init","adError","zIndex","destroy","_this11","handlers","_this12","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","AV_WIDTH","AV_HEIGHT","AV_CDIM2","insertElements","attribute","change","_sources$","_sources$$provider","tagName","crossorigin","Plyr","failed","jQuery","original","getProviderByUrl","search","truthy","searchParams","webkitShowPlaybackTargetPicker","isHidden","hiding","eventName","soft","unload","inputIsValid","fauxDuration","realDuration","Infinity","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","updateStorage","prev","curr","closest","requestPictureInPicture","exitPictureInPicture","webkitPresentationMode","pictureInPictureElement","inline","t"],"mappings":"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","file":"plyr.min.js","sourcesContent":["// ==========================================================================\n// Type checking utils\n// ==========================================================================\n\nconst getConstructor = input => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\nconst isNullOrUndefined = input => input === null || typeof input === 'undefined';\nconst isObject = input => getConstructor(input) === Object;\nconst isNumber = input => getConstructor(input) === Number && !Number.isNaN(input);\nconst isString = input => getConstructor(input) === String;\nconst isBoolean = input => getConstructor(input) === Boolean;\nconst isFunction = input => getConstructor(input) === Function;\nconst isArray = input => Array.isArray(input);\nconst isWeakMap = input => instanceOf(input, WeakMap);\nconst isNodeList = input => instanceOf(input, NodeList);\nconst isElement = input => instanceOf(input, Element);\nconst isTextNode = input => getConstructor(input) === Text;\nconst isEvent = input => instanceOf(input, Event);\nconst isKeyboardEvent = input => instanceOf(input, KeyboardEvent);\nconst isCue = input => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\nconst isTrack = input => instanceOf(input, TextTrack) || (!isNullOrUndefined(input) && isString(input.kind));\n\nconst isEmpty = input =>\n    isNullOrUndefined(input) ||\n    ((isString(input) || isArray(input) || isNodeList(input)) && !input.length) ||\n    (isObject(input) && !Object.keys(input).length);\n\nconst isUrl = input => {\n    // Accept a URL object\n    if (instanceOf(input, window.URL)) {\n        return true;\n    }\n\n    // Must be string from here\n    if (!isString(input)) {\n        return false;\n    }\n\n    // Add the protocol if required\n    let string = input;\n    if (!input.startsWith('http://') || !input.startsWith('https://')) {\n        string = `http://${input}`;\n    }\n\n    try {\n        return !isEmpty(new URL(string).hostname);\n    } catch (e) {\n        return false;\n    }\n};\n\nexport default {\n    nullOrUndefined: isNullOrUndefined,\n    object: isObject,\n    number: isNumber,\n    string: isString,\n    boolean: isBoolean,\n    function: isFunction,\n    array: isArray,\n    weakMap: isWeakMap,\n    nodeList: isNodeList,\n    element: isElement,\n    textNode: isTextNode,\n    event: isEvent,\n    keyboardEvent: isKeyboardEvent,\n    cue: isCue,\n    track: isTrack,\n    url: isUrl,\n    empty: isEmpty,\n};\n","// ==========================================================================\n// Array utils\n// ==========================================================================\n\nimport is from './is';\n\n// Add polyfill for array\nif (!Array.prototype.find) {\n    Array.prototype.find = function(args) {\n        return this.filter(args)[0]; \n    };\n}\n\n// Remove duplicates in an array\nexport function dedupe(array) {\n    if (!is.array(array)) {\n        return array;\n    }\n\n    return array.filter((item, index) => array.indexOf(item) === index);\n}\n\n// Get the closest value in an array\nexport function closest(array, value) {\n    if (!is.array(array) || !array.length) {\n        return null;\n    }\n\n    return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n}\n","// ==========================================================================\n// Event utils\n// ==========================================================================\n\nimport is from './is';\n\n// Check for passive event listener support\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n// https://www.youtube.com/watch?v=NPM6172J22g\nconst supportsPassiveListeners = (() => {\n    // Test via a getter in the options object to see if the passive property is accessed\n    let supported = false;\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get() {\n                supported = true;\n                return null;\n            },\n        });\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n        // Do nothing\n    }\n\n    return supported;\n})();\n\n// Toggle event listener\nexport function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\n    // Bail if no element, event, or callback\n    if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\n        return;\n    }\n\n    // Allow multiple events\n    const events = event.split(' ');\n\n    // Build options\n    // Default to just the capture boolean for browsers with no passive listener support\n    let options = capture;\n\n    // If passive events listeners are supported\n    if (supportsPassiveListeners) {\n        options = {\n            // Whether the listener can be passive (i.e. default never prevented)\n            passive,\n            // Whether the listener is a capturing listener or not\n            capture,\n        };\n    }\n\n    // If a single node is passed, bind the event listener\n    events.forEach(type => {\n        if (this && this.eventListeners && toggle) {\n            // Cache event listener\n            this.eventListeners.push({ element, type, callback, options });\n        }\n\n        element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n    });\n}\n\n// Bind event handler\nexport function on(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, true, passive, capture);\n}\n\n// Unbind event handler\nexport function off(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, false, passive, capture);\n}\n\n// Bind once-only event handler\nexport function once(element, events = '', callback, passive = true, capture = false) {\n    function onceCallback(...args) {\n        off(element, events, onceCallback, passive, capture);\n        callback.apply(this, args);\n    }\n\n    toggleListener.call(this, element, events, onceCallback, true, passive, capture);\n}\n\n// Trigger event\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n    // Bail if no element\n    if (!is.element(element) || is.empty(type)) {\n        return;\n    }\n\n    // Create and dispatch the event\n    const event = new CustomEvent(type, {\n        bubbles,\n        detail: Object.assign({}, detail, {\n            plyr: this,\n        }),\n    });\n\n    // Dispatch the event\n    element.dispatchEvent(event);\n}\n\n// Unbind all cached event listeners\nexport function unbindListeners() {\n    if (this && this.eventListeners) {\n        this.eventListeners.forEach(item => {\n            const { element, type, callback, options } = item;\n            element.removeEventListener(type, callback, options);\n        });\n\n        this.eventListeners = [];\n    }\n}\n\n// Run method when / if player is ready\nexport function ready() {\n    return new Promise(\n        resolve => (this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve)),\n    ).then(() => {});\n}\n","// ==========================================================================\n// Element utils\n// ==========================================================================\n\nimport { toggleListener } from './events';\nimport is from './is';\n\n// Wrap an element\nexport function wrap(elements, wrapper) {\n    // Convert `elements` to an array, if necessary.\n    const targets = elements.length ? elements : [elements];\n\n    // Loops backwards to prevent having to clone the wrapper on the\n    // first element (see `child` below).\n    Array.from(targets)\n        .reverse()\n        .forEach((element, index) => {\n            const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n\n            // Cache the current parent and sibling.\n            const parent = element.parentNode;\n            const sibling = element.nextSibling;\n\n            // Wrap the element (is automatically removed from its current\n            // parent).\n            child.appendChild(element);\n\n            // If the element had a sibling, insert the wrapper before\n            // the sibling to maintain the HTML structure; otherwise, just\n            // append it to the parent.\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            } else {\n                parent.appendChild(child);\n            }\n        });\n}\n\n// Set attributes\nexport function setAttributes(element, attributes) {\n    if (!is.element(element) || is.empty(attributes)) {\n        return;\n    }\n\n    // Assume null and undefined attributes should be left out,\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\n    Object.entries(attributes)\n        .filter(([, value]) => !is.nullOrUndefined(value))\n        .forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// Create a DocumentFragment\nexport function createElement(type, attributes, text) {\n    // Create a new <element>\n    const element = document.createElement(type);\n\n    // Set all passed attributes\n    if (is.object(attributes)) {\n        setAttributes(element, attributes);\n    }\n\n    // Add text node\n    if (is.string(text)) {\n        element.innerText = text;\n    }\n\n    // Return built element\n    return element;\n}\n\n// Inaert an element after another\nexport function insertAfter(element, target) {\n    if (!is.element(element) || !is.element(target)) {\n        return;\n    }\n\n    target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n// Insert a DocumentFragment\nexport function insertElement(type, parent, attributes, text) {\n    if (!is.element(parent)) {\n        return;\n    }\n\n    parent.appendChild(createElement(type, attributes, text));\n}\n\n// Remove element(s)\nexport function removeElement(element) {\n    if (is.nodeList(element) || is.array(element)) {\n        Array.from(element).forEach(removeElement);\n        return;\n    }\n\n    if (!is.element(element) || !is.element(element.parentNode)) {\n        return;\n    }\n\n    element.parentNode.removeChild(element);\n}\n\n// Remove all child elements\nexport function emptyElement(element) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let { length } = element.childNodes;\n\n    while (length > 0) {\n        element.removeChild(element.lastChild);\n        length -= 1;\n    }\n}\n\n// Replace element\nexport function replaceElement(newChild, oldChild) {\n    if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) {\n        return null;\n    }\n\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n\n    return newChild;\n}\n\n// Get an attribute object from a string selector\nexport function getAttributesFromSelector(sel, existingAttributes) {\n    // For example:\n    // '.test' to { class: 'test' }\n    // '#test' to { id: 'test' }\n    // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n    if (!is.string(sel) || is.empty(sel)) {\n        return {};\n    }\n\n    const attributes = {};\n    const existing = existingAttributes;\n\n    sel.split(',').forEach(s => {\n        // Remove whitespace\n        const selector = s.trim();\n        const className = selector.replace('.', '');\n        const stripped = selector.replace(/[[\\]]/g, '');\n\n        // Get the parts and value\n        const parts = stripped.split('=');\n        const key = parts[0];\n        const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n\n        // Get the first character\n        const start = selector.charAt(0);\n\n        switch (start) {\n            case '.':\n                // Add to existing classname\n                if (is.object(existing) && is.string(existing.class)) {\n                    existing.class += ` ${className}`;\n                }\n\n                attributes.class = className;\n                break;\n\n            case '#':\n                // ID selector\n                attributes.id = selector.replace('#', '');\n                break;\n\n            case '[':\n                // Attribute selector\n                attributes[key] = value;\n\n                break;\n\n            default:\n                break;\n        }\n    });\n\n    return attributes;\n}\n\n// Toggle hidden\nexport function toggleHidden(element, hidden) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let hide = hidden;\n\n    if (!is.boolean(hide)) {\n        hide = !element.hidden;\n    }\n\n    if (hide) {\n        element.setAttribute('hidden', '');\n    } else {\n        element.removeAttribute('hidden');\n    }\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nexport function toggleClass(element, className, force) {\n    if (is.nodeList(element)) {\n        return Array.from(element).map(e => toggleClass(e, className, force));\n    }\n\n    if (is.element(element)) {\n        let method = 'toggle';\n        if (typeof force !== 'undefined') {\n            method = force ? 'add' : 'remove';\n        }\n\n        element.classList[method](className);\n        return element.classList.contains(className);\n    }\n\n    return false;\n}\n\n// Has class name\nexport function hasClass(element, className) {\n    return is.element(element) && element.classList.contains(className);\n}\n\n// Element matches selector\nexport function matches(element, selector) {\n    const prototype = { Element };\n\n    function match() {\n        return Array.from(document.querySelectorAll(selector)).includes(this);\n    }\n\n    const matches =\n        prototype.matches ||\n        prototype.webkitMatchesSelector ||\n        prototype.mozMatchesSelector ||\n        prototype.msMatchesSelector ||\n        match;\n\n    return matches.call(element, selector);\n}\n\n// Find all elements\nexport function getElements(selector) {\n    return this.elements.container.querySelectorAll(selector);\n}\n\n// Find a single element\nexport function getElement(selector) {\n    return this.elements.container.querySelector(selector);\n}\n\n// Trap focus inside container\nexport function trapFocus(element = null, toggle = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    const focusable = getElements.call(this, 'button:not(:disabled), input:not(:disabled), [tabindex]');\n    const first = focusable[0];\n    const last = focusable[focusable.length - 1];\n\n    const trap = event => {\n        // Bail if not tab key or not fullscreen\n        if (event.key !== 'Tab' || event.keyCode !== 9) {\n            return;\n        }\n\n        // Get the current focused element\n        const focused = document.activeElement;\n\n        if (focused === last && !event.shiftKey) {\n            // Move focus to first element that can be tabbed if Shift isn't used\n            first.focus();\n            event.preventDefault();\n        } else if (focused === first && event.shiftKey) {\n            // Move focus to last element that can be tabbed if Shift is used\n            last.focus();\n            event.preventDefault();\n        }\n    };\n\n    toggleListener.call(this, this.elements.container, 'keydown', trap, toggle, false);\n}\n\n// Set focus and tab focus class\nexport function setFocus(element = null, tabFocus = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    // Set regular focus\n    element.focus({ preventScroll: true });\n\n    // If we want to mimic keyboard focus via tab\n    if (tabFocus) {\n        toggleClass(element, this.config.classNames.tabFocus);\n    }\n}\n","// ==========================================================================\n// Animation utils\n// ==========================================================================\n\nimport { toggleHidden } from './elements';\nimport is from './is';\n\nexport const transitionEndEvent = (() => {\n    const element = document.createElement('span');\n\n    const events = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend',\n    };\n\n    const type = Object.keys(events).find(event => element.style[event] !== undefined);\n\n    return is.string(type) ? events[type] : false;\n})();\n\n// Force repaint of element\nexport function repaint(element) {\n    setTimeout(() => {\n        try {\n            toggleHidden(element, true);\n            element.offsetHeight; // eslint-disable-line\n            toggleHidden(element, false);\n        } catch (e) {\n            // Do nothing\n        }\n    }, 0);\n}\n","// ==========================================================================\n// Browser sniffing\n// Unfortunately, due to mixed support, UA sniffing is required\n// ==========================================================================\n\nconst browser = {\n    isIE: /* @cc_on!@ */ false || !!document.documentMode,\n    isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n    isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n    isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\n};\n\nexport default browser;\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport { transitionEndEvent } from './utils/animation';\nimport browser from './utils/browser';\nimport { createElement } from './utils/elements';\nimport is from './utils/is';\n\n// Default codecs for checking mimetype support\nconst defaultCodecs = {\n    'audio/ogg': 'vorbis',\n    'audio/wav': '1',\n    'video/webm': 'vp8, vorbis',\n    'video/mp4': 'avc1.42E01E, mp4a.40.2',\n    'video/ogg': 'theora',\n};\n\n// Check for feature support\nconst support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider, playsinline) {\n        const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n        const api = support[type] || provider !== 'html5';\n        const ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\n\n        return {\n            api,\n            ui,\n        };\n    },\n\n    // Picture-in-picture support\n    // Safari & Chrome only currently\n    pip: (() => {\n        if (browser.isIPhone) {\n            return false;\n        }\n\n        // Safari\n        // https://developer.apple.com/documentation/webkitjs/adding_picture_in_picture_to_your_safari_media_controls\n        if (is.function(createElement('video').webkitSetPresentationMode)) {\n            return true;\n        }\n\n        // Chrome\n        // https://developers.google.com/web/updates/2018/10/watch-video-using-picture-in-picture\n        if (document.pictureInPictureEnabled && !createElement('video').disablePictureInPicture) {\n            return true;\n        }\n\n        return false;\n    })(),\n\n    // Airplay support\n    // Safari only currently\n    airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(inputType) {\n        const [mediaType] = inputType.split('/');\n        let type = inputType;\n\n        // Verify we're using HTML5 and there's no media type mismatch\n        if (!this.isHTML5 || mediaType !== this.type) {\n            return false;\n        }\n\n        // Add codec if required\n        if (Object.keys(defaultCodecs).includes(type)) {\n            type += `; codecs=\"${defaultCodecs[inputType]}\"`;\n        }\n\n        try {\n            return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n        } catch (e) {\n            return false;\n        }\n    },\n\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n        const range = document.createElement('input');\n        range.type = 'range';\n        return range.type === 'range';\n    })(),\n\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n\n    // Detect transitions support\n    transitions: transitionEndEvent !== false,\n\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport support from './support';\nimport { removeElement } from './utils/elements';\nimport { triggerEvent } from './utils/events';\n\nconst html5 = {\n    getSources() {\n        if (!this.isHTML5) {\n            return [];\n        }\n\n        const sources = Array.from(this.media.querySelectorAll('source'));\n\n        // Filter out unsupported sources\n        return sources.filter(source => support.mime.call(this, source.getAttribute('type')));\n    },\n\n    // Get quality levels\n    getQualityOptions() {\n        // Get sizes from <source> elements\n        return html5.getSources\n            .call(this)\n            .map(source => Number(source.getAttribute('size')))\n            .filter(Boolean);\n    },\n\n    extend() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const player = this;\n\n        // Quality\n        Object.defineProperty(player.media, 'quality', {\n            get() {\n                // Get sources\n                const sources = html5.getSources.call(player);\n                const source = sources.find(source => source.getAttribute('src') === player.source);\n\n                // Return size, if match is found\n                return source && Number(source.getAttribute('size'));\n            },\n            set(input) {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                // Get first match for requested size\n                const source = sources.find(source => Number(source.getAttribute('size')) === input);\n\n                // No matching source found\n                if (!source) {\n                    return;\n                }\n\n                // Get current state\n                const { currentTime, paused, preload, readyState } = player.media;\n\n                // Set new source\n                player.media.src = source.getAttribute('src');\n\n                // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n                if (preload !== 'none' || readyState) {\n                    // Restore time\n                    player.once('loadedmetadata', () => {\n                        player.currentTime = currentTime;\n\n                        // Resume playing\n                        if (!paused) {\n                            player.play();\n                        }\n                    });\n\n                    // Load new source\n                    player.media.load();\n                }\n\n                // Trigger change event\n                triggerEvent.call(player, player.media, 'qualitychange', false, {\n                    quality: input,\n                });\n            },\n        });\n    },\n\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        // Remove child sources\n        removeElement(html5.getSources.call(this));\n\n        // Set blank video src attribute\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n        this.media.setAttribute('src', this.config.blankVideo);\n\n        // Load the new empty source\n        // This will cancel existing requests\n        // See https://github.com/sampotts/plyr/issues/174\n        this.media.load();\n\n        // Debugging\n        this.debug.log('Cancelled network requests');\n    },\n};\n\nexport default html5;\n","// ==========================================================================\n// Object utils\n// ==========================================================================\n\nimport is from './is';\n\n// Clone nested objects\nexport function cloneDeep(object) {\n    return JSON.parse(JSON.stringify(object));\n}\n\n// Get a nested value in an object\nexport function getDeep(object, path) {\n    return path.split('.').reduce((obj, key) => obj && obj[key], object);\n}\n\n// Deep extend destination object with N more objects\nexport function extend(target = {}, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n\n    const source = sources.shift();\n\n    if (!is.object(source)) {\n        return target;\n    }\n\n    Object.keys(source).forEach(key => {\n        if (is.object(source[key])) {\n            if (!Object.keys(target).includes(key)) {\n                Object.assign(target, { [key]: {} });\n            }\n\n            extend(target[key], source[key]);\n        } else {\n            Object.assign(target, { [key]: source[key] });\n        }\n    });\n\n    return extend(target, ...sources);\n}\n","// ==========================================================================\n// String utils\n// ==========================================================================\n\nimport is from './is';\n\n// Generate a random ID\nexport function generateId(prefix) {\n    return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n}\n\n// Format string\nexport function format(input, ...args) {\n    if (is.empty(input)) {\n        return input;\n    }\n\n    return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\n}\n\n// Get percentage\nexport function getPercentage(current, max) {\n    if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n        return 0;\n    }\n\n    return ((current / max) * 100).toFixed(2);\n}\n\n// Replace all occurances of a string in a string\nexport function replaceAll(input = '', find = '', replace = '') {\n    return input.replace(\n        new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'),\n        replace.toString(),\n    );\n}\n\n// Convert to title case\nexport function toTitleCase(input = '') {\n    return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\n}\n\n// Convert string to pascalCase\nexport function toPascalCase(input = '') {\n    let string = input.toString();\n\n    // Convert kebab case\n    string = replaceAll(string, '-', ' ');\n\n    // Convert snake case\n    string = replaceAll(string, '_', ' ');\n\n    // Convert to title case\n    string = toTitleCase(string);\n\n    // Convert to pascal case\n    return replaceAll(string, ' ', '');\n}\n\n// Convert string to pascalCase\nexport function toCamelCase(input = '') {\n    let string = input.toString();\n\n    // Convert to pascal case\n    string = toPascalCase(string);\n\n    // Convert first character to lowercase\n    return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n// Remove HTML from a string\nexport function stripHTML(source) {\n    const fragment = document.createDocumentFragment();\n    const element = document.createElement('div');\n    fragment.appendChild(element);\n    element.innerHTML = source;\n    return fragment.firstChild.innerText;\n}\n\n// Like outerHTML, but also works for DocumentFragment\nexport function getHTML(element) {\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(element);\n    return wrapper.innerHTML;\n}\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport is from './is';\nimport { getDeep } from './objects';\nimport { replaceAll } from './strings';\n\n// Skip i18n for abbreviations and brand names\nconst resources = {\n    pip: 'PIP',\n    airplay: 'AirPlay',\n    html5: 'HTML5',\n    vimeo: 'Vimeo',\n    youtube: 'YouTube',\n};\n\nconst i18n = {\n    get(key = '', config = {}) {\n        if (is.empty(key) || is.empty(config)) {\n            return '';\n        }\n\n        let string = getDeep(config.i18n, key);\n\n        if (is.empty(string)) {\n            if (Object.keys(resources).includes(key)) {\n                return resources[key];\n            }\n\n            return '';\n        }\n\n        const replace = {\n            '{seektime}': config.seekTime,\n            '{title}': config.title,\n        };\n\n        Object.entries(replace).forEach(([key, value]) => {\n            string = replaceAll(string, key, value);\n        });\n\n        return string;\n    },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nclass Storage {\n    constructor(player) {\n        this.enabled = player.config.storage.enabled;\n        this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n        try {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            const test = '___test';\n\n            // Try to use it (it might be disabled, e.g. user is in private mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            window.localStorage.setItem(test, test);\n            window.localStorage.removeItem(test);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    get(key) {\n        if (!Storage.supported || !this.enabled) {\n            return null;\n        }\n\n        const store = window.localStorage.getItem(this.key);\n\n        if (is.empty(store)) {\n            return null;\n        }\n\n        const json = JSON.parse(store);\n\n        return is.string(key) && key.length ? json[key] : json;\n    }\n\n    set(object) {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n            return;\n        }\n\n        // Can only store objectst\n        if (!is.object(object)) {\n            return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (is.empty(storage)) {\n            storage = {};\n        }\n\n        // Update the working copy of the values\n        extend(storage, object);\n\n        // Update storage\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\n    }\n}\n\nexport default Storage;\n","// ==========================================================================\n// Fetch wrapper\n// Using XHR to avoid issues with older browsers\n// ==========================================================================\n\nexport default function fetch(url, responseType = 'text') {\n    return new Promise((resolve, reject) => {\n        try {\n            const request = new XMLHttpRequest();\n\n            // Check for CORS support\n            if (!('withCredentials' in request)) {\n                return;\n            }\n\n            request.addEventListener('load', () => {\n                if (responseType === 'text') {\n                    try {\n                        resolve(JSON.parse(request.responseText));\n                    } catch (e) {\n                        resolve(request.responseText);\n                    }\n                } else {\n                    resolve(request.response);\n                }\n            });\n\n            request.addEventListener('error', () => {\n                throw new Error(request.status);\n            });\n\n            request.open('GET', url, true);\n\n            // Set the required response type\n            request.responseType = responseType;\n\n            request.send();\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n","// ==========================================================================\n// Sprite loader\n// ==========================================================================\n\nimport Storage from '../storage';\nimport fetch from './fetch';\nimport is from './is';\n\n// Load an external SVG sprite\nexport default function loadSprite(url, id, option = {}) {\n    if (!is.string(url)) {\n        return;\n    }\n\n    const prefix = 'cache';\n    const hasId = is.string(id);\n    let isCached = false;\n\n    const exists = () => document.getElementById(id) !== null;\n\n    const update = (container, data) => {\n        container.innerHTML = data;\n\n        // Check again incase of race condition\n        if (hasId && exists()) {\n            return;\n        }\n\n        // Inject the SVG to the body\n        document.body.insertAdjacentElement('afterbegin', container);\n    };\n\n    // Only load once if ID set\n    if (!hasId || !exists()) {\n        const useStorage = Storage.supported;\n\n        // Create container\n        const container = document.createElement('div');\n        container.setAttribute('hidden', '');\n\n        if (hasId) {\n            container.setAttribute('id', id);\n        }\n\n        if (option.inlineSvg) {\n            const toSvg = str => {\n                const prefix = 'data:image/svg+xml,';\n                if(str.indexOf(prefix) === -1) {\n                    return str;\n                }\n                const svg = decodeURIComponent(str).split(prefix)[1];\n                return svg.substring(0, svg.length -1);\n            };\n            update(container, toSvg(option.inlineSvg));\n            return;\n        }\n\n        // Check in cache\n        if (useStorage) {\n            const cached = window.localStorage.getItem(`${prefix}-${id}`);\n            isCached = cached !== null;\n\n            if (isCached) {\n                const data = JSON.parse(cached);\n                update(container, data.content);\n            }\n        }\n\n        // Get the sprite\n        fetch(url)\n            .then(result => {\n                if (is.empty(result)) {\n                    return;\n                }\n\n                if (useStorage) {\n                    window.localStorage.setItem(\n                        `${prefix}-${id}`,\n                        JSON.stringify({\n                            content: result,\n                        }),\n                    );\n                }\n\n                update(container, result);\n            })\n            .catch(() => {\n            });\n    }\n}\n","// ==========================================================================\n// Time utils\n// ==========================================================================\n\nimport is from './is';\n\n// Time helpers\nexport const getHours = value => parseInt((value / 60 / 60) % 60, 10);\nexport const getMinutes = value => parseInt((value / 60) % 60, 10);\nexport const getSeconds = value => parseInt(value % 60, 10);\n\n// Format time to UI friendly string\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n        return formatTime(null, displayHours, inverted);\n    }\n\n    // Format time component to add leading zero\n    const format = value => `0${value}`.slice(-2);\n\n    // Breakdown to hours, mins, secs\n    let hours = getHours(time);\n    const mins = getMinutes(time);\n    const secs = getSeconds(time);\n\n    // Do we need to display hours?\n    if (displayHours || hours > 0) {\n        hours = `${hours}:`;\n    } else {\n        hours = '';\n    }\n\n    // Render\n    return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n}\n","// ==========================================================================\n// Plyr controls\n// TODO: This needs to be split into smaller files and cleaned up\n// ==========================================================================\n\nimport captions from './captions';\nimport html5 from './html5';\nimport support from './support';\nimport { repaint, transitionEndEvent } from './utils/animation';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport { createElement, emptyElement, getAttributesFromSelector, getElement, getElements, hasClass, matches, removeElement, setAttributes, setFocus, toggleClass, toggleHidden } from './utils/elements';\nimport { off, on } from './utils/events';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { extend } from './utils/objects';\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\nimport { formatTime, getHours } from './utils/time';\n\n// TODO: Don't export a massive object - break down and create class\nconst controls = {\n    // Get icon URL\n    getIconUrl() {\n        const url = new URL(this.config.iconUrl, window.location);\n        const cors = url.host !== window.location.host || (browser.isIE && !window.svg4everybody);\n\n        return {\n            url: this.config.iconUrl,\n            cors,\n        };\n    },\n\n    // Find the UI controls\n    findElements() {\n        try {\n            this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n            // Buttons\n            this.elements.buttons = {\n                play: getElements.call(this, this.config.selectors.buttons.play),\n                pause: getElement.call(this, this.config.selectors.buttons.pause),\n                restart: getElement.call(this, this.config.selectors.buttons.restart),\n                rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n                fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n                mute: getElement.call(this, this.config.selectors.buttons.mute),\n                pip: getElement.call(this, this.config.selectors.buttons.pip),\n                airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n                settings: getElement.call(this, this.config.selectors.buttons.settings),\n                captions: getElement.call(this, this.config.selectors.buttons.captions),\n                fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\n            };\n\n            // Progress\n            this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n            // Inputs\n            this.elements.inputs = {\n                seek: getElement.call(this, this.config.selectors.inputs.seek),\n                volume: getElement.call(this, this.config.selectors.inputs.volume),\n            };\n\n            // Display\n            this.elements.display = {\n                buffer: getElement.call(this, this.config.selectors.display.buffer),\n                currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n                duration: getElement.call(this, this.config.selectors.display.duration),\n            };\n\n            // Seek tooltip\n            if (is.element(this.elements.progress)) {\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(\n                    `.${this.config.classNames.tooltip}`,\n                );\n            }\n\n            return true;\n        } catch (error) {\n            // Log it\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n            // Restore native video controls\n            this.toggleNativeControls(true);\n\n            return false;\n        }\n    },\n\n    // Create <svg> icon\n    createIcon(type, attributes) {\n        const namespace = 'http://www.w3.org/2000/svg';\n        const iconUrl = controls.getIconUrl.call(this);\n        const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n\n        // Create <svg>\n        const icon = document.createElementNS(namespace, 'svg');\n        setAttributes(\n            icon,\n            extend(attributes, {\n                role: 'presentation',\n                focusable: 'false',\n            }),\n        );\n\n        // Create the <use> to reference sprite\n        const use = document.createElementNS(namespace, 'use');\n        const path = `${iconPath}-${type}`;\n\n        // Set `href` attributes\n        // https://github.com/sampotts/plyr/issues/460\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n        if ('href' in use) {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n        }\n\n        // Always set the older attribute even though it's \"deprecated\" (it'll be around for ages)\n        use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n\n        // Add <use> to <svg>\n        icon.appendChild(use);\n\n        return icon;\n    },\n\n    // Create hidden text label\n    createLabel(key, attr = {}) {\n        const text = i18n.get(key, this.config);\n\n        const attributes = Object.assign({}, attr, {\n            class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' '),\n        });\n\n        return createElement('span', attributes, text);\n    },\n\n    // Create a badge\n    createBadge(text) {\n        if (is.empty(text)) {\n            return null;\n        }\n\n        const badge = createElement('span', {\n            class: this.config.classNames.menu.value,\n        });\n\n        badge.appendChild(\n            createElement(\n                'span',\n                {\n                    class: this.config.classNames.menu.badge,\n                },\n                text,\n            ),\n        );\n\n        return badge;\n    },\n\n    // Create a <button>\n    createButton(buttonType, attr) {\n        const attributes = Object.assign({}, attr);\n        let type = toCamelCase(buttonType);\n\n        const props = {\n            element: 'button',\n            toggle: false,\n            label: null,\n            icon: null,\n            labelPressed: null,\n            iconPressed: null,\n        };\n\n        ['element', 'icon', 'label'].forEach(key => {\n            if (Object.keys(attributes).includes(key)) {\n                props[key] = attributes[key];\n                delete attributes[key];\n            }\n        });\n\n        // Default to 'button' type to prevent form submission\n        if (props.element === 'button' && !Object.keys(attributes).includes('type')) {\n            attributes.type = 'button';\n        }\n\n        // Set class name\n        if (Object.keys(attributes).includes('class')) {\n            if (!attributes.class.includes(this.config.classNames.control)) {\n                attributes.class += ` ${this.config.classNames.control}`;\n            }\n        } else {\n            attributes.class = this.config.classNames.control;\n        }\n\n        // Large play button\n        switch (buttonType) {\n            case 'play':\n                props.toggle = true;\n                props.label = 'play';\n                props.labelPressed = 'pause';\n                props.icon = 'play';\n                props.iconPressed = 'pause';\n                break;\n\n            case 'mute':\n                props.toggle = true;\n                props.label = 'mute';\n                props.labelPressed = 'unmute';\n                props.icon = 'volume';\n                props.iconPressed = 'muted';\n                break;\n\n            case 'captions':\n                props.toggle = true;\n                props.label = 'enableCaptions';\n                props.labelPressed = 'disableCaptions';\n                props.icon = 'captions-off';\n                props.iconPressed = 'captions-on';\n                break;\n\n            case 'fullscreen':\n                // props.toggle = true;\n                props.label = 'enterFullscreen';\n                props.icon = 'enter-fullscreen';\n                // props.labelPressed = 'exitFullscreen';\n                // props.iconPressed = 'exit-fullscreen';\n                break;\n\n            case 'play-large':\n                props.toggle = true;\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\n                type = 'play';\n                props.label = 'play';\n                props.icon = 'play';\n                props.labelPressed = 'pause';\n                props.iconPressed = 'pause';\n                break;\n\n            default:\n                if (is.empty(props.label)) {\n                    props.label = type;\n                }\n                if (is.empty(props.icon)) {\n                    props.icon = buttonType;\n                }\n        }\n\n        const button = createElement(props.element);\n\n        // Setup toggle icon and labels\n        if (props.toggle) {\n            // Icon\n            button.appendChild(\n                controls.createIcon.call(this, props.iconPressed, {\n                    class: 'icon--pressed',\n                }),\n            );\n            button.appendChild(\n                controls.createIcon.call(this, props.icon, {\n                    class: 'icon--not-pressed',\n                }),\n            );\n\n            // Label/Tooltip\n            button.appendChild(\n                controls.createLabel.call(this, props.labelPressed, {\n                    class: 'label--pressed',\n                }),\n            );\n            button.appendChild(\n                controls.createLabel.call(this, props.label, {\n                    class: 'label--not-pressed',\n                }),\n            );\n        } else {\n            button.appendChild(controls.createIcon.call(this, props.icon));\n            button.appendChild(controls.createLabel.call(this, props.label));\n        }\n\n        // Merge and set attributes\n        extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n        setAttributes(button, attributes);\n\n        // We have multiple play buttons\n        if (type === 'play') {\n            if (!is.array(this.elements.buttons[type])) {\n                this.elements.buttons[type] = [];\n            }\n\n            this.elements.buttons[type].push(button);\n        } else {\n            this.elements.buttons[type] = button;\n        }\n\n        return button;\n    },\n\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n        // Seek input\n        const input = createElement(\n            'input',\n            extend(\n                getAttributesFromSelector(this.config.selectors.inputs[type]),\n                {\n                    type: 'range',\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    value: 0,\n                    autocomplete: 'off',\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\n                    role: 'slider',\n                    'aria-label': i18n.get(type, this.config),\n                    'aria-valuemin': 0,\n                    'aria-valuemax': 100,\n                    'aria-valuenow': 0,\n                },\n                attributes,\n            ),\n        );\n\n        this.elements.inputs[type] = input;\n\n        // Set the fill for webkit now\n        controls.updateRangeFill.call(this, input);\n\n        return input;\n    },\n\n    // Create a <progress>\n    createProgress(type, attributes) {\n        const progress = createElement(\n            'progress',\n            extend(\n                getAttributesFromSelector(this.config.selectors.display[type]),\n                {\n                    min: 0,\n                    max: 100,\n                    value: 0,\n                    role: 'presentation',\n                    'aria-hidden': true,\n                },\n                attributes,\n            ),\n        );\n\n        // Create the label inside\n        if (type !== 'volume') {\n            progress.appendChild(createElement('span', null, '0'));\n\n            const suffixKey = {\n                played: 'played',\n                buffer: 'buffered',\n            }[type];\n            const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n\n            progress.innerText = `% ${suffix.toLowerCase()}`;\n        }\n\n        this.elements.display[type] = progress;\n\n        return progress;\n    },\n\n    // Create time display\n    createTime(type) {\n        const attributes = getAttributesFromSelector(this.config.selectors.display[type]);\n\n        const container = createElement(\n            'div',\n            extend(attributes, {\n                class: `${this.config.classNames.display.time} ${attributes.class ? attributes.class : ''}`.trim(),\n                'aria-label': i18n.get(type, this.config),\n            }),\n            '00:00',\n        );\n\n        // Reference for updates\n        this.elements.display[type] = container;\n\n        return container;\n    },\n\n    // Bind keyboard shortcuts for a menu item\n    // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    bindMenuItemShortcuts(menuItem, type) {\n        // Navigate through menus via arrow keys and space\n        on(\n            menuItem,\n            'keydown keyup',\n            event => {\n                // We only care about space and ⬆️ ⬇️️ ➡️\n                if (![32, 38, 39, 40].includes(event.which)) {\n                    return;\n                }\n\n                // Prevent play / seek\n                event.preventDefault();\n                event.stopPropagation();\n\n                // We're just here to prevent the keydown bubbling\n                if (event.type === 'keydown') {\n                    return;\n                }\n\n                const isRadioButton = matches(menuItem, '[role=\"menuitemradio\"]');\n\n                // Show the respective menu\n                if (!isRadioButton && [32, 39].includes(event.which)) {\n                    controls.showMenuPanel.call(this, type, true);\n                } else {\n                    let target;\n\n                    if (event.which !== 32) {\n                        if (event.which === 40 || (isRadioButton && event.which === 39)) {\n                            target = menuItem.nextElementSibling;\n\n                            if (!is.element(target)) {\n                                target = menuItem.parentNode.firstElementChild;\n                            }\n                        } else {\n                            target = menuItem.previousElementSibling;\n\n                            if (!is.element(target)) {\n                                target = menuItem.parentNode.lastElementChild;\n                            }\n                        }\n\n                        setFocus.call(this, target, true);\n                    }\n                }\n            },\n            false,\n        );\n\n        // Enter will fire a `click` event but we still need to manage focus\n        // So we bind to keyup which fires after and set focus here\n        on(menuItem, 'keyup', event => {\n            if (event.which !== 13) {\n                return;\n            }\n\n            controls.focusFirstMenuItem.call(this, null, true);\n        });\n    },\n\n    // Create a settings menu item\n    createMenuItem({ value, list, type, title, badge = null, checked = false }) {\n        const attributes = getAttributesFromSelector(this.config.selectors.inputs[type]);\n\n        const menuItem = createElement(\n            'button',\n            extend(attributes, {\n                type: 'button',\n                role: 'menuitemradio',\n                class: `${this.config.classNames.control} ${attributes.class ? attributes.class : ''}`.trim(),\n                'aria-checked': checked,\n                value,\n            }),\n        );\n\n        const flex = createElement('span');\n\n        // We have to set as HTML incase of special characters\n        flex.innerHTML = title;\n\n        if (is.element(badge)) {\n            flex.appendChild(badge);\n        }\n\n        menuItem.appendChild(flex);\n\n        // Replicate radio button behaviour\n        Object.defineProperty(menuItem, 'checked', {\n            enumerable: true,\n            get() {\n                return menuItem.getAttribute('aria-checked') === 'true';\n            },\n            set(checked) {\n                // Ensure exclusivity\n                if (checked) {\n                    Array.from(menuItem.parentNode.children)\n                        .filter(node => matches(node, '[role=\"menuitemradio\"]'))\n                        .forEach(node => node.setAttribute('aria-checked', 'false'));\n                }\n\n                menuItem.setAttribute('aria-checked', checked ? 'true' : 'false');\n            },\n        });\n\n        this.listeners.bind(\n            menuItem,\n            'click keyup',\n            event => {\n                if (is.keyboardEvent(event) && event.which !== 32) {\n                    return;\n                }\n\n                event.preventDefault();\n                event.stopPropagation();\n\n                menuItem.checked = true;\n\n                switch (type) {\n                    case 'language':\n                        this.currentTrack = Number(value);\n                        break;\n\n                    case 'quality':\n                        this.quality = value;\n                        break;\n\n                    case 'speed':\n                        this.speed = parseFloat(value);\n                        break;\n\n                    default:\n                        break;\n                }\n\n                controls.showMenuPanel.call(this, 'home', is.keyboardEvent(event));\n            },\n            type,\n            false,\n        );\n\n        controls.bindMenuItemShortcuts.call(this, menuItem, type);\n\n        list.appendChild(menuItem);\n    },\n\n    // Format a time for display\n    formatTime(time = 0, inverted = false) {\n        // Bail if the value isn't a number\n        if (!is.number(time)) {\n            return time;\n        }\n\n        // Always display hours if duration is over an hour\n        const forceHours = getHours(this.duration) > 0;\n\n        return formatTime(time, forceHours, inverted);\n    },\n\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n        // Bail if there's no element to display or the value isn't a number\n        if (!is.element(target) || !is.number(time)) {\n            return;\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        target.innerText = controls.formatTime(time, inverted);\n    },\n\n    // Update volume UI and storage\n    updateVolume() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Update range\n        if (is.element(this.elements.inputs.volume)) {\n            controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n        }\n\n        // Update mute state\n        if (is.element(this.elements.buttons.mute)) {\n            this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n        }\n    },\n\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n        if (!is.element(target)) {\n            return;\n        }\n\n        // eslint-disable-next-line\n        target.value = value;\n\n        // Webkit range fill\n        controls.updateRangeFill.call(this, target);\n    },\n\n    // Update <progress> elements\n    updateProgress(event) {\n        if (!this.supported.ui || !is.event(event)) {\n            return;\n        }\n\n        let value = 0;\n\n        const setProgress = (target, input) => {\n            const value = is.number(input) ? input : 0;\n            const progress = is.element(target) ? target : this.elements.display.buffer;\n\n            // Update value and label\n            if (is.element(progress)) {\n                progress.value = value;\n\n                // Update text label inside\n                const label = progress.getElementsByTagName('span')[0];\n                if (is.element(label)) {\n                    label.childNodes[0].nodeValue = value;\n                }\n            }\n        };\n\n        if (event) {\n            switch (event.type) {\n                // Video playing\n                case 'timeupdate':\n                case 'seeking':\n                case 'seeked':\n                    value = getPercentage(this.currentTime, this.duration);\n\n                    // Set seek range value only if it's a 'natural' time event\n                    if (event.type === 'timeupdate') {\n                        controls.setRange.call(this, this.elements.inputs.seek, value);\n                    }\n\n                    break;\n\n                // Check buffer status\n                case 'playing':\n                case 'progress':\n                    setProgress(this.elements.display.buffer, this.buffered * 100);\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    },\n\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n        // Get range from event if event passed\n        const range = is.event(target) ? target.target : target;\n\n        // Needs to be a valid <input type='range'>\n        if (!is.element(range) || range.getAttribute('type') !== 'range') {\n            return;\n        }\n\n        // Set aria values for https://github.com/sampotts/plyr/issues/905\n        if (matches(range, this.config.selectors.inputs.seek)) {\n            range.setAttribute('aria-valuenow', this.currentTime);\n            const currentTime = controls.formatTime(this.currentTime);\n            const duration = controls.formatTime(this.duration);\n            const format = i18n.get('seekLabel', this.config);\n            range.setAttribute(\n                'aria-valuetext',\n                format.replace('{currentTime}', currentTime).replace('{duration}', duration),\n            );\n        } else if (matches(range, this.config.selectors.inputs.volume)) {\n            const percent = range.value * 100;\n            range.setAttribute('aria-valuenow', percent);\n            range.setAttribute('aria-valuetext', `${percent.toFixed(1)}%`);\n        } else {\n            range.setAttribute('aria-valuenow', range.value);\n        }\n\n        // WebKit only\n        if (!browser.isWebkit) {\n            return;\n        }\n\n        // Set CSS custom property\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n        // Bail if setting not true\n        if (\n            !this.config.tooltips.seek ||\n            !is.element(this.elements.inputs.seek) ||\n            !is.element(this.elements.display.seekTooltip) ||\n            this.duration === 0\n        ) {\n            return;\n        }\n\n        // Calculate percentage\n        let percent = 0;\n        const clientRect = this.elements.progress.getBoundingClientRect();\n        const visible = `${this.config.classNames.tooltip}--visible`;\n\n        const toggle = toggle => {\n            toggleClass(this.elements.display.seekTooltip, visible, toggle);\n        };\n\n        // Hide on touch\n        if (this.touch) {\n            toggle(false);\n            return;\n        }\n\n        // Determine percentage, if already visible\n        if (is.event(event)) {\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n        } else if (hasClass(this.elements.display.seekTooltip, visible)) {\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n        } else {\n            return;\n        }\n\n        // Set bounds\n        if (percent < 0) {\n            percent = 0;\n        } else if (percent > 100) {\n            percent = 100;\n        }\n\n        // Display the time a click would seek to\n        controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\n\n        // Set position\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\n\n        // Show/hide the tooltip\n        // If the event is a moues in/out and percentage is inside bounds\n        if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n            toggle(event.type === 'mouseenter');\n        }\n    },\n\n    // Handle time change event\n    timeUpdate(event) {\n        // Only invert if only one time element is displayed and used for both duration and currentTime\n        const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n        // Duration\n        controls.updateTimeDisplay.call(\n            this,\n            this.elements.display.currentTime,\n            invert ? this.duration - this.currentTime : this.currentTime,\n            invert,\n        );\n\n        // Ignore updates while seeking\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\n            return;\n        }\n\n        // Playing progress\n        controls.updateProgress.call(this, event);\n    },\n\n    // Show the duration on metadataloaded or durationchange events\n    durationUpdate() {\n        // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n        if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\n            return;\n        }\n\n        // If duration is the 2**32 (shaka), Infinity (HLS), DASH-IF (Number.MAX_SAFE_INTEGER || Number.MAX_VALUE) indicating live we hide the currentTime and progressbar.\n        // https://github.com/video-dev/hls.js/blob/5820d29d3c4c8a46e8b75f1e3afa3e68c1a9a2db/src/controller/buffer-controller.js#L415\n        // https://github.com/google/shaka-player/blob/4d889054631f4e1cf0fbd80ddd2b71887c02e232/lib/media/streaming_engine.js#L1062\n        // https://github.com/Dash-Industry-Forum/dash.js/blob/69859f51b969645b234666800d4cb596d89c602d/src/dash/models/DashManifestModel.js#L338\n        if (this.duration >= 2 ** 32) {\n            toggleHidden(this.elements.display.currentTime, true);\n            toggleHidden(this.elements.progress, true);\n            return;\n        }\n\n        // Update ARIA values\n        if (is.element(this.elements.inputs.seek)) {\n            this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n        }\n\n        // If there's a spot to display duration\n        const hasDuration = is.element(this.elements.display.duration);\n\n        // If there's only one time display, display duration there\n        if (!hasDuration && this.config.displayDuration && this.paused) {\n            controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n        }\n\n        // If there's a duration element, update content\n        if (hasDuration) {\n            controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n        }\n\n        // Update the tooltip (if visible)\n        controls.updateSeekTooltip.call(this);\n    },\n\n    // Hide/show a tab\n    toggleMenuButton(setting, toggle) {\n        toggleHidden(this.elements.settings.buttons[setting], !toggle);\n    },\n\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n        const pane = this.elements.settings.panels[setting];\n        let value = null;\n        let list = container;\n\n        if (setting === 'captions') {\n            value = this.currentTrack;\n        } else {\n            value = !is.empty(input) ? input : this[setting];\n\n            // Get default\n            if (is.empty(value)) {\n                value = this.config[setting].default;\n            }\n\n            // Unsupported value\n            if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n                this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n                return;\n            }\n\n            // Disabled value\n            if (!this.config[setting].options.includes(value)) {\n                this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n                return;\n            }\n        }\n\n        // Get the list if we need to\n        if (!is.element(list)) {\n            list = pane && pane.querySelector('[role=\"menu\"]');\n        }\n\n        // If there's no list it means it's not been rendered...\n        if (!is.element(list)) {\n            return;\n        }\n\n        // Update the label\n        const label = this.elements.settings.buttons[setting].querySelector(`.${this.config.classNames.menu.value}`);\n        label.innerHTML = controls.getLabel.call(this, setting, value);\n\n        // Find the radio option and check it\n        const target = list && list.querySelector(`[value=\"${value}\"]`);\n\n        if (is.element(target)) {\n            target.checked = true;\n        }\n    },\n\n    // Translate a value into a nice label\n    getLabel(setting, value) {\n        switch (setting) {\n            case 'speed':\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n            case 'quality':\n                if (is.number(value)) {\n                    const label = i18n.get(`qualityLabel.${value}`, this.config);\n\n                    if (!label.length) {\n                        return `${value}p`;\n                    }\n\n                    return label;\n                }\n\n                return toTitleCase(value);\n\n            case 'captions':\n                return captions.getLabel.call(this);\n\n            default:\n                return null;\n        }\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.quality)) {\n            return;\n        }\n\n        const type = 'quality';\n        const list = this.elements.settings.panels.quality.querySelector('[role=\"menu\"]');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\n        }\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the badge HTML for HD, 4K etc\n        const getBadge = quality => {\n            const label = i18n.get(`qualityBadge.${quality}`, this.config);\n\n            if (!label.length) {\n                return null;\n            }\n\n            return controls.createBadge.call(this, label);\n        };\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => {\n                const sorting = this.config.quality.options;\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n            })\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                    badge: getBadge(quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set the looping options\n    /* setLoopMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panels.loop.querySelector('[role=\"menu\"]');\n\n        // Show the pane and tab\n        toggleHidden(this.elements.settings.buttons.loop, false);\n        toggleHidden(this.elements.settings.panels.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.loop.options);\n        controls.toggleMenuButton.call(this, 'loop', toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        options.forEach(option => {\n            const item = createElement('li');\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.captions)) {\n            return;\n        }\n\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panels.captions.querySelector('[role=\"menu\"]');\n        const tracks = captions.getTracks.call(this);\n        const toggle = Boolean(tracks.length);\n\n        // Toggle the pane and tab\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!toggle) {\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n        const list = this.elements.settings.panels.speed.querySelector('[role=\"menu\"]');\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n        const { buttons } = this.elements.settings;\n        const visible = !is.empty(buttons) && Object.values(buttons).some(button => !button.hidden);\n\n        toggleHidden(this.elements.settings.menu, !visible);\n    },\n\n    // Focus the first menu item in a given (or visible) menu\n    focusFirstMenuItem(pane, tabFocus = false) {\n        if (this.elements.settings.popup.hidden) {\n            return;\n        }\n\n        let target = pane;\n\n        if (!is.element(target)) {\n            target = Object.values(this.elements.settings.panels).find(pane => !pane.hidden);\n        }\n\n        const firstItem = target.querySelector('[role^=\"menuitem\"]');\n\n        setFocus.call(this, firstItem, tabFocus);\n    },\n\n    // Show/hide menu\n    toggleMenu(input) {\n        const { popup } = this.elements.settings;\n        const button = this.elements.buttons.settings;\n\n        // Menu and button are required\n        if (!is.element(popup) || !is.element(button)) {\n            return;\n        }\n\n        // True toggle by default\n        const { hidden } = popup;\n        let show = hidden;\n\n        if (is.boolean(input)) {\n            show = input;\n        } else if (is.keyboardEvent(input) && input.which === 27) {\n            show = false;\n        } else if (is.event(input)) {\n            const isMenuItem = popup.contains(input.target);\n\n            // If the click was inside the menu or if the click\n            // wasn't the button or menu item and we're trying to\n            // show the menu (a doc click shouldn't show the menu)\n            if (isMenuItem || (!isMenuItem && input.target !== button && show)) {\n                return;\n            }\n        }\n\n        // Set button attributes\n        button.setAttribute('aria-expanded', show);\n\n        // Show the actual popup\n        toggleHidden(popup, !show);\n\n        // Add class hook\n        toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n        // Focus the first item if key interaction\n        if (show && is.keyboardEvent(input)) {\n            controls.focusFirstMenuItem.call(this, null, true);\n        } else if (!show && !hidden) {\n            // If closing, re-focus the button\n            setFocus.call(this, button, is.keyboardEvent(input));\n        }\n    },\n\n    // Get the natural size of a menu panel\n    getMenuSize(tab) {\n        const clone = tab.cloneNode(true);\n        clone.style.position = 'absolute';\n        clone.style.opacity = 0;\n        clone.removeAttribute('hidden');\n\n        // Append to parent so we get the \"real\" size\n        tab.parentNode.appendChild(clone);\n\n        // Get the sizes before we remove\n        const width = clone.scrollWidth;\n        const height = clone.scrollHeight;\n\n        // Remove from the DOM\n        removeElement(clone);\n\n        return {\n            width,\n            height,\n        };\n    },\n\n    // Show a panel in the menu\n    showMenuPanel(type = '', tabFocus = false) {\n        const target = document.getElementById(`plyr-settings-${this.id}-${type}`);\n\n        // Nothing to show, bail\n        if (!is.element(target)) {\n            return;\n        }\n\n        // Hide all other panels\n        const container = target.parentNode;\n        const current = Array.from(container.children).find(node => !node.hidden);\n\n        // If we can do fancy animations, we'll animate the height/width\n        if (support.transitions && !support.reducedMotion) {\n            // Set the current width as a base\n            container.style.width = `${current.scrollWidth}px`;\n            container.style.height = `${current.scrollHeight}px`;\n\n            // Get potential sizes\n            const size = controls.getMenuSize.call(this, target);\n\n            // Restore auto height/width\n            const restore = event => {\n                // We're only bothered about height and width on the container\n                if (event.target !== container || !['width', 'height'].includes(event.propertyName)) {\n                    return;\n                }\n\n                // Revert back to auto\n                container.style.width = '';\n                container.style.height = '';\n\n                // Only listen once\n                off.call(this, container, transitionEndEvent, restore);\n            };\n\n            // Listen for the transition finishing and restore auto height/width\n            on.call(this, container, transitionEndEvent, restore);\n\n            // Set dimensions to target\n            container.style.width = `${size.width}px`;\n            container.style.height = `${size.height}px`;\n        }\n\n        // Set attributes on current tab\n        toggleHidden(current, true);\n\n        // Set attributes on target\n        toggleHidden(target, false);\n\n        // Focus the first item\n        controls.focusFirstMenuItem.call(this, target, tabFocus);\n    },\n\n    // Set the download link\n    setDownloadLink() {\n        const button = this.elements.buttons.download;\n\n        // Bail if no button\n        if (!is.element(button)) {\n            return;\n        }\n\n        // Set download link\n        button.setAttribute('href', this.download);\n    },\n\n    // Build the default HTML\n    // TODO: Set order based on order in the config.controls array?\n    create(data) {\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        // Restart button\n        if (this.config.controls.includes('restart')) {\n            container.appendChild(controls.createButton.call(this, 'restart'));\n        }\n\n        // Rewind button\n        if (this.config.controls.includes('rewind')) {\n            container.appendChild(controls.createButton.call(this, 'rewind'));\n        }\n\n        // Play/Pause button\n        if (this.config.controls.includes('play')) {\n            container.appendChild(controls.createButton.call(this, 'play'));\n        }\n\n        // Volume controls\n        if (this.config.controls.includes('mute')) {\n            container.appendChild(controls.createButton.call(this, 'mute'));\n        }\n\n        // Media current time display\n        if (this.config.controls.includes('current-time')) {\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\n        }\n\n        // Fast forward button\n        if (this.config.controls.includes('fast-forward')) {\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\n        }\n\n        // Progress\n        if (this.config.controls.includes('progress')) {\n            const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n            // Seek range slider\n            progress.appendChild(\n                controls.createRange.call(this, 'seek', {\n                    id: `plyr-seek-${data.id}`,\n                }),\n            );\n\n            // Buffer progress\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n            // TODO: Add loop display indicator\n\n            // Seek tooltip\n            if (this.config.tooltips.seek) {\n                const tooltip = createElement(\n                    'span',\n                    {\n                        class: this.config.classNames.tooltip,\n                    },\n                    '00:00',\n                );\n\n                progress.appendChild(tooltip);\n                this.elements.display.seekTooltip = tooltip;\n            }\n\n            this.elements.progress = progress;\n            container.appendChild(this.elements.progress);\n        }\n\n        // Media duration display\n        if (this.config.controls.includes('duration')) {\n            container.appendChild(controls.createTime.call(this, 'duration'));\n        }\n\n        // Volume controls\n        // if (this.config.controls.includes('mute') || this.config.controls.includes('volume')) {\n        //     const volume = createElement('div', {\n        //         class: 'plyr__volume',\n        //     });\n        //\n        //     // Toggle mute button\n        //     if (this.config.controls.includes('mute')) {\n        //         volume.appendChild(controls.createButton.call(this, 'mute'));\n        //     }\n        //\n        //     // Volume range control\n        //     if (this.config.controls.includes('volume')) {\n        //         // Set the attributes\n        //         const attributes = {\n        //             max: 1,\n        //             step: 0.05,\n        //             value: this.config.volume,\n        //         };\n        //\n        //         // Create the volume range slider\n        //         volume.appendChild(\n        //             controls.createRange.call(\n        //                 this,\n        //                 'volume',\n        //                 extend(attributes, {\n        //                     id: `plyr-volume-${data.id}`,\n        //                 }),\n        //             ),\n        //         );\n        //\n        //         this.elements.volume = volume;\n        //     }\n        //\n        //     container.appendChild(volume);\n        // }\n\n        // Toggle captions button\n        if (this.config.controls.includes('captions')) {\n            container.appendChild(controls.createButton.call(this, 'captions'));\n        }\n\n        // Settings button / menu\n        if (this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n            const control = createElement('div', {\n                class: 'plyr__menu',\n                hidden: '',\n            });\n\n            control.appendChild(\n                controls.createButton.call(this, 'settings', {\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}`,\n                    'aria-expanded': false,\n                }),\n            );\n\n            const popup = createElement('div', {\n                class: 'plyr__menu__container',\n                id: `plyr-settings-${data.id}`,\n                hidden: '',\n            });\n\n            const inner = createElement('div');\n\n            const home = createElement('div', {\n                id: `plyr-settings-${data.id}-home`,\n            });\n\n            // Create the menu\n            const menu = createElement('div', {\n                role: 'menu',\n            });\n\n            home.appendChild(menu);\n            inner.appendChild(home);\n            this.elements.settings.panels.home = home;\n\n            // Build the menu items\n            this.config.settings.forEach(type => {\n                // TODO: bundle this with the createMenuItem helper and bindings\n                const menuItem = createElement(\n                    'button',\n                    extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                        role: 'menuitem',\n                        'aria-haspopup': true,\n                        hidden: '',\n                    }),\n                );\n\n                // Bind menu shortcuts for keyboard users\n                controls.bindMenuItemShortcuts.call(this, menuItem, type);\n\n                // Show menu on click\n                on(menuItem, 'click', () => {\n                    controls.showMenuPanel.call(this, type, false);\n                });\n\n                const flex = createElement('span', null, i18n.get(type, this.config));\n\n                const value = createElement('span', {\n                    class: this.config.classNames.menu.value,\n                });\n\n                // Speed contains HTML entities\n                value.innerHTML = data[type];\n\n                flex.appendChild(value);\n                menuItem.appendChild(flex);\n                menu.appendChild(menuItem);\n\n                // Build the panes\n                const pane = createElement('div', {\n                    id: `plyr-settings-${data.id}-${type}`,\n                    hidden: '',\n                });\n\n                // Back button\n                const backButton = createElement('button', {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                });\n\n                // Visible label\n                backButton.appendChild(\n                    createElement(\n                        'span',\n                        {\n                            'aria-hidden': true,\n                        },\n                        i18n.get(type, this.config),\n                    ),\n                );\n\n                // Screen reader label\n                backButton.appendChild(\n                    createElement(\n                        'span',\n                        {\n                            class: this.config.classNames.hidden,\n                        },\n                        i18n.get('menuBack', this.config),\n                    ),\n                );\n\n                // Go back via keyboard\n                on(\n                    pane,\n                    'keydown',\n                    event => {\n                        // We only care about <-\n                        if (event.which !== 37) {\n                            return;\n                        }\n\n                        // Prevent seek\n                        event.preventDefault();\n                        event.stopPropagation();\n\n                        // Show the respective menu\n                        controls.showMenuPanel.call(this, 'home', true);\n                    },\n                    false,\n                );\n\n                // Go back via button click\n                on(backButton, 'click', () => {\n                    controls.showMenuPanel.call(this, 'home', false);\n                });\n\n                // Add to pane\n                pane.appendChild(backButton);\n\n                // Menu\n                pane.appendChild(\n                    createElement('div', {\n                        role: 'menu',\n                    }),\n                );\n\n                inner.appendChild(pane);\n\n                this.elements.settings.buttons[type] = menuItem;\n                this.elements.settings.panels[type] = pane;\n            });\n\n            popup.appendChild(inner);\n            control.appendChild(popup);\n            container.appendChild(control);\n\n            this.elements.settings.popup = popup;\n            this.elements.settings.menu = control;\n        }\n\n        // Picture in picture button\n        if (this.config.controls.includes('pip') && support.pip) {\n            container.appendChild(controls.createButton.call(this, 'pip'));\n        }\n\n        // Airplay button\n        if (this.config.controls.includes('airplay') && support.airplay) {\n            container.appendChild(controls.createButton.call(this, 'airplay'));\n        }\n\n        // Download button\n        if (this.config.controls.includes('download')) {\n            const attributes = {\n                element: 'a',\n                href: this.download,\n                target: '_blank',\n            };\n\n            const { download } = this.config.urls;\n\n            if (!is.url(download) && this.isEmbed) {\n                extend(attributes, {\n                    icon: `logo-${this.provider}`,\n                    label: this.provider,\n                });\n            }\n\n            container.appendChild(controls.createButton.call(this, 'download', attributes));\n        }\n\n        // Toggle fullscreen button\n        if (this.config.controls.includes('fullscreen')) {\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\n        }\n\n        // Larger overlaid play button\n        if (this.config.controls.includes('play-large')) {\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\n        }\n\n        this.elements.controls = container;\n\n        // Set available quality levels\n        if (this.isHTML5) {\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        controls.setSpeedMenu.call(this);\n\n        return container;\n    },\n\n    // Insert controls\n    inject() {\n        // Sprite\n        if (this.config.loadSprite || this.config.inlineSvg) {\n            const icon = controls.getIconUrl.call(this);\n\n            // Only load external sprite using AJAX\n            if (icon.cors) {\n                loadSprite(icon.url, 'sprite-plyr', {inlineSvg: this.config.inlineSvg});\n            }\n        }\n\n        // Create a unique ID\n        this.id = Math.floor(Math.random() * 10000);\n\n        // Null by default\n        let container = null;\n        this.elements.controls = null;\n\n        // Set template properties\n        const props = {\n            id: this.id,\n            seektime: this.config.seekTime,\n            title: this.config.title,\n        };\n        let update = true;\n\n        // If function, run it and use output\n        if (is.function(this.config.controls)) {\n            this.config.controls = this.config.controls.call(this, props);\n        }\n\n        // Convert falsy controls to empty array (primarily for empty strings)\n        if (!this.config.controls) {\n            this.config.controls = [];\n        }\n\n        if (is.element(this.config.controls) || is.string(this.config.controls)) {\n            // HTMLElement or Non-empty string passed as the option\n            container = this.config.controls;\n        } else {\n            // Create controls\n            container = controls.create.call(this, {\n                id: this.id,\n                seektime: this.config.seekTime,\n                speed: this.speed,\n                quality: this.quality,\n                captions: captions.getLabel.call(this),\n                // TODO: Looping\n                // loop: 'None',\n            });\n            update = false;\n        }\n\n        // Replace props with their value\n        const replace = input => {\n            let result = input;\n\n            Object.entries(props).forEach(([key, value]) => {\n                result = replaceAll(result, `{${key}}`, value);\n            });\n\n            return result;\n        };\n\n        // Update markup\n        if (update) {\n            if (is.string(this.config.controls)) {\n                container = replace(container);\n            } else if (is.element(container)) {\n                container.innerHTML = replace(container.innerHTML);\n            }\n        }\n\n        // Controls container\n        let target;\n\n        // Inject to custom location\n        if (is.string(this.config.selectors.controls.container)) {\n            target = document.querySelector(this.config.selectors.controls.container);\n        }\n\n        // Inject into the container by default\n        if (!is.element(target)) {\n            target = this.elements.container;\n        }\n\n        // Inject controls HTML (needs to be before captions, hence \"afterbegin\")\n        const insertMethod = is.element(container) ? 'insertAdjacentElement' : 'insertAdjacentHTML';\n        target[insertMethod]('afterbegin', container);\n\n        // Find the elements if need be\n        if (!is.element(this.elements.controls)) {\n            controls.findElements.call(this);\n        }\n\n        // Add pressed property to buttons\n        if (!is.empty(this.elements.buttons)) {\n            const addProperty = button => {\n                const className = this.config.classNames.controlPressed;\n                Object.defineProperty(button, 'pressed', {\n                    enumerable: true,\n                    get() {\n                        return hasClass(button, className);\n                    },\n                    set(pressed = false) {\n                        toggleClass(button, className, pressed);\n                    },\n                });\n            };\n\n            // Toggle classname when pressed property is set\n            Object.values(this.elements.buttons)\n                .filter(Boolean)\n                .forEach(button => {\n                    if (is.array(button) || is.nodeList(button)) {\n                        Array.from(button).filter(Boolean).forEach(addProperty);\n                    } else {\n                        addProperty(button);\n                    }\n                });\n        }\n\n        // Edge sometimes doesn't finish the paint so force a redraw\n        if (window.navigator.userAgent.includes('Edge')) {\n            repaint(target);\n        }\n\n        // Setup tooltips\n        // if (this.config.tooltips.controls) {\n        //     const { classNames, selectors } = this.config;\n        //     const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n        //     const labels = getElements.call(this, selector);\n        //\n        //     Array.from(labels).forEach(label => {\n        //         toggleClass(label, this.config.classNames.hidden, false);\n        //         toggleClass(label, this.config.classNames.tooltip, true);\n        //     });\n        // }\n    },\n};\n\nexport default controls;\n","// ==========================================================================\n// URL utils\n// ==========================================================================\n\nimport is from './is';\n\n/**\n * Parse a string to a URL object\n * @param {string} input - the URL to be parsed\n * @param {boolean} safe - failsafe parsing\n */\nexport function parseUrl(input, safe = true) {\n    let url = input;\n\n    if (safe) {\n        const parser = document.createElement('a');\n        parser.href = url;\n        url = parser.href;\n    }\n\n    try {\n        return new URL(url);\n    } catch (e) {\n        return null;\n    }\n}\n\n// Convert object to URLSearchParams\nexport function buildUrlParams(input) {\n    const params = new URLSearchParams();\n\n    if (is.object(input)) {\n        Object.entries(input).forEach(([key, value]) => {\n            params.set(key, value);\n        });\n    }\n\n    return params;\n}\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport controls from './controls';\nimport support from './support';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n    createElement,\n    emptyElement,\n    getAttributesFromSelector,\n    insertAfter,\n    removeElement,\n    toggleClass,\n} from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport fetch from './utils/fetch';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport { getHTML } from './utils/strings';\nimport { parseUrl } from './utils/urls';\n\nconst captions = {\n    // Setup captions\n    setup() {\n        // Requires UI support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Only Vimeo and HTML5 video supported at this point\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n            // Clear menu and hide\n            if (\n                is.array(this.config.controls) &&\n                this.config.controls.includes('settings') &&\n                this.config.settings.includes('captions')\n            ) {\n                controls.setCaptionsMenu.call(this);\n            }\n\n            return;\n        }\n\n        // Inject the container\n        if (!is.element(this.elements.captions)) {\n            this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n\n            insertAfter(this.elements.captions, this.elements.wrapper);\n        }\n\n        // Fix IE captions if CORS is used\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\n        if (browser.isIE && window.URL) {\n            const elements = this.media.querySelectorAll('track');\n\n            Array.from(elements).forEach(track => {\n                const src = track.getAttribute('src');\n                const url = parseUrl(src);\n\n                if (\n                    url !== null &&\n                    url.hostname !== window.location.href.hostname &&\n                    ['http:', 'https:'].includes(url.protocol)\n                ) {\n                    fetch(src, 'blob')\n                        .then(blob => {\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\n                        })\n                        .catch(() => {\n                            removeElement(track);\n                        });\n                }\n            });\n        }\n\n        // Get and set initial data\n        // The \"preferred\" options are not realized unless / until the wanted language has a match\n        // * languages: Array of user's browser languages.\n        // * language:  The language preferred by user settings or config\n        // * active:    The state preferred by user settings or config\n        // * toggled:   The real captions state\n\n        const browserLanguages = navigator.languages || [navigator.language || navigator.userLanguage || 'en'];\n        const languages = dedupe(browserLanguages.map(language => language.split('-')[0]));\n\n        let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n        // Use first browser language when language is 'auto'\n        if (language === 'auto') {\n            [language] = languages;\n        }\n\n        let active = this.storage.get('captions');\n        if (!is.boolean(active)) {\n            ({ active } = this.config.captions);\n        }\n\n        Object.assign(this.captions, {\n            toggled: false,\n            active,\n            language,\n            languages,\n        });\n\n        // Watch changes to textTracks and update captions menu\n        if (this.isHTML5) {\n            const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n            on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n        }\n\n        // Update available languages in list next tick (the event must not be triggered before the listeners)\n        setTimeout(captions.update.bind(this), 0);\n    },\n\n    // Update available language options in settings based on tracks\n    update() {\n        const tracks = captions.getTracks.call(this, true);\n        // Get the wanted language\n        const { active, language, meta, currentTrackNode } = this.captions;\n        const languageExists = Boolean(tracks.find(track => track.language === language));\n\n        // Handle tracks (add event listener and \"pseudo\"-default)\n        if (this.isHTML5 && this.isVideo) {\n            tracks.filter(track => !meta.get(track)).forEach(track => {\n                this.debug.log('Track added', track);\n                // Attempt to store if the original dom element was \"default\"\n                meta.set(track, {\n                    default: track.mode === 'showing',\n                });\n\n                // Turn off native caption rendering to avoid double captions\n                track.mode = 'hidden';\n\n                // Add event listener for cue changes\n                on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n            });\n        }\n\n        // Update language first time it matches, or if the previous matching track was removed\n        if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\n            captions.setLanguage.call(this, language);\n            captions.toggle.call(this, active && languageExists);\n        }\n\n        // Enable or disable captions based on track length\n        toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n\n        // Update available languages in list\n        if ((this.config.controls || []).includes('settings') && this.config.settings.includes('captions')) {\n            controls.setCaptionsMenu.call(this);\n        }\n    },\n\n    // Toggle captions display\n    // Used internally for the toggleCaptions method, with the passive option forced to false\n    toggle(input, passive = true) {\n        // If there's no full support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        const { toggled } = this.captions; // Current state\n        const activeClass = this.config.classNames.captions.active;\n\n        // Get the next state\n        // If the method is called without parameter, toggle based on current value\n        const active = is.nullOrUndefined(input) ? !toggled : input;\n\n        // Update state and trigger event\n        if (active !== toggled) {\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.active = active;\n                this.storage.set({ captions: active });\n            }\n\n            // Force language if the call isn't passive and there is no matching language to toggle to\n            if (!this.language && active && !passive) {\n                const tracks = captions.getTracks.call(this);\n                const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n                // Override user preferences to avoid switching languages if a matching track is added\n                this.captions.language = track.language;\n\n                // Set caption, but don't store in localStorage as user preference\n                captions.set.call(this, tracks.indexOf(track));\n                return;\n            }\n\n            // Toggle button if it's enabled\n            if (this.elements.buttons.captions) {\n                this.elements.buttons.captions.pressed = active;\n            }\n\n            // Add class hook\n            toggleClass(this.elements.container, activeClass, active);\n\n            this.captions.toggled = active;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // Trigger event (not used internally)\n            triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n        }\n    },\n\n    // Set captions by track index\n    // Used internally for the currentTrack setter with the passive option forced to false\n    set(index, passive = true) {\n        const tracks = captions.getTracks.call(this);\n\n        // Disable captions if setting to -1\n        if (index === -1) {\n            captions.toggle.call(this, false, passive);\n            return;\n        }\n\n        if (!is.number(index)) {\n            this.debug.warn('Invalid caption argument', index);\n            return;\n        }\n\n        if (!(index in tracks)) {\n            this.debug.warn('Track not found', index);\n            return;\n        }\n\n        if (this.captions.currentTrack !== index) {\n            this.captions.currentTrack = index;\n            const track = tracks[index];\n            const { language } = track || {};\n\n            // Store reference to node for invalidation on remove\n            this.captions.currentTrackNode = track;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.language = language;\n                this.storage.set({ language });\n            }\n\n            // Handle Vimeo captions\n            if (this.isVimeo) {\n                this.embed.enableTextTrack(language);\n            }\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'languagechange');\n        }\n\n        // Show captions\n        captions.toggle.call(this, true, passive);\n\n        if (this.isHTML5 && this.isVideo) {\n            // If we change the active track while a cue is already displayed we need to update it\n            captions.updateCues.call(this);\n        }\n    },\n\n    // Set captions by language\n    // Used internally for the language setter with the passive option forced to false\n    setLanguage(input, passive = true) {\n        if (!is.string(input)) {\n            this.debug.warn('Invalid language argument', input);\n            return;\n        }\n        // Normalize\n        const language = input.toLowerCase();\n        this.captions.language = language;\n\n        // Set currentTrack\n        const tracks = captions.getTracks.call(this);\n        const track = captions.findTrack.call(this, [language]);\n        captions.set.call(this, tracks.indexOf(track), passive);\n    },\n\n    // Get current valid caption tracks\n    // If update is false it will also ignore tracks without metadata\n    // This is used to \"freeze\" the language options when captions.update is false\n    getTracks(update = false) {\n        // Handle media or textTracks missing or null\n        const tracks = Array.from((this.media || {}).textTracks || []);\n        // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n        // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n        return tracks\n            .filter(track => !this.isHTML5 || update || this.captions.meta.has(track))\n            .filter(track => ['captions', 'subtitles'].includes(track.kind));\n    },\n\n    // Match tracks based on languages and get the first\n    findTrack(languages, force = false) {\n        const tracks = captions.getTracks.call(this);\n        const sortIsDefault = track => Number((this.captions.meta.get(track) || {}).default);\n        const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n        let track;\n        languages.every(language => {\n            track = sorted.find(track => track.language === language);\n            return !track; // Break iteration if there is a match\n        });\n        // If no match is found but is required, get first\n        return track || (force ? sorted[0] : undefined);\n    },\n\n    // Get the current track\n    getCurrentTrack() {\n        return captions.getTracks.call(this)[this.currentTrack];\n    },\n\n    // Get UI label for track\n    getLabel(track) {\n        let currentTrack = track;\n\n        if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n            currentTrack = captions.getCurrentTrack.call(this);\n        }\n\n        if (is.track(currentTrack)) {\n            if (!is.empty(currentTrack.label)) {\n                return currentTrack.label;\n            }\n\n            if (!is.empty(currentTrack.language)) {\n                return track.language.toUpperCase();\n            }\n\n            return i18n.get('enabled', this.config);\n        }\n\n        return i18n.get('disabled', this.config);\n    },\n\n    // Update captions using current track's active cues\n    // Also optional array argument in case there isn't any track (ex: vimeo)\n    updateCues(input) {\n        // Requires UI\n        if (!this.supported.ui) {\n            return;\n        }\n\n        if (!is.element(this.elements.captions)) {\n            this.debug.warn('No captions element to render to');\n            return;\n        }\n\n        // Only accept array or empty input\n        if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n            this.debug.warn('updateCues: Invalid input', input);\n            return;\n        }\n\n        let cues = input;\n\n        // Get cues from track\n        if (!cues) {\n            const track = captions.getCurrentTrack.call(this);\n            cues = Array.from((track || {}).activeCues || [])\n                .map(cue => cue.getCueAsHTML())\n                .map(getHTML);\n        }\n\n        // Set new caption text\n        const content = cues.map(cueText => cueText.trim()).join('\\n');\n        const changed = content !== this.elements.captions.innerHTML;\n\n        if (changed) {\n            // Empty the container and create a new child element\n            emptyElement(this.elements.captions);\n            const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n            caption.innerHTML = content;\n            this.elements.captions.appendChild(caption);\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'cuechange');\n        }\n    },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n    // Disable\n    enabled: true,\n\n    // Custom media title\n    title: '',\n\n    // Logging to console\n    debug: false,\n\n    // Auto play (if supported)\n    autoplay: false,\n\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n\n    // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\n    // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\n    playsinline: true,\n\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n\n    // Default volume\n    volume: 1,\n    muted: false,\n\n    // Pass a custom duration\n    duration: null,\n\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n\n    // Invert the current time to be a countdown\n    invertTime: true,\n\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n\n    // Aspect ratio (for embeds)\n    ratio: '16:9',\n\n    // Click video container to play/pause\n    clickToPlay: true,\n\n    // Auto hide the controls\n    hideControls: true,\n\n    // Reset to start when playback ended\n    resetOnEnd: false,\n\n    // Disable the standard context menu\n    disableContextMenu: true,\n\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.4.7/plyr.svg',\n\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n    // Quality default\n    quality: {\n        default: 576,\n        options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240],\n    },\n\n    // Set loops\n    loop: {\n        active: false,\n        // start: null,\n        // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n        selected: 1,\n        options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\n    },\n\n    // Keyboard shortcut settings\n    keyboard: {\n        focused: true,\n        global: false,\n    },\n\n    // Display tooltips\n    tooltips: {\n        controls: false,\n        seek: true,\n    },\n\n    // Captions settings\n    captions: {\n        active: false,\n        language: 'auto',\n        // Listen to new tracks added after Plyr is initialized.\n        // This is needed for streaming captions, but may result in unselectable options\n        update: false,\n    },\n\n    // Fullscreen settings\n    fullscreen: {\n        enabled: true, // Allow fullscreen?\n        fallback: true, // Fallback for vintage browsers\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    },\n\n    // Local storage\n    storage: {\n        enabled: true,\n        key: 'plyr',\n    },\n\n    // Default controls\n    controls: [\n        'play-large',\n        // 'restart',\n        // 'rewind',\n        'play',\n        // 'fast-forward',\n        'progress',\n        'current-time',\n        'mute',\n        'volume',\n        'captions',\n        'settings',\n        'pip',\n        'airplay',\n        // 'download',\n        'fullscreen',\n    ],\n    settings: ['captions', 'quality', 'speed'],\n\n    // Localisation\n    i18n: {\n        restart: 'Restart',\n        rewind: 'Rewind {seektime}s',\n        play: 'Play',\n        pause: 'Pause',\n        fastForward: 'Forward {seektime}s',\n        seek: 'Seek',\n        seekLabel: '{currentTime} of {duration}',\n        played: 'Played',\n        buffered: 'Buffered',\n        currentTime: 'Current time',\n        duration: 'Duration',\n        volume: 'Volume',\n        mute: 'Mute',\n        unmute: 'Unmute',\n        enableCaptions: 'Enable captions',\n        disableCaptions: 'Disable captions',\n        download: 'Download',\n        enterFullscreen: 'Enter fullscreen',\n        exitFullscreen: 'Exit fullscreen',\n        frameTitle: 'Player for {title}',\n        captions: 'Captions',\n        settings: 'Settings',\n        menuBack: 'Go back to previous menu',\n        speed: 'Speed',\n        normal: 'Normal',\n        quality: 'Quality',\n        loop: 'Loop',\n        start: 'Start',\n        end: 'End',\n        all: 'All',\n        reset: 'Reset',\n        disabled: 'Disabled',\n        enabled: 'Enabled',\n        advertisement: 'Ad',\n        qualityBadge: {\n            2160: '4K',\n            1440: 'HD',\n            1080: 'HD',\n            720: 'HD',\n            576: 'SD',\n            480: 'SD',\n        },\n    },\n\n    // URLs\n    urls: {\n        download: null,\n        vimeo: {\n            sdk: 'https://player.vimeo.com/api/player.js',\n            iframe: 'https://player.vimeo.com/video/{0}?{1}',\n            api: 'https://vimeo.com/api/v2/video/{0}.json',\n        },\n        youtube: {\n            sdk: 'https://www.youtube.com/iframe_api',\n            api:\n                'https://www.googleapis.com/youtube/v3/videos?id={0}&key={1}&fields=items(snippet(title))&part=snippet',\n        },\n        googleIMA: {\n            sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n        },\n    },\n\n    // Custom control listeners\n    listeners: {\n        seek: null,\n        play: null,\n        pause: null,\n        restart: null,\n        rewind: null,\n        fastForward: null,\n        mute: null,\n        volume: null,\n        captions: null,\n        download: null,\n        fullscreen: null,\n        pip: null,\n        airplay: null,\n        speed: null,\n        quality: null,\n        loop: null,\n        language: null,\n    },\n\n    // Events to watch and bubble\n    events: [\n        // Events to watch on HTML5 media elements and bubble\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n        'ended',\n        'progress',\n        'stalled',\n        'playing',\n        'waiting',\n        'canplay',\n        'canplaythrough',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'timeupdate',\n        'volumechange',\n        'play',\n        'pause',\n        'error',\n        'seeking',\n        'seeked',\n        'emptied',\n        'ratechange',\n        'cuechange',\n\n        // Custom events\n        'download',\n        'enterfullscreen',\n        'exitfullscreen',\n        'captionsenabled',\n        'captionsdisabled',\n        'languagechange',\n        'controlshidden',\n        'controlsshown',\n        'ready',\n\n        // YouTube\n        'statechange',\n\n        // Quality\n        'qualitychange',\n\n        // Ads\n        'adsloaded',\n        'adscontentpause',\n        'adscontentresume',\n        'adstarted',\n        'adsmidpoint',\n        'adscomplete',\n        'adsallcomplete',\n        'adsimpression',\n        'adsclick',\n    ],\n\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n        editable: 'input, textarea, select, [contenteditable]',\n        container: '.plyr',\n        controls: {\n            container: null,\n            wrapper: '.plyr__controls',\n        },\n        labels: '[data-plyr]',\n        buttons: {\n            play: '[data-plyr=\"play\"]',\n            pause: '[data-plyr=\"pause\"]',\n            restart: '[data-plyr=\"restart\"]',\n            rewind: '[data-plyr=\"rewind\"]',\n            fastForward: '[data-plyr=\"fast-forward\"]',\n            mute: '[data-plyr=\"mute\"]',\n            captions: '[data-plyr=\"captions\"]',\n            download: '[data-plyr=\"download\"]',\n            fullscreen: '[data-plyr=\"fullscreen\"]',\n            pip: '[data-plyr=\"pip\"]',\n            airplay: '[data-plyr=\"airplay\"]',\n            settings: '[data-plyr=\"settings\"]',\n            loop: '[data-plyr=\"loop\"]',\n        },\n        inputs: {\n            seek: '[data-plyr=\"seek\"]',\n            volume: '[data-plyr=\"volume\"]',\n            speed: '[data-plyr=\"speed\"]',\n            language: '[data-plyr=\"language\"]',\n            quality: '[data-plyr=\"quality\"]',\n        },\n        display: {\n            currentTime: '.plyr__time--current',\n            duration: '.plyr__time--duration',\n            buffer: '.plyr__progress__buffer',\n            loop: '.plyr__progress__loop', // Used later\n            volume: '.plyr__volume--display',\n        },\n        progress: '.plyr__progress',\n        captions: '.plyr__captions',\n        caption: '.plyr__caption',\n        menu: {\n            quality: '.js-plyr__menu__list--quality',\n        },\n    },\n\n    // Class hooks added to the player in different states\n    classNames: {\n        type: 'plyr--{0}',\n        provider: 'plyr--{0}',\n        video: 'plyr__video-wrapper',\n        videoInitFlag: 'plyr__is-video-init',\n        embed: 'plyr__video-embed',\n        embedContainer: 'plyr__video-embed__container',\n        poster: 'plyr__poster',\n        posterEnabled: 'plyr__poster-enabled',\n        ads: 'plyr__ads',\n        control: 'plyr__control',\n        controlPressed: 'plyr__control--pressed',\n        playing: 'plyr--playing',\n        paused: 'plyr--paused',\n        stopped: 'plyr--stopped',\n        loading: 'plyr--loading',\n        hover: 'plyr--hover',\n        tooltip: 'plyr__tooltip',\n        cues: 'plyr__cues',\n        hidden: 'plyr__sr-only',\n        hideControls: 'plyr--hide-controls',\n        isIos: 'plyr--is-ios',\n        isTouch: 'plyr--is-touch',\n        uiSupported: 'plyr--full-ui',\n        noTransition: 'plyr--no-transition',\n        display: {\n            time: 'plyr__time',\n        },\n        menu: {\n            value: 'plyr__menu__value',\n            badge: 'plyr__badge',\n            open: 'plyr--menu-open',\n        },\n        captions: {\n            enabled: 'plyr--captions-enabled',\n            active: 'plyr--captions-active',\n        },\n        fullscreen: {\n            enabled: 'plyr--fullscreen-enabled',\n            fallback: 'plyr--fullscreen-fallback',\n        },\n        pip: {\n            supported: 'plyr--pip-supported',\n            active: 'plyr--pip-active',\n        },\n        airplay: {\n            supported: 'plyr--airplay-supported',\n            active: 'plyr--airplay-active',\n        },\n        tabFocus: 'plyr__tab-focus',\n    },\n\n    // Embed attributes\n    attributes: {\n        embed: {\n            provider: 'data-plyr-provider',\n            id: 'data-plyr-embed-id',\n        },\n    },\n\n    // API keys\n    keys: {\n        google: null,\n    },\n\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n        enabled: false,\n        publisherId: '',\n    },\n};\n\nexport default defaults;\n","// ==========================================================================\n// Plyr states\n// ==========================================================================\n\nexport const pip = {\n    active: 'picture-in-picture',\n    inactive: 'inline',\n};\n\nexport default { pip };\n","// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo',\n};\n\nexport const types = {\n    audio: 'audio',\n    video: 'video',\n};\n\n/**\n * Get provider by URL\n * @param {String} url\n */\nexport function getProviderByUrl(url) {\n    // YouTube\n    if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n        return providers.youtube;\n    }\n\n    // Vimeo\n    if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n        return providers.vimeo;\n    }\n\n    return null;\n}\n\nexport default { providers, types };\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n    constructor(enabled = false) {\n        this.enabled = window.console && enabled;\n\n        if (this.enabled) {\n            this.log('Debugging enabled');\n        }\n    }\n\n    get log() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n\n    get warn() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n\n    get error() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// https://webkit.org/blog/7929/designing-websites-for-iphone-x/\n// ==========================================================================\n\nimport { repaint } from './utils/animation';\nimport browser from './utils/browser';\nimport { hasClass, toggleClass, trapFocus } from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nfunction onChange() {\n    if (!this.enabled) {\n        return;\n    }\n\n    // Update toggle button\n    const button = this.player.elements.buttons.fullscreen;\n    if (is.element(button)) {\n        button.pressed = this.active;\n    }\n\n    // Trigger an event\n    triggerEvent.call(this.player, this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n\n    // Trap focus in container\n    if (!browser.isIos) {\n        trapFocus.call(this.player, this.target, this.active);\n    }\n}\n\nfunction toggleFallback(toggle = false) {\n    // Store or restore scroll position\n    if (toggle) {\n        this.scrollPosition = {\n            x: window.scrollX || 0,\n            y: window.scrollY || 0,\n        };\n    } else {\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n\n    // Force full viewport on iPhone X+\n    if (browser.isIos) {\n        let viewport = document.head.querySelector('meta[name=\"viewport\"]');\n        const property = 'viewport-fit=cover';\n\n        // Inject the viewport meta if required\n        if (!viewport) {\n            viewport = document.createElement('meta');\n            viewport.setAttribute('name', 'viewport');\n        }\n\n        // Check if the property already exists\n        const hasProperty = is.string(viewport.content) && viewport.content.includes(property);\n\n        if (toggle) {\n            this.cleanupViewport = !hasProperty;\n\n            if (!hasProperty) {\n                viewport.content += `,${property}`;\n            }\n        } else if (this.cleanupViewport) {\n            viewport.content = viewport.content\n                .split(',')\n                .filter(part => part.trim() !== property)\n                .join(',');\n        }\n\n        // Force a repaint as sometimes Safari doesn't want to fill the screen\n        setTimeout(() => repaint(this.target), 100);\n    }\n\n    // Toggle button and fire events\n    onChange.call(this);\n}\n\nclass Fullscreen {\n    constructor(player) {\n        // Keep reference to parent\n        this.player = player;\n\n        // Get prefix\n        this.prefix = Fullscreen.prefix;\n        this.property = Fullscreen.property;\n\n        // Scroll position\n        this.scrollPosition = { x: 0, y: 0 };\n\n        // Register event listeners\n        // Handle event (incase user presses escape etc)\n        on.call(\n            this.player,\n            document,\n            this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\n            () => {\n                // TODO: Filter for target??\n                onChange.call(this);\n            },\n        );\n\n        // Fullscreen toggle on double click\n        on.call(this.player, this.player.elements.container, 'dblclick', event => {\n            // Ignore double click in controls\n            if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n                return;\n            }\n\n            this.toggle();\n        });\n\n        // Update the UI\n        this.update();\n    }\n\n    // Determine if native supported\n    static get native() {\n        return !!(\n            document.fullscreenEnabled ||\n            document.webkitFullscreenEnabled ||\n            document.mozFullScreenEnabled ||\n            document.msFullscreenEnabled\n        );\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n        // No prefix\n        if (is.function(document.exitFullscreen)) {\n            return '';\n        }\n\n        // Check for fullscreen support by vendor prefix\n        let value = '';\n        const prefixes = ['webkit', 'moz', 'ms'];\n\n        prefixes.some(pre => {\n            if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n                value = pre;\n                return true;\n            }\n\n            return false;\n        });\n\n        return value;\n    }\n\n    static get property() {\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is enabled\n    get enabled() {\n        return (\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n            this.player.config.fullscreen.enabled &&\n            this.player.supported.ui &&\n            this.player.isVideo\n        );\n    }\n\n    // Get active state\n    get active() {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Fallback using classname\n        if (!Fullscreen.native) {\n            return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n        }\n\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.property}Element`];\n\n        return element === this.target;\n    }\n\n    // Get target element\n    get target() {\n        return browser.isIos && this.player.config.fullscreen.iosNative\n            ? this.player.media\n            : this.player.elements.container;\n    }\n\n    // Update UI\n    update() {\n        if (this.enabled) {\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\n        } else {\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n    }\n\n    // Make an element fullscreen\n    enter() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitEnterFullscreen();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, true);\n        } else if (!this.prefix) {\n            this.target.requestFullscreen();\n        } else if (!is.empty(this.prefix)) {\n            this.target[`${this.prefix}Request${this.property}`]();\n        }\n    }\n\n    // Bail from fullscreen\n    exit() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitExitFullscreen();\n            this.player.play();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, false);\n        } else if (!this.prefix) {\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!is.empty(this.prefix)) {\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n            document[`${this.prefix}${action}${this.property}`]();\n        }\n    }\n\n    // Toggle state\n    toggle() {\n        if (!this.active) {\n            this.enter();\n        } else {\n            this.exit();\n        }\n    }\n}\n\nexport default Fullscreen;\n","// ==========================================================================\n// Load image avoiding xhr/fetch CORS issues\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n// By default it checks if it is at least 1px, but you can add a second argument to change this\n// ==========================================================================\n\nexport default function loadImage(src, minWidth = 1) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n\n        const handler = () => {\n            delete image.onload;\n            delete image.onerror;\n            (image.naturalWidth >= minWidth ? resolve : reject)(image);\n        };\n\n        Object.assign(image, { onload: handler, onerror: handler, src });\n    });\n}\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport captions from './captions';\nimport controls from './controls';\nimport support from './support';\nimport browser from './utils/browser';\nimport { getElement, toggleClass } from './utils/elements';\nimport { ready, triggerEvent } from './utils/events';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport loadImage from './utils/loadImage';\n\nconst ui = {\n    addStyleHook() {\n        toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n        toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n    },\n\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n        if (toggle && this.isHTML5) {\n            this.media.setAttribute('controls', '');\n        } else {\n            this.media.removeAttribute('controls');\n        }\n    },\n\n    // Setup the UI\n    build() {\n        // Re-attach media element listeners\n        // TODO: Use event bubbling?\n        this.listeners.media();\n\n        // Don't setup interface if no support\n        if (!this.supported.ui) {\n            this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n            // Restore native controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Bail\n            return;\n        }\n\n        // Inject custom controls if not present\n        if (!is.element(this.elements.controls)) {\n            // Inject custom controls\n            controls.inject.call(this);\n\n            // Re-attach control listeners\n            this.listeners.controls();\n        }\n\n        // Remove native controls\n        ui.toggleNativeControls.call(this);\n\n        // Setup captions for HTML5\n        if (this.isHTML5) {\n            captions.setup.call(this);\n        }\n\n        // Reset volume\n        this.volume = null;\n\n        // Reset mute state\n        this.muted = null;\n\n        // Reset speed\n        this.speed = null;\n\n        // Reset loop state\n        this.loop = null;\n\n        // Reset quality setting\n        this.quality = null;\n\n        // Reset volume display\n        controls.updateVolume.call(this);\n\n        // Reset time display\n        controls.timeUpdate.call(this);\n\n        // Update the UI\n        ui.checkPlaying.call(this);\n\n        // Check for picture-in-picture support\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.pip.supported,\n            support.pip && this.isHTML5 && this.isVideo,\n        );\n\n        // Check for airplay support\n        toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n        // Add iOS class\n        toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n        // Add touch class\n        toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n\n        // Ready for API calls\n        this.ready = true;\n\n        // Ready event at end of execution stack\n        setTimeout(() => {\n            triggerEvent.call(this, this.media, 'ready');\n        }, 0);\n\n        // Set the title\n        ui.setTitle.call(this);\n\n        // Assure the poster image is set, if the property was added before the element was created\n        if (this.poster) {\n            ui.setPoster.call(this, this.poster, false).catch(() => {});\n        }\n\n        // Manually set the duration if user has overridden it.\n        // The event listeners for it doesn't get called if preload is disabled (#701)\n        if (this.config.duration) {\n            controls.durationUpdate.call(this);\n        }\n    },\n\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n        // Find the current text\n        let label = i18n.get('play', this.config);\n\n        // If there's a media title set, use that for the label\n        if (is.string(this.config.title) && !is.empty(this.config.title)) {\n            label += `, ${this.config.title}`;\n        }\n\n        // If there's a play button, set label\n        Array.from(this.elements.buttons.play || []).forEach(button => {\n            button.setAttribute('aria-label', label);\n        });\n\n        // Set iframe title\n        // https://github.com/sampotts/plyr/issues/124\n        if (this.isEmbed) {\n            const iframe = getElement.call(this, 'iframe');\n\n            if (!is.element(iframe)) {\n                return;\n            }\n\n            // Default to media type\n            const title = !is.empty(this.config.title) ? this.config.title : 'video';\n            const format = i18n.get('frameTitle', this.config);\n\n            iframe.setAttribute('title', format.replace('{title}', title));\n        }\n    },\n\n    // Toggle poster\n    togglePoster(enable) {\n        toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n    },\n\n    // Set the poster image (async)\n    // Used internally for the poster setter, with the passive option forced to false\n    setPoster(poster, passive = true) {\n        // Don't override if call is passive\n        if (passive && this.poster) {\n            return Promise.reject(new Error('Poster already set'));\n        }\n\n        // Set property synchronously to respect the call order\n        this.media.setAttribute('poster', poster);\n\n        // Wait until ui is ready\n        return (\n            ready\n                .call(this)\n                // Load image\n                .then(() => loadImage(poster))\n                .catch(err => {\n                    // Hide poster on error unless it's been set by another call\n                    if (poster === this.poster) {\n                        ui.togglePoster.call(this, false);\n                    }\n                    // Rethrow\n                    throw err;\n                })\n                .then(() => {\n                    // Prevent race conditions\n                    if (poster !== this.poster) {\n                        throw new Error('setPoster cancelled by later call to setPoster');\n                    }\n                })\n                .then(() => {\n                    Object.assign(this.elements.poster.style, {\n                        backgroundImage: `url('${poster}')`,\n                        // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n                        backgroundSize: '',\n                    });\n                    ui.togglePoster.call(this, true);\n                    return poster;\n                })\n        );\n    },\n\n    // Check playing state\n    checkPlaying(event) {\n        // Class hooks\n        toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n        toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n        toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n        // Set state\n        Array.from(this.elements.buttons.play || []).forEach(target => {\n            target.pressed = this.playing;\n        });\n\n        // Only update controls on non timeupdate events\n        if (is.event(event) && event.type === 'timeupdate') {\n            return;\n        }\n\n        // Toggle controls\n        ui.toggleControls.call(this);\n    },\n\n    // Check if media is loading\n    checkLoading(event) {\n        this.loading = ['stalled', 'waiting'].includes(event.type);\n\n        // clear class\n        toggleClass(this.elements.container, this.config.classNames.videoInitFlag, false);\n\n        // Clear timer\n        clearTimeout(this.timers.loading);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Update progress bar loading class state\n            toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n            // Update controls visibility\n            ui.toggleControls.call(this);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Toggle controls based on state and `force` argument\n    toggleControls(force) {\n        const { controls } = this.elements;\n\n        if (controls && this.config.hideControls) {\n            // Don't hide controls if a touch-device user recently seeked. (Must be limited to touch devices, or it occasionally prevents desktop controls from hiding.)\n            const recentTouchSeek = (this.touch && this.lastSeekTime + 2000 > Date.now());\n\n            // Show controls if force, loading, paused, button interaction, or recent seek, otherwise hide\n            this.toggleControls(Boolean(force || this.loading || this.paused || controls.pressed || controls.hover || recentTouchSeek));\n        }\n    },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport controls from './controls';\nimport ui from './ui';\nimport { repaint } from './utils/animation';\nimport browser from './utils/browser';\nimport { getElement, getElements, matches, toggleClass, toggleHidden } from './utils/elements';\nimport { on, once, toggleListener, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nclass Listeners {\n    constructor(player) {\n        this.player = player;\n        this.lastKey = null;\n        this.focusTimer = null;\n        this.lastKeyDown = null;\n\n        this.handleKey = this.handleKey.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.setTabFocus = this.setTabFocus.bind(this);\n        this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n        const { player } = this;\n        const { elements } = player;\n        const code = event.keyCode ? event.keyCode : event.which;\n        const pressed = event.type === 'keydown';\n        const repeat = pressed && code === this.lastKey;\n\n        // Bail if a modifier key is set\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n            return;\n        }\n\n        // If the event is bubbled from the media element\n        // Firefox doesn't get the keycode for whatever reason\n        if (!is.number(code)) {\n            return;\n        }\n\n        // Seek by the number keys\n        const seekByKey = () => {\n            // Divide the max duration into 10th's and times by the number value\n            player.currentTime = (player.duration / 10) * (code - 48);\n        };\n\n        // Handle the key on keydown\n        // Reset on keyup\n        if (pressed) {\n            // Check focused element\n            // and if the focused element is not editable (e.g. text input)\n            // and any that accept key input http://webaim.org/techniques/keyboard/\n            const focused = document.activeElement;\n            if (is.element(focused)) {\n                const { editable } = player.config.selectors;\n                const { seek } = elements.inputs;\n\n                if (focused !== seek && matches(focused, editable)) {\n                    return;\n                }\n\n                if (event.which === 32 && matches(focused, 'button, [role^=\"menuitem\"]')) {\n                    return;\n                }\n            }\n\n            // Which keycodes should we prevent default\n            const preventDefault = [32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79];\n\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\n            if (preventDefault.includes(code)) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            switch (code) {\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    // 0-9\n                    if (!repeat) {\n                        seekByKey();\n                    }\n                    break;\n\n                case 32:\n                case 75:\n                    // Space and K key\n                    if (!repeat) {\n                        player.togglePlay();\n                    }\n                    break;\n\n                case 38:\n                    // Arrow up\n                    player.increaseVolume(0.1);\n                    break;\n\n                case 40:\n                    // Arrow down\n                    player.decreaseVolume(0.1);\n                    break;\n\n                case 77:\n                    // M key\n                    if (!repeat) {\n                        player.muted = !player.muted;\n                    }\n                    break;\n\n                case 39:\n                    // Arrow forward\n                    player.forward();\n                    break;\n\n                case 37:\n                    // Arrow back\n                    player.rewind();\n                    break;\n\n                case 70:\n                    // F key\n                    player.fullscreen.toggle();\n                    break;\n\n                case 67:\n                    // C key\n                    if (!repeat) {\n                        player.toggleCaptions();\n                    }\n                    break;\n\n                case 76:\n                    // L key\n                    player.loop = !player.loop;\n                    break;\n\n                    /* case 73:\n                    this.setLoop('start');\n                    break;\n\n                case 76:\n                    this.setLoop();\n                    break;\n\n                case 79:\n                    this.setLoop('end');\n                    break; */\n\n                default:\n                    break;\n            }\n\n            // Escape is handle natively when in full screen\n            // So we only need to worry about non native\n            if (!player.fullscreen.enabled && player.fullscreen.active && code === 27) {\n                player.fullscreen.toggle();\n            }\n\n            // Store last code for next cycle\n            this.lastKey = code;\n        } else {\n            this.lastKey = null;\n        }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n        controls.toggleMenu.call(this.player, event);\n    }\n\n    // Device is touch enabled\n    firstTouch() {\n        const { player } = this;\n        const { elements } = player;\n\n        player.touch = true;\n\n        // Add touch class\n        toggleClass(elements.container, player.config.classNames.isTouch, true);\n    }\n\n    setTabFocus(event) {\n        const { player } = this;\n        const { elements } = player;\n\n        clearTimeout(this.focusTimer);\n\n        // Ignore any key other than tab\n        if (event.type === 'keydown' && event.which !== 9) {\n            return;\n        }\n\n        // Store reference to event timeStamp\n        if (event.type === 'keydown') {\n            this.lastKeyDown = event.timeStamp;\n        }\n\n        // Remove current classes\n        const removeCurrent = () => {\n            const className = player.config.classNames.tabFocus;\n            const current = getElements.call(player, `.${className}`);\n            toggleClass(current, className, false);\n        };\n\n        // Determine if a key was pressed to trigger this event\n        const wasKeyDown = event.timeStamp - this.lastKeyDown <= 20;\n\n        // Ignore focus events if a key was pressed prior\n        if (event.type === 'focus' && !wasKeyDown) {\n            return;\n        }\n\n        // Remove all current\n        removeCurrent();\n\n        // Delay the adding of classname until the focus has changed\n        // This event fires before the focusin event\n        this.focusTimer = setTimeout(() => {\n            const focused = document.activeElement;\n\n            // Ignore if current focus element isn't inside the player\n            if (!elements.container.contains(focused)) {\n                return;\n            }\n\n            toggleClass(document.activeElement, player.config.classNames.tabFocus, true);\n        }, 10);\n    }\n\n    // Global window & document listeners\n    global(toggle = true) {\n        const { player } = this;\n\n        // Keyboard shortcuts\n        if (player.config.keyboard.global) {\n            toggleListener.call(player, window, 'keydown keyup', this.handleKey, toggle, false);\n        }\n\n        // Click anywhere closes menu\n        toggleListener.call(player, document.body, 'click', this.toggleMenu, toggle);\n\n        // Detect touch by events\n        once.call(player, document.body, 'touchstart', this.firstTouch);\n\n        // Tab focus detection\n        toggleListener.call(player, document.body, 'keydown focus blur', this.setTabFocus, toggle, false, true);\n    }\n\n    // Container listeners\n    container() {\n        const { player } = this;\n        const { elements } = player;\n\n        // Keyboard shortcuts\n        if (!player.config.keyboard.global && player.config.keyboard.focused) {\n            on.call(player, elements.container, 'keydown keyup', this.handleKey, false);\n        }\n\n        // Toggle controls on mouse events and entering fullscreen\n        on.call(\n            player,\n            elements.container,\n            'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\n            event => {\n                const { controls } = elements;\n\n                // Remove button states for fullscreen\n                if (controls && event.type === 'enterfullscreen') {\n                    controls.pressed = false;\n                    controls.hover = false;\n                }\n\n                // Show, then hide after a timeout unless another control event occurs\n                const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\n\n                let delay = 0;\n\n                if (show) {\n                    ui.toggleControls.call(player, true);\n                    // Use longer timeout for touch devices\n                    delay = player.touch ? 3000 : 2000;\n                }\n\n                // Clear timer\n                clearTimeout(player.timers.controls);\n\n                // Set new timer to prevent flicker when seeking\n                player.timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n            },\n        );\n    }\n\n    // Listen for media events\n    media() {\n        const { player } = this;\n        const { elements } = player;\n\n        // Time change on media\n        on.call(player, player.media, 'timeupdate seeking seeked', event => controls.timeUpdate.call(player, event));\n\n        // Display duration\n        on.call(player, player.media, 'durationchange loadeddata loadedmetadata', event =>\n            controls.durationUpdate.call(player, event),\n        );\n\n        // Check for audio tracks on load\n        // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\n\n        // on.call(player, player.media, 'canplay loadeddata', () => {\n        //     toggleHidden(elements.volume, !player.hasAudio);\n        //     toggleHidden(elements.buttons.mute, !player.hasAudio);\n        // });\n\n        // Handle the media finishing\n        on.call(player, player.media, 'ended', () => {\n            // Show poster on end\n            if (player.isHTML5 && player.isVideo && player.config.resetOnEnd) {\n                // Restart\n                player.restart();\n            }\n        });\n\n        // Check for buffer progress\n        on.call(player, player.media, 'progress playing seeking seeked', event =>\n            controls.updateProgress.call(player, event),\n        );\n\n        // Handle volume changes\n        on.call(player, player.media, 'volumechange', event => controls.updateVolume.call(player, event));\n\n        // Handle play/pause\n        on.call(player, player.media, 'playing play pause ended emptied timeupdate', event =>\n            ui.checkPlaying.call(player, event),\n        );\n\n        // Loading state\n        on.call(player, player.media, 'waiting canplay seeked playing', event => ui.checkLoading.call(player, event));\n\n        // If autoplay, then load advertisement if required\n        // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\n        on.call(player, player.media, 'playing', () => {\n            if (!player.ads) {\n                return;\n            }\n\n            // If ads are enabled, wait for them first\n            if (player.ads.enabled && !player.ads.initialized) {\n                // Wait for manager response\n                player.ads.managerPromise.then(() => player.ads.play()).catch(() => player.play());\n            }\n        });\n\n        // Click video\n        if (player.supported.ui && player.config.clickToPlay && !player.isAudio) {\n            // Re-fetch the wrapper\n            const wrapper = getElement.call(player, `.${player.config.classNames.video}`);\n\n            // Bail if there's no wrapper (this should never happen)\n            if (!is.element(wrapper)) {\n                return;\n            }\n\n            // On click play, pause or restart\n            on.call(player, elements.container, 'click', event => {\n                const targets = [elements.container, wrapper];\n\n                // Ignore if click if not container or in video wrapper\n                if (!targets.includes(event.target) && !wrapper.contains(event.target)) {\n                    return;\n                }\n\n                // Touch devices will just show controls (if hidden)\n                if (player.touch && player.config.hideControls) {\n                    return;\n                }\n\n                if (player.ended) {\n                    player.restart();\n                    player.play();\n                } else {\n                    player.togglePlay();\n                }\n            });\n        }\n\n        // Disable right click\n        if (player.supported.ui && player.config.disableContextMenu) {\n            on.call(\n                player,\n                elements.wrapper,\n                'contextmenu',\n                event => {\n                    event.preventDefault();\n                },\n                false,\n            );\n        }\n\n        // Volume change\n        on.call(player, player.media, 'volumechange', () => {\n            // Save to storage\n            player.storage.set({\n                volume: player.volume,\n                muted: player.muted,\n            });\n        });\n\n        // Speed change\n        on.call(player, player.media, 'ratechange', () => {\n            // Update UI\n            controls.updateSetting.call(player, 'speed');\n\n            // Save to storage\n            player.storage.set({ speed: player.speed });\n        });\n\n        // Quality change\n        on.call(player, player.media, 'qualitychange', event => {\n            // Update UI\n            controls.updateSetting.call(player, 'quality', null, event.detail.quality);\n        });\n\n        // Update download link when ready and if quality changes\n        on.call(player, player.media, 'ready qualitychange', () => {\n            controls.setDownloadLink.call(player);\n        });\n\n        // Proxy events to container\n        // Bubble up key events for Edge\n        const proxyEvents = player.config.events.concat(['keyup', 'keydown']).join(' ');\n\n        on.call(player, player.media, proxyEvents, event => {\n            let { detail = {} } = event;\n\n            // Get error details from media\n            if (event.type === 'error') {\n                detail = player.media.error;\n            }\n\n            triggerEvent.call(player, elements.container, event.type, true, detail);\n        });\n    }\n\n    // Run default and custom handlers\n    proxy(event, defaultHandler, customHandlerKey) {\n        const { player } = this;\n        const customHandler = player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n        let returned = true;\n\n        // Execute custom handler\n        if (hasCustomHandler) {\n            returned = customHandler.call(player, event);\n        }\n\n        // Only call default handler if not prevented in custom handler\n        if (returned && is.function(defaultHandler)) {\n            defaultHandler.call(player, event);\n        }\n    }\n\n    // Trigger custom and default handlers\n    bind(element, type, defaultHandler, customHandlerKey, passive = true) {\n        const { player } = this;\n        const customHandler = player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n\n        on.call(\n            player,\n            element,\n            type,\n            event => this.proxy(event, defaultHandler, customHandlerKey),\n            passive && !hasCustomHandler,\n        );\n    }\n\n    // Listen for control events\n    controls() {\n        const { player } = this;\n        const { elements } = player;\n\n        // IE doesn't support input event, so we fallback to change\n        const inputEvent = browser.isIE || browser.isIos ? 'change' : 'input';\n\n        // Play/pause toggle\n        if (elements.buttons.play) {\n            Array.from(elements.buttons.play).forEach(button => {\n                this.bind(button, 'click', player.togglePlay, 'play');\n            });\n        }\n\n        // Pause\n        this.bind(elements.buttons.restart, 'click', player.restart, 'restart');\n\n        // Rewind\n        this.bind(elements.buttons.rewind, 'click', player.rewind, 'rewind');\n\n        // Rewind\n        this.bind(elements.buttons.fastForward, 'click', player.forward, 'fastForward');\n\n        // Mute toggle\n        this.bind(\n            elements.buttons.mute,\n            'click',\n            () => {\n                player.muted = !player.muted;\n            },\n            'mute',\n        );\n\n        // Captions toggle\n        this.bind(elements.buttons.captions, 'click', () => player.toggleCaptions());\n\n        // Download\n        this.bind(\n            elements.buttons.download,\n            'click',\n            () => {\n                triggerEvent.call(player, player.media, 'download');\n            },\n            'download',\n        );\n\n        // Fullscreen toggle\n        this.bind(\n            elements.buttons.fullscreen,\n            'click',\n            () => {\n                player.fullscreen.toggle();\n            },\n            'fullscreen',\n        );\n\n        // Picture-in-Picture\n        this.bind(\n            elements.buttons.pip,\n            'click',\n            () => {\n                player.pip = 'toggle';\n            },\n            'pip',\n        );\n\n        // Airplay\n        this.bind(elements.buttons.airplay, 'click', player.airplay, 'airplay');\n\n        // Settings menu - click toggle\n        this.bind(elements.buttons.settings, 'click', event => {\n            // Prevent the document click listener closing the menu\n            event.stopPropagation();\n\n            controls.toggleMenu.call(player, event);\n        });\n\n        // Settings menu - keyboard toggle\n        // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n        this.bind(\n            elements.buttons.settings,\n            'keyup',\n            event => {\n                const code = event.which;\n\n                // We only care about space and return\n                if (![13, 32].includes(code)) {\n                    return;\n                }\n\n                // Because return triggers a click anyway, all we need to do is set focus\n                if (code === 13) {\n                    controls.focusFirstMenuItem.call(player, null, true);\n                    return;\n                }\n\n                // Prevent scroll\n                event.preventDefault();\n\n                // Prevent playing video (Firefox)\n                event.stopPropagation();\n\n                // Toggle menu\n                controls.toggleMenu.call(player, event);\n            },\n            null,\n            false, // Can't be passive as we're preventing default\n        );\n\n        // Escape closes menu\n        this.bind(elements.settings.menu, 'keydown', event => {\n            if (event.which === 27) {\n                controls.toggleMenu.call(player, event);\n            }\n        });\n\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\n        this.bind(elements.inputs.seek, 'mousedown mousemove', event => {\n            const rect = elements.progress.getBoundingClientRect();\n            const percent = (100 / rect.width) * (event.pageX - rect.left);\n            event.currentTarget.setAttribute('seek-value', percent);\n        });\n\n        // Pause while seeking\n        this.bind(elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', event => {\n            const seek = event.currentTarget;\n            const code = event.keyCode ? event.keyCode : event.which;\n            const attribute = 'play-on-seeked';\n\n            if (is.keyboardEvent(event) && (code !== 39 && code !== 37)) {\n                return;\n            }\n\n            // Record seek time so we can prevent hiding controls for a few seconds after seek\n            player.lastSeekTime = Date.now();\n\n            // Was playing before?\n            const play = seek.hasAttribute(attribute);\n\n            // Done seeking\n            const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\n\n            // If we're done seeking and it was playing, resume playback\n            if (play && done) {\n                seek.removeAttribute(attribute);\n                player.play();\n            } else if (!done && player.playing) {\n                seek.setAttribute(attribute, '');\n                player.pause();\n            }\n        });\n\n        // Fix range inputs on iOS\n        // Super weird iOS bug where after you interact with an <input type=\"range\">,\n        // it takes over further interactions on the page. This is a hack\n        if (browser.isIos) {\n            const inputs = getElements.call(player, 'input[type=\"range\"]');\n            Array.from(inputs).forEach(input => this.bind(input, inputEvent, event => repaint(event.target)));\n        }\n\n        // Seek\n        this.bind(\n            elements.inputs.seek,\n            inputEvent,\n            event => {\n                const seek = event.currentTarget;\n\n                // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n                let seekTo = seek.getAttribute('seek-value');\n\n                if (is.empty(seekTo)) {\n                    seekTo = seek.value;\n                }\n\n                seek.removeAttribute('seek-value');\n\n                player.currentTime = (seekTo / seek.max) * player.duration;\n            },\n            'seek',\n        );\n\n        // Seek tooltip\n        this.bind(elements.progress, 'mouseenter mouseleave mousemove', event =>\n            controls.updateSeekTooltip.call(player, event),\n        );\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebkit) {\n            Array.from(getElements.call(player, 'input[type=\"range\"]')).forEach(element => {\n                this.bind(element, 'input', event => controls.updateRangeFill.call(player, event.target));\n            });\n        }\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (player.config.toggleInvert && !is.element(elements.display.duration)) {\n            this.bind(elements.display.currentTime, 'click', () => {\n                // Do nothing if we're at the start\n                if (player.currentTime === 0) {\n                    return;\n                }\n\n                player.config.invertTime = !player.config.invertTime;\n\n                controls.timeUpdate.call(player);\n            });\n        }\n\n        // Volume\n        this.bind(\n            elements.inputs.volume,\n            inputEvent,\n            event => {\n                player.volume = event.target.value;\n            },\n            'volume',\n        );\n\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(elements.controls, 'mouseenter mouseleave', event => {\n            elements.controls.hover = !player.touch && event.type === 'mouseenter';\n        });\n\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\n            elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\n        });\n\n        // Show controls when they receive focus (e.g., when using keyboard tab key)\n        this.bind(elements.controls, 'focusin', () => {\n            const { config, elements, timers } = player;\n\n            // Skip transition to prevent focus from scrolling the parent element\n            toggleClass(elements.controls, config.classNames.noTransition, true);\n\n            // Toggle\n            ui.toggleControls.call(player, true);\n\n            // Restore transition\n            setTimeout(() => {\n                toggleClass(elements.controls, config.classNames.noTransition, false);\n            }, 0);\n\n            // Delay a little more for mouse users\n            const delay = this.touch ? 3000 : 4000;\n\n            // Clear timer\n            clearTimeout(timers.controls);\n\n            // Hide again after delay\n            timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n        });\n\n        // Mouse wheel for volume\n        this.bind(\n            elements.inputs.volume,\n            'wheel',\n            event => {\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                const inverted = event.webkitDirectionInvertedFromDevice;\n\n                // Get delta from event. Invert if `inverted` is true\n                const [x, y] = [event.deltaX, -event.deltaY].map(value => (inverted ? -value : value));\n\n                // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\n                const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\n\n                // Change the volume by 2%\n                player.increaseVolume(direction / 50);\n\n                // Don't break page scrolling at max and min\n                const { volume } = player.media;\n                if ((direction === 1 && volume < 1) || (direction === -1 && volume > 0)) {\n                    event.preventDefault();\n                }\n            },\n            'volume',\n            false,\n        );\n    }\n}\n\nexport default Listeners;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isLegacyIECss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped;\n\n    // tag IE9+\n    isLegacyIECss = 'hideFocus' in e;\n\n    // use preload in IE Edge (to detect load errors)\n    if (isLegacyIECss && e.relList) {\n      isLegacyIECss = 0;\n      e.rel = 'preload';\n      e.as = 'style';\n    }\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // treat empty stylesheets as failures to get around lack of onerror\n    // support in IE9-11\n    if (isLegacyIECss) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText` (unless error is Code:18 SecurityError)\n        if (x.code != 18) result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    } else if (e.rel == 'preload' && e.as == 'style') {\n      // activate preloaded stylesheets\n      return e.rel = 'stylesheet'; // jshint ignore:line\n    }\n    \n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function)} [arg1] - The bundleId or success callback\n * @param {Function} [arg2] - The success or error callback\n * @param {Function} [arg3] - The error callback\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  function loadFn(resolve, reject) {\n    loadFiles(paths, function (pathsNotFound) {\n      // execute callbacks\n      executeCallbacks(args, pathsNotFound);\n      \n      // resolve Promise\n      if (resolve) {\n        executeCallbacks({success: resolve, error: reject}, pathsNotFound);\n      }\n\n      // publish bundle load event\n      publish(bundleId, pathsNotFound);\n    }, args);\n  }\n  \n  if (args.returnPromise) return new Promise(loadFn);\n  else loadFn();\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Load an external script\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nexport default function loadScript(url) {\n    return new Promise((resolve, reject) => {\n        loadjs(url, {\n            success: resolve,\n            error: reject,\n        });\n    });\n}\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport captions from '../captions';\nimport controls from '../controls';\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { format, stripHTML } from '../utils/strings';\nimport { buildUrlParams } from '../utils/urls';\n\n// Parse Vimeo ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    if (is.number(Number(url))) {\n        return url;\n    }\n\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Get aspect ratio for dimensions\nfunction getAspectRatio(width, height) {\n    const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\n    const ratio = getRatio(width, height);\n    return `${width / ratio}:${height / ratio}`;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst vimeo = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set intial ratio\n        vimeo.setAspectRatio.call(this);\n\n        // Load the API if not already\n        if (!is.object(window.Vimeo)) {\n            loadScript(this.config.urls.vimeo.sdk)\n                .then(() => {\n                    vimeo.ready.call(this);\n                })\n                .catch(error => {\n                    this.debug.warn('Vimeo API failed to load', error);\n                });\n        } else {\n            vimeo.ready.call(this);\n        }\n    },\n\n    // Set aspect ratio\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\n    setAspectRatio(input) {\n        const [x, y] = (is.string(input) ? input : this.config.ratio).split(':').map(Number);\n        const padding = (100 / x) * y;\n        vimeo.padding = padding;\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\n\n        if (this.supported.ui) {\n            const height = 240;\n            const offset = (height - padding) / (height / 50);\n\n            this.media.style.transform = `translateY(-${offset}%)`;\n        }\n    },\n\n    // API Ready\n    ready() {\n        const player = this;\n\n        // Get Vimeo params for the iframe\n        const options = {\n            loop: player.config.loop.active,\n            autoplay: player.autoplay,\n            // muted: player.muted,\n            byline: false,\n            portrait: false,\n            title: false,\n            speed: true,\n            transparent: 0,\n            gesture: 'media',\n            playsinline: !this.config.fullscreen.iosNative,\n        };\n        const params = buildUrlParams(options);\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(player.config.attributes.embed.id);\n        }\n\n        const id = parseId(source);\n\n        // Build an iframe\n        const iframe = createElement('iframe');\n        const src = format(player.config.urls.vimeo.iframe, id, params);\n        iframe.setAttribute('src', src);\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.setAttribute('allowtransparency', '');\n        iframe.setAttribute('allow', 'autoplay');\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Inject the package\n        const wrapper = createElement('div', { poster, class: player.config.classNames.embedContainer });\n        wrapper.appendChild(iframe);\n        player.media = replaceElement(wrapper, player.media);\n\n        // Get poster image\n        fetch(format(player.config.urls.vimeo.api, id), 'json').then(response => {\n            if (is.empty(response)) {\n                return;\n            }\n\n            // Get the URL for thumbnail\n            const url = new URL(response[0].thumbnail_large);\n\n            // Get original image\n            url.pathname = `${url.pathname.split('_')[0]}.jpg`;\n\n            // Set and show poster\n            ui.setPoster.call(player, url.href).catch(() => {});\n        });\n\n        // Setup instance\n        // https://github.com/vimeo/player.js\n        player.embed = new window.Vimeo.Player(iframe, {\n            autopause: player.config.autopause,\n            muted: player.muted,\n        });\n\n        player.media.paused = true;\n        player.media.currentTime = 0;\n\n        // Disable native text track rendering\n        if (player.supported.ui) {\n            player.embed.disableTextTrack();\n        }\n\n        // Create a faux HTML5 API using the Vimeo API\n        player.media.play = () => {\n            assurePlaybackState.call(player, true);\n            return player.embed.play();\n        };\n\n        player.media.pause = () => {\n            assurePlaybackState.call(player, false);\n            return player.embed.pause();\n        };\n\n        player.media.stop = () => {\n            player.pause();\n            player.currentTime = 0;\n        };\n\n        // Seeking\n        let { currentTime } = player.media;\n        Object.defineProperty(player.media, 'currentTime', {\n            get() {\n                return currentTime;\n            },\n            set(time) {\n                // Vimeo will automatically play on seek if the video hasn't been played before\n\n                // Get current paused state and volume etc\n                const { embed, media, paused, volume } = player;\n                const restorePause = paused && !embed.hasPlayed;\n\n                // Set seeking state and trigger event\n                media.seeking = true;\n                triggerEvent.call(player, media, 'seeking');\n\n                // If paused, mute until seek is complete\n                Promise.resolve(restorePause && embed.setVolume(0))\n                    // Seek\n                    .then(() => embed.setCurrentTime(time))\n                    // Restore paused\n                    .then(() => restorePause && embed.pause())\n                    // Restore volume\n                    .then(() => restorePause && embed.setVolume(volume))\n                    .catch(() => {\n                        // Do nothing\n                    });\n            },\n        });\n\n        // Playback speed\n        let speed = player.config.speed.selected;\n        Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n                return speed;\n            },\n            set(input) {\n                player.embed\n                    .setPlaybackRate(input)\n                    .then(() => {\n                        speed = input;\n                        triggerEvent.call(player, player.media, 'ratechange');\n                    })\n                    .catch(error => {\n                        // Hide menu item (and menu if empty)\n                        if (error.name === 'Error') {\n                            controls.setSpeedMenu.call(player, []);\n                        }\n                    });\n            },\n        });\n\n        // Volume\n        let { volume } = player.config;\n        Object.defineProperty(player.media, 'volume', {\n            get() {\n                return volume;\n            },\n            set(input) {\n                player.embed.setVolume(input).then(() => {\n                    volume = input;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Muted\n        let { muted } = player.config;\n        Object.defineProperty(player.media, 'muted', {\n            get() {\n                return muted;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : false;\n\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n                    muted = toggle;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Loop\n        let { loop } = player.config;\n        Object.defineProperty(player.media, 'loop', {\n            get() {\n                return loop;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : player.config.loop.active;\n\n                player.embed.setLoop(toggle).then(() => {\n                    loop = toggle;\n                });\n            },\n        });\n\n        // Source\n        let currentSrc;\n        player.embed\n            .getVideoUrl()\n            .then(value => {\n                currentSrc = value;\n                controls.setDownloadLink.call(player);\n            })\n            .catch(error => {\n                this.debug.warn(error);\n            });\n\n        Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n                return currentSrc;\n            },\n        });\n\n        // Ended\n        Object.defineProperty(player.media, 'ended', {\n            get() {\n                return player.currentTime === player.duration;\n            },\n        });\n\n        // Set aspect ratio based on video size\n        Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(dimensions => {\n            vimeo.ratio = getAspectRatio(dimensions[0], dimensions[1]);\n            vimeo.setAspectRatio.call(this, vimeo.ratio);\n        });\n\n        // Set autopause\n        player.embed.setAutopause(player.config.autopause).then(state => {\n            player.config.autopause = state;\n        });\n\n        // Get title\n        player.embed.getVideoTitle().then(title => {\n            player.config.title = title;\n            ui.setTitle.call(this);\n        });\n\n        // Get current time\n        player.embed.getCurrentTime().then(value => {\n            currentTime = value;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        // Get duration\n        player.embed.getDuration().then(value => {\n            player.media.duration = value;\n            triggerEvent.call(player, player.media, 'durationchange');\n        });\n\n        // Get captions\n        player.embed.getTextTracks().then(tracks => {\n            player.media.textTracks = tracks;\n            captions.setup.call(player);\n        });\n\n        player.embed.on('cuechange', ({ cues = [] }) => {\n            const strippedCues = cues.map(cue => stripHTML(cue.text));\n            captions.updateCues.call(player, strippedCues);\n        });\n\n        player.embed.on('loaded', () => {\n            // Assure state and events are updated on autoplay\n            player.embed.getPaused().then(paused => {\n                assurePlaybackState.call(player, !paused);\n                if (!paused) {\n                    triggerEvent.call(player, player.media, 'playing');\n                }\n            });\n\n            if (is.element(player.embed.element) && player.supported.ui) {\n                const frame = player.embed.element;\n\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                frame.setAttribute('tabindex', -1);\n            }\n        });\n\n        player.embed.on('play', () => {\n            assurePlaybackState.call(player, true);\n            triggerEvent.call(player, player.media, 'playing');\n        });\n\n        player.embed.on('pause', () => {\n            assurePlaybackState.call(player, false);\n        });\n\n        player.embed.on('timeupdate', data => {\n            player.media.seeking = false;\n            currentTime = data.seconds;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        player.embed.on('progress', data => {\n            player.media.buffered = data.percent;\n            triggerEvent.call(player, player.media, 'progress');\n\n            // Check all loaded\n            if (parseInt(data.percent, 10) === 1) {\n                triggerEvent.call(player, player.media, 'canplaythrough');\n            }\n\n            // Get duration as if we do it before load, it gives an incorrect value\n            // https://github.com/sampotts/plyr/issues/891\n            player.embed.getDuration().then(value => {\n                if (value !== player.media.duration) {\n                    player.media.duration = value;\n                    triggerEvent.call(player, player.media, 'durationchange');\n                }\n            });\n        });\n\n        player.embed.on('seeked', () => {\n            player.media.seeking = false;\n            triggerEvent.call(player, player.media, 'seeked');\n        });\n\n        player.embed.on('ended', () => {\n            player.media.paused = true;\n            triggerEvent.call(player, player.media, 'ended');\n        });\n\n        player.embed.on('error', detail => {\n            player.media.error = detail;\n            triggerEvent.call(player, player.media, 'error');\n        });\n\n        // Set height/width on fullscreen\n        player.on('enterfullscreen exitfullscreen', event => {\n            const { target } = player.fullscreen;\n\n            // Ignore for iOS native\n            if (target !== player.elements.container) {\n                return;\n            }\n\n            const toggle = event.type === 'enterfullscreen';\n            const [x, y] = vimeo.ratio.split(':').map(Number);\n            const dimension = x > y ? 'width' : 'height';\n\n            target.style[dimension] = toggle ? `${vimeo.padding}%` : null;\n        });\n\n        // Rebuild UI\n        setTimeout(() => ui.build.call(player), 0);\n    },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadImage from '../utils/loadImage';\nimport loadScript from '../utils/loadScript';\nimport { format, generateId } from '../utils/strings';\n\n// Parse YouTube ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst youtube = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set aspect ratio\n        youtube.setAspectRatio.call(this);\n\n        // Setup API\n        if (is.object(window.YT) && is.function(window.YT.Player)) {\n            youtube.ready.call(this);\n        } else {\n            // Load the API\n            loadScript(this.config.urls.youtube.sdk).catch(error => {\n                this.debug.warn('YouTube API failed to load', error);\n            });\n\n            // Setup callback for the API\n            // YouTube has it's own system of course...\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n            // Add to queue\n            window.onYouTubeReadyCallbacks.push(() => {\n                youtube.ready.call(this);\n            });\n\n            // Set callback to process queue\n            window.onYouTubeIframeAPIReady = () => {\n                window.onYouTubeReadyCallbacks.forEach(callback => {\n                    callback();\n                });\n            };\n        }\n    },\n\n    // Get the media title\n    getTitle(videoId) {\n        // Try via undocumented API method first\n        // This method disappears now and then though...\n        // https://github.com/sampotts/plyr/issues/709\n        if (is.function(this.embed.getVideoData)) {\n            const { title } = this.embed.getVideoData();\n\n            if (is.empty(title)) {\n                this.config.title = title;\n                ui.setTitle.call(this);\n                return;\n            }\n        }\n\n        // Or via Google API\n        const key = this.config.keys.google;\n        if (is.string(key) && !is.empty(key)) {\n            const url = format(this.config.urls.youtube.api, videoId, key);\n\n            fetch(url)\n                .then(result => {\n                    if (is.object(result)) {\n                        this.config.title = result.items[0].snippet.title;\n                        ui.setTitle.call(this);\n                    }\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Set aspect ratio\n    setAspectRatio() {\n        const ratio = this.config.ratio.split(':');\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\n    },\n\n    // API ready\n    ready() {\n        const player = this;\n\n        // Ignore already setup (race condition)\n        const currentId = player.media.getAttribute('id');\n        if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n            return;\n        }\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        // Replace the <iframe> with a <div> due to YouTube API issues\n        const videoId = parseId(source);\n        const id = generateId(player.provider);\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Replace media element\n        const container = createElement('div', { id, poster });\n        player.media = replaceElement(container, player.media);\n\n        // Id to poster wrapper\n        const posterSrc = format => `https://img.youtube.com/vi/${videoId}/${format}default.jpg`;\n\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n        loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n            .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n            .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n            .then(image => ui.setPoster.call(player, image.src))\n            .then(posterSrc => {\n                // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n                if (!posterSrc.includes('maxres')) {\n                    player.elements.poster.style.backgroundSize = 'cover';\n                }\n            })\n            .catch(() => {});\n\n        // Setup instance\n        // https://developers.google.com/youtube/iframe_api_reference\n        player.embed = new window.YT.Player(id, {\n            videoId,\n            playerVars: {\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\n                hl: player.config.hl, // iframe interface language\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\n                rel: 0, // No related vids\n                showinfo: 0, // Hide info\n                iv_load_policy: 3, // Hide annotations\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n                disablekb: 1, // Disable keyboard as we handle it\n                playsinline: 1, // Allow iOS inline playback\n\n                // Tracking for stats\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\n                widget_referrer: window ? window.location.href : null,\n\n                // Captions are flaky on YouTube\n                cc_load_policy: player.captions.active ? 1 : 0,\n                cc_lang_pref: player.config.captions.language,\n            },\n            events: {\n                onError(event) {\n                    // YouTube may fire onError twice, so only handle it once\n                    if (!player.media.error) {\n                        const code = event.data;\n                        // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n                        const message =\n                            {\n                                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                                150: 'The owner of the requested video does not allow it to be played in embedded players.',\n                            }[code] || 'An unknown error occured';\n\n                        player.media.error = { code, message };\n\n                        triggerEvent.call(player, player.media, 'error');\n                    }\n                },\n                onPlaybackRateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get current speed\n                    player.media.playbackRate = instance.getPlaybackRate();\n\n                    triggerEvent.call(player, player.media, 'ratechange');\n                },\n                onReady(event) {\n                    // Bail if onReady has already been called. See issue #1108\n                    if (is.function(player.media.play)) {\n                        return;\n                    }\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get the title\n                    youtube.getTitle.call(player, videoId);\n\n                    // Create a faux HTML5 API using the YouTube API\n                    player.media.play = () => {\n                        assurePlaybackState.call(player, true);\n                        instance.playVideo();\n                    };\n\n                    player.media.pause = () => {\n                        assurePlaybackState.call(player, false);\n                        instance.pauseVideo();\n                    };\n\n                    player.media.stop = () => {\n                        instance.stopVideo();\n                    };\n\n                    player.media.duration = instance.getDuration();\n                    player.media.paused = true;\n\n                    // Seeking\n                    player.media.currentTime = 0;\n                    Object.defineProperty(player.media, 'currentTime', {\n                        get() {\n                            return Number(instance.getCurrentTime());\n                        },\n                        set(time) {\n                            // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n                            if (player.paused && !player.embed.hasPlayed) {\n                                player.embed.mute();\n                            }\n\n                            // Set seeking state and trigger event\n                            player.media.seeking = true;\n                            triggerEvent.call(player, player.media, 'seeking');\n\n                            // Seek after events sent\n                            instance.seekTo(time);\n                        },\n                    });\n\n                    // Playback speed\n                    Object.defineProperty(player.media, 'playbackRate', {\n                        get() {\n                            return instance.getPlaybackRate();\n                        },\n                        set(input) {\n                            instance.setPlaybackRate(input);\n                        },\n                    });\n\n                    // Volume\n                    let { volume } = player.config;\n                    Object.defineProperty(player.media, 'volume', {\n                        get() {\n                            return volume;\n                        },\n                        set(input) {\n                            volume = input;\n                            instance.setVolume(volume * 100);\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Muted\n                    let { muted } = player.config;\n                    Object.defineProperty(player.media, 'muted', {\n                        get() {\n                            return muted;\n                        },\n                        set(input) {\n                            const toggle = is.boolean(input) ? input : muted;\n                            muted = toggle;\n                            instance[toggle ? 'mute' : 'unMute']();\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Source\n                    Object.defineProperty(player.media, 'currentSrc', {\n                        get() {\n                            return instance.getVideoUrl();\n                        },\n                    });\n\n                    // Ended\n                    Object.defineProperty(player.media, 'ended', {\n                        get() {\n                            return player.currentTime === player.duration;\n                        },\n                    });\n\n                    // Get available speeds\n                    player.options.speed = instance.getAvailablePlaybackRates();\n\n                    // Set the tabindex to avoid focus entering iframe\n                    if (player.supported.ui) {\n                        player.media.setAttribute('tabindex', -1);\n                    }\n\n                    triggerEvent.call(player, player.media, 'timeupdate');\n                    triggerEvent.call(player, player.media, 'durationchange');\n\n                    // Reset timer\n                    clearInterval(player.timers.buffering);\n\n                    // Setup buffering\n                    player.timers.buffering = setInterval(() => {\n                        // Get loaded % from YouTube\n                        player.media.buffered = instance.getVideoLoadedFraction();\n\n                        // Trigger progress only when we actually buffer something\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                            triggerEvent.call(player, player.media, 'progress');\n                        }\n\n                        // Set last buffer point\n                        player.media.lastBuffered = player.media.buffered;\n\n                        // Bail if we're at 100%\n                        if (player.media.buffered === 1) {\n                            clearInterval(player.timers.buffering);\n\n                            // Trigger event\n                            triggerEvent.call(player, player.media, 'canplaythrough');\n                        }\n                    }, 200);\n\n                    // Rebuild UI\n                    setTimeout(() => ui.build.call(player), 50);\n                },\n                onStateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Reset timer\n                    clearInterval(player.timers.playing);\n\n                    const seeked = player.media.seeking && [1, 2].includes(event.data);\n\n                    if (seeked) {\n                        // Unset seeking and fire seeked event\n                        player.media.seeking = false;\n                        triggerEvent.call(player, player.media, 'seeked');\n                    }\n\n                    // Handle events\n                    // -1   Unstarted\n                    // 0    Ended\n                    // 1    Playing\n                    // 2    Paused\n                    // 3    Buffering\n                    // 5    Video cued\n                    switch (event.data) {\n                        case -1:\n                            // Update scrubber\n                            triggerEvent.call(player, player.media, 'timeupdate');\n\n                            // Get loaded % from YouTube\n                            player.media.buffered = instance.getVideoLoadedFraction();\n                            triggerEvent.call(player, player.media, 'progress');\n\n                            break;\n\n                        case 0:\n                            assurePlaybackState.call(player, false);\n\n                            // YouTube doesn't support loop for a single video, so mimick it.\n                            if (player.media.loop) {\n                                // YouTube needs a call to `stopVideo` before playing again\n                                instance.stopVideo();\n                                instance.playVideo();\n                            } else {\n                                triggerEvent.call(player, player.media, 'ended');\n                            }\n\n                            break;\n\n                        case 1:\n                            // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (player.media.paused && !player.embed.hasPlayed) {\n                                player.media.pause();\n                            } else {\n                                assurePlaybackState.call(player, true);\n\n                                triggerEvent.call(player, player.media, 'playing');\n\n                                // Poll to get playback progress\n                                player.timers.playing = setInterval(() => {\n                                    triggerEvent.call(player, player.media, 'timeupdate');\n                                }, 50);\n\n                                // Check duration again due to YouTube bug\n                                // https://github.com/sampotts/plyr/issues/374\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                                if (player.media.duration !== instance.getDuration()) {\n                                    player.media.duration = instance.getDuration();\n                                    triggerEvent.call(player, player.media, 'durationchange');\n                                }\n                            }\n\n                            break;\n\n                        case 2:\n                            // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (!player.muted) {\n                                player.embed.unMute();\n                            }\n                            assurePlaybackState.call(player, false);\n\n                            break;\n\n                        default:\n                            break;\n                    }\n\n                    triggerEvent.call(player, player.elements.container, 'statechange', false, {\n                        code: event.data,\n                    });\n                },\n            },\n        });\n    },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport html5 from './html5';\nimport vimeo from './plugins/vimeo';\nimport youtube from './plugins/youtube';\nimport { createElement, toggleClass, wrap } from './utils/elements';\n\nconst media = {\n    // Setup media\n    setup() {\n        // If there's no media, bail\n        if (!this.media) {\n            this.debug.warn('No media element found!');\n            return;\n        }\n\n        // Add type class\n        toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n        // Add provider class\n        toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n        // Add video class for embeds\n        // This will require changes if audio embeds are added\n        if (this.isEmbed) {\n            toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n        }\n\n        // Inject the player wrapper\n        if (this.isVideo) {\n            // Create the wrapper div\n            this.elements.wrapper = createElement('div', {\n                class: this.config.classNames.video,\n            });\n\n            // Wrap the video in a container\n            wrap(this.media, this.elements.wrapper);\n\n            // Faux poster container\n            this.elements.poster = createElement('div', {\n                class: this.config.classNames.poster,\n            });\n\n            this.elements.wrapper.appendChild(this.elements.poster);\n        }\n\n        if (this.isHTML5) {\n            html5.extend.call(this);\n        } else if (this.isYouTube) {\n            youtube.setup.call(this);\n        } else if (this.isVimeo) {\n            vimeo.setup.call(this);\n        }\n    },\n};\n\nexport default media;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport { createElement } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport i18n from '../utils/i18n';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { formatTime } from '../utils/time';\nimport { buildUrlParams } from '../utils/urls';\n\nclass Ads {\n    /**\n     * Ads constructor.\n     * @param {object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n        this.player = player;\n        this.publisherId = player.config.ads.publisherId;\n        this.playing = false;\n        this.initialized = false;\n        this.elements = {\n            container: null,\n            displayContainer: null,\n        };\n        this.manager = null;\n        this.loader = null;\n        this.cuePoints = null;\n        this.events = {};\n        this.safetyTimer = null;\n        this.countdownTimer = null;\n\n        // Setup a promise to resolve when the IMA manager is ready\n        this.managerPromise = new Promise((resolve, reject) => {\n            // The ad is loaded and ready\n            this.on('loaded', resolve);\n\n            // Ads failed\n            this.on('error', reject);\n        });\n\n        this.load();\n    }\n\n    get enabled() {\n        return (\n            this.player.isHTML5 && this.player.isVideo && this.player.config.ads.enabled && !is.empty(this.publisherId)\n        );\n    }\n\n    /**\n     * Load the IMA SDK\n     */\n    load() {\n        if (this.enabled) {\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\n            if (!is.object(window.google) || !is.object(window.google.ima)) {\n                loadScript(this.player.config.urls.googleIMA.sdk)\n                    .then(() => {\n                        this.ready();\n                    })\n                    .catch(() => {\n                        // Script failed to load or is blocked\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\n                    });\n            } else {\n                this.ready();\n            }\n        }\n    }\n\n    /**\n     * Get the ads instance ready\n     */\n    ready() {\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n            this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n    }\n\n    // Build the default tag URL\n    get tagUrl() {\n        const params = {\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\n            AV_URL: window.location.hostname,\n            cb: Date.now(),\n            AV_WIDTH: 640,\n            AV_HEIGHT: 480,\n            AV_CDIM2: this.publisherId,\n        };\n\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n        return `${base}?${buildUrlParams(params)}`;\n    }\n\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n    setupIMA() {\n        // Create the container for our advertisements\n        this.elements.container = createElement('div', {\n            class: this.player.config.classNames.ads,\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // We assume the adContainer is the video container of the plyr element\n        // that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n    }\n\n    /**\n     * Request advertisements\n     */\n    requestAds() {\n        const { container } = this.player.elements;\n\n        try {\n            // Create ads loader\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n            // Listen and respond to ads loaded and error events\n            this.loader.addEventListener(\n                google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n                event => this.onAdsManagerLoaded(event),\n                false,\n            );\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n            // Request video ads\n            const request = new google.ima.AdsRequest();\n            request.adTagUrl = this.tagUrl;\n\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\n            // to select the correct creative if multiple are returned\n            request.linearAdSlotWidth = container.offsetWidth;\n            request.linearAdSlotHeight = container.offsetHeight;\n            request.nonLinearAdSlotWidth = container.offsetWidth;\n            request.nonLinearAdSlotHeight = container.offsetHeight;\n\n            // We only overlay ads as we only support video.\n            request.forceNonLinearFullSlot = false;\n\n            // Mute based on current state\n            request.setAdWillPlayMuted(!this.player.muted);\n\n            this.loader.requestAds(request);\n        } catch (e) {\n            this.onAdError(e);\n        }\n    }\n\n    /**\n     * Update the ad countdown\n     * @param {boolean} start\n     */\n    pollCountdown(start = false) {\n        if (!start) {\n            clearInterval(this.countdownTimer);\n            this.elements.container.removeAttribute('data-badge-text');\n            return;\n        }\n\n        const update = () => {\n            const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n            this.elements.container.setAttribute('data-badge-text', label);\n        };\n\n        this.countdownTimer = setInterval(update, 100);\n    }\n\n    /**\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\n     * @param {Event} adsManagerLoadedEvent\n     */\n    onAdsManagerLoaded(event) {\n        // Load could occur after a source change (race condition)\n        if (!this.enabled) {\n            return;\n        }\n\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add advertisement cue's within the time line if available\n        if (!is.empty(this.cuePoints)) {\n            this.cuePoints.forEach(cuePoint => {\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n                    const seekElement = this.player.elements.progress;\n\n                    if (is.element(seekElement)) {\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\n                        const cue = createElement('span', {\n                            class: this.player.config.classNames.cues,\n                        });\n\n                        cue.style.left = `${cuePercentage.toString()}%`;\n                        seekElement.appendChild(cue);\n                    }\n                }\n            });\n        }\n\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n    }\n\n    /**\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {Event} event\n     */\n    onAdEvent(event) {\n        const { container } = this.player.elements;\n\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n\n        // Proxy event\n        const dispatchEvent = type => {\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\n            triggerEvent.call(this.player, this.player.media, event);\n        };\n\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                // This is the first event sent for an ad - it is possible to determine whether the\n                // ad is a video ad or an overlay\n                this.trigger('loaded');\n\n                // Bubble event\n                dispatchEvent(event.type);\n\n                // Start countdown\n                this.pollCountdown(true);\n\n                if (!ad.isLinear()) {\n                    // Position AdDisplayContainer correctly for overlay\n                    ad.width = container.offsetWidth;\n                    ad.height = container.offsetHeight;\n                }\n\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n                break;\n\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                // All ads for the current videos are done. We can now request new advertisements\n                // in case the video is re-played\n\n                // Fire event\n                dispatchEvent(event.type);\n\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\n                // So here we load a new video when all ads are done.\n                // Then we load new ads within a new adsManager. When the video\n                // Is started - after - the ads are loaded, then we get ads.\n                // You can also easily test cancelling and reloading by running\n                // player.ads.cancel() and player.ads.play from the console I guess.\n                // this.player.source = {\n                //     type: 'video',\n                //     title: 'View From A Blue Moon',\n                //     sources: [{\n                //         src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n                // 'video/mp4', }], poster:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n                // };\n\n                // TODO: So there is still this thing where a video should only be allowed to start\n                // playing when the IMA SDK is ready or has failed\n\n                this.loadAds();\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n                // This event indicates the ad has started - the video player can adjust the UI,\n                // for example display a pause button and remaining time. Fired when content should\n                // be paused. This usually happens right before an ad is about to cover the content\n\n                dispatchEvent(event.type);\n\n                this.pauseContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n                // This event indicates the ad has finished - the video player can perform\n                // appropriate UI actions, such as removing the timer for remaining time detection.\n                // Fired when content should be resumed. This usually happens when an ad finishes\n                // or collapses\n\n                dispatchEvent(event.type);\n\n                this.pollCountdown();\n\n                this.resumeContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.STARTED:\n            case google.ima.AdEvent.Type.MIDPOINT:\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.IMPRESSION:\n            case google.ima.AdEvent.Type.CLICK:\n                dispatchEvent(event.type);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Any ad error handling comes through here\n     * @param {Event} event\n     */\n    onAdError(event) {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n    }\n\n    /**\n     * Setup hooks for Plyr and window events. This ensures\n     * the mid- and post-roll launch at the correct time. And\n     * resize the advertisement when the player resizes\n     */\n    listeners() {\n        const { container } = this.player.elements;\n        let time;\n\n        // Add listeners to the required events\n        this.player.on('ended', () => {\n            this.loader.contentComplete();\n        });\n\n        this.player.on('seeking', () => {\n            time = this.player.currentTime;\n            return time;\n        });\n\n        this.player.on('seeked', () => {\n            const seekedTime = this.player.currentTime;\n\n            if (is.empty(this.cuePoints)) {\n                return;\n            }\n\n            this.cuePoints.forEach((cuePoint, index) => {\n                if (time < cuePoint && cuePoint < seekedTime) {\n                    this.manager.discardAdBreak();\n                    this.cuePoints.splice(index, 1);\n                }\n            });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n            if (this.manager) {\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n            }\n        });\n    }\n\n    /**\n     * Initialize the adsManager and start playing advertisements\n     */\n    play() {\n        const { container } = this.player.elements;\n\n        if (!this.managerPromise) {\n            this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise\n            .then(() => {\n                // Initialize the container. Must be done via a user action on mobile devices\n                this.elements.displayContainer.initialize();\n\n                try {\n                    if (!this.initialized) {\n                        // Initialize the ads manager. Ad rules playlist will start at this time\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n                        // Call play to start showing the ad. Single video and overlay ads will\n                        // start at this time; the call will be ignored for ad rules\n                        this.manager.start();\n                    }\n\n                    this.initialized = true;\n                } catch (adError) {\n                    // An error may be thrown if there was a problem with the\n                    // VAST response\n                    this.onAdError(adError);\n                }\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Resume our video\n     */\n    resumeContent() {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play our video\n        if (this.player.currentTime < this.player.duration) {\n            this.player.play();\n        }\n    }\n\n    /**\n     * Pause our video\n     */\n    pauseContent() {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing.\n        this.playing = true;\n\n        // Pause our video.\n        this.player.pause();\n    }\n\n    /**\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\n     * video requests. https://developers.google.com/interactive-\n     * media-ads/docs/sdks/android/faq#8\n     */\n    cancel() {\n        // Pause our video\n        if (this.initialized) {\n            this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n    }\n\n    /**\n     * Re-create our adsManager\n     */\n    loadAds() {\n        // Tell our adsManager to go bye bye\n        this.managerPromise\n            .then(() => {\n                // Destroy our adsManager\n                if (this.manager) {\n                    this.manager.destroy();\n                }\n\n                // Re-set our adsManager promises\n                this.managerPromise = new Promise(resolve => {\n                    this.on('loaded', resolve);\n                    this.player.debug.log(this.manager);\n                });\n\n                // Now request some new advertisements\n                this.requestAds();\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Handles callbacks after an ad event was invoked\n     * @param {string} event - Event type\n     */\n    trigger(event, ...args) {\n        const handlers = this.events[event];\n\n        if (is.array(handlers)) {\n            handlers.forEach(handler => {\n                if (is.function(handler)) {\n                    handler.apply(this, args);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     * @return {Ads}\n     */\n    on(event, callback) {\n        if (!is.array(this.events[event])) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(callback);\n\n        return this;\n    }\n\n    /**\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\n     * advertisement is playing, or when a user action is required to start, then we clear the\n     * timer on ad ready\n     * @param {number} time\n     * @param {string} from\n     */\n    startSafetyTimer(time, from) {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n        this.safetyTimer = setTimeout(() => {\n            this.cancel();\n            this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n    }\n\n    /**\n     * Clear our safety timer(s)\n     * @param {string} from\n     */\n    clearSafetyTimer(from) {\n        if (!is.nullOrUndefined(this.safetyTimer)) {\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n            clearTimeout(this.safetyTimer);\n            this.safetyTimer = null;\n        }\n    }\n}\n\nexport default Ads;\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport { providers } from './config/types';\nimport html5 from './html5';\nimport media from './media';\nimport support from './support';\nimport ui from './ui';\nimport { createElement, insertElement, removeElement } from './utils/elements';\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\n\nconst source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n        if (is.string(attributes)) {\n            insertElement(type, this.media, {\n                src: attributes,\n            });\n        } else if (is.array(attributes)) {\n            attributes.forEach(attribute => {\n                insertElement(type, this.media, attribute);\n            });\n        }\n    },\n\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n        if (!getDeep(input, 'sources.length')) {\n            this.debug.warn('Invalid source format');\n            return;\n        }\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        // Destroy instance and re-setup\n        this.destroy.call(\n            this,\n            () => {\n                // Reset quality options\n                this.options.quality = [];\n\n                // Remove elements\n                removeElement(this.media);\n                this.media = null;\n\n                // Reset class name\n                if (is.element(this.elements.container)) {\n                    this.elements.container.removeAttribute('class');\n                }\n\n                // Set the type and provider\n                const { sources, type } = input;\n                const [{ provider = providers.html5, src }] = sources;\n                const tagName = provider === 'html5' ? type : 'div';\n                const attributes = provider === 'html5' ? {} : { src };\n\n                Object.assign(this, {\n                    provider,\n                    type,\n                    // Check for support\n                    supported: support.check(type, provider, this.config.playsinline),\n                    // Create new element\n                    media: createElement(tagName, attributes),\n                });\n\n                // Inject the new element\n                this.elements.container.appendChild(this.media);\n\n                // Autoplay the new source?\n                if (is.boolean(input.autoplay)) {\n                    this.config.autoplay = input.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (this.isHTML5) {\n                    if (this.config.crossorigin) {\n                        this.media.setAttribute('crossorigin', '');\n                    }\n                    if (this.config.autoplay) {\n                        this.media.setAttribute('autoplay', '');\n                    }\n                    if (!is.empty(input.poster)) {\n                        this.poster = input.poster;\n                    }\n                    if (this.config.loop.active) {\n                        this.media.setAttribute('loop', '');\n                    }\n                    if (this.config.muted) {\n                        this.media.setAttribute('muted', '');\n                    }\n                    if (this.config.playsinline) {\n                        this.media.setAttribute('playsinline', '');\n                    }\n                }\n\n                // Restore class hook\n                ui.addStyleHook.call(this);\n\n                // Set new sources for html5\n                if (this.isHTML5) {\n                    source.insertElements.call(this, 'source', sources);\n                }\n\n                // Set video title\n                this.config.title = input.title;\n\n                // Set up from scratch\n                media.setup.call(this);\n\n                // HTML5 stuff\n                if (this.isHTML5) {\n                    // Setup captions\n                    if (Object.keys(input).includes('tracks')) {\n                        source.insertElements.call(this, 'track', input.tracks);\n                    }\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n                    // Setup interface\n                    ui.build.call(this);\n                }\n\n                if (this.isHTML5) {\n                    // Load HTML5 sources\n                    this.media.load();\n                }\n\n                // Update the fullscreen support\n                this.fullscreen.update();\n            },\n            true,\n        );\n    },\n};\n\nexport default source;\n","// ==========================================================================\n// Plyr\n// plyr.js v3.4.7\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport { closest } from './utils/arrays';\nimport captions from './captions';\nimport defaults from './config/defaults';\nimport { pip } from './config/states';\nimport { getProviderByUrl, providers, types } from './config/types';\nimport Console from './console';\nimport controls from './controls';\nimport Fullscreen from './fullscreen';\nimport Listeners from './listeners';\nimport media from './media';\nimport Ads from './plugins/ads';\nimport source from './source';\nimport Storage from './storage';\nimport support from './support';\nimport ui from './ui';\nimport { createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { cloneDeep, extend } from './utils/objects';\nimport { parseUrl } from './utils/urls';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n    constructor(target, options) {\n        this.timers = {};\n\n        // State\n        this.ready = false;\n        this.loading = false;\n        this.failed = false;\n\n        // Touch device\n        this.touch = support.touch;\n\n        // Set the media element\n        this.media = target;\n\n        // String selector passed\n        if (is.string(this.media)) {\n            this.media = document.querySelectorAll(this.media);\n        }\n\n        // jQuery, NodeList or Array passed, use first element\n        if ((window.jQuery && this.media instanceof jQuery) || is.nodeList(this.media) || is.array(this.media)) {\n            // eslint-disable-next-line\n            this.media = this.media[0];\n        }\n\n        // Set config\n        this.config = extend(\n            {},\n            defaults,\n            Plyr.defaults,\n            options || {},\n            (() => {\n                try {\n                    return JSON.parse(this.media.getAttribute('data-plyr-config'));\n                } catch (e) {\n                    return {};\n                }\n            })(),\n        );\n\n        // Elements cache\n        this.elements = {\n            container: null,\n            captions: null,\n            buttons: {},\n            display: {},\n            progress: {},\n            inputs: {},\n            settings: {\n                popup: null,\n                menu: null,\n                panels: {},\n                buttons: {},\n            },\n        };\n\n        // Captions\n        this.captions = {\n            active: null,\n            currentTrack: -1,\n            meta: new WeakMap(),\n        };\n\n        // Fullscreen\n        this.fullscreen = {\n            active: false,\n        };\n\n        // Options\n        this.options = {\n            speed: [],\n            quality: [],\n        };\n\n        // Debugging\n        // TODO: move to globals\n        this.debug = new Console(this.config.debug);\n\n        // Log config options and support\n        this.debug.log('Config', this.config);\n        this.debug.log('Support', support);\n\n        // We need an element to setup\n        if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n            this.debug.error('Setup failed: no suitable element passed');\n            return;\n        }\n\n        // Bail if the element is initialized\n        if (this.media.plyr) {\n            this.debug.warn('Target already setup');\n            return;\n        }\n\n        // Bail if not enabled\n        if (!this.config.enabled) {\n            this.debug.error('Setup failed: disabled by config');\n            return;\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!support.check().api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Cache original element state for .destroy()\n        const clone = this.media.cloneNode(true);\n        clone.autoplay = false;\n        this.elements.original = clone;\n\n        // Set media type based on tag or data attribute\n        // Supported: video, audio, vimeo, youtube\n        const type = this.media.tagName.toLowerCase();\n\n        // Embed properties\n        let iframe = null;\n        let url = null;\n\n        // Different setup based on type\n        switch (type) {\n            case 'div':\n                // Find the frame\n                iframe = this.media.querySelector('iframe');\n\n                // <iframe> type\n                if (is.element(iframe)) {\n                    // Detect provider\n                    url = parseUrl(iframe.getAttribute('src'));\n                    this.provider = getProviderByUrl(url.toString());\n\n                    // Rework elements\n                    this.elements.container = this.media;\n                    this.media = iframe;\n\n                    // Reset classname\n                    this.elements.container.className = '';\n\n                    // Get attributes from URL and set config\n                    if (url.search.length) {\n                        const truthy = ['1', 'true'];\n\n                        if (truthy.includes(url.searchParams.get('autoplay'))) {\n                            this.config.autoplay = true;\n                        }\n                        if (truthy.includes(url.searchParams.get('loop'))) {\n                            this.config.loop.active = true;\n                        }\n\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\n                        // YouTube requires the playsinline in the URL\n                        if (this.isYouTube) {\n                            this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n                            this.config.hl = url.searchParams.get('hl'); // TODO: Should this be setting language?\n                        } else {\n                            this.config.playsinline = true;\n                        }\n                    }\n                } else {\n                    // <div> with attributes\n                    this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n                    // Remove attribute\n                    this.media.removeAttribute(this.config.attributes.embed.provider);\n                }\n\n                // Unsupported or missing provider\n                if (is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\n                    this.debug.error('Setup failed: Invalid provider');\n                    return;\n                }\n\n                // Audio will come later for external providers\n                this.type = types.video;\n\n                break;\n\n            case 'video':\n            case 'audio':\n                this.type = type;\n                this.provider = providers.html5;\n\n                // Get config from attributes\n                if (this.media.hasAttribute('crossorigin')) {\n                    this.config.crossorigin = true;\n                }\n                if (this.media.hasAttribute('autoplay')) {\n                    this.config.autoplay = true;\n                }\n                if (this.media.hasAttribute('playsinline') || this.media.hasAttribute('webkit-playsinline')) {\n                    this.config.playsinline = true;\n                }\n                if (this.media.hasAttribute('muted')) {\n                    this.config.muted = true;\n                }\n                if (this.media.hasAttribute('loop')) {\n                    this.config.loop.active = true;\n                }\n\n                break;\n\n            default:\n                this.debug.error('Setup failed: unsupported type');\n                return;\n        }\n\n        // Check for support again but with type\n        this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n        // If no support for even API, bail\n        if (!this.supported.api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        this.eventListeners = [];\n\n        // Create listeners\n        this.listeners = new Listeners(this);\n\n        // Setup local storage for user settings\n        this.storage = new Storage(this);\n\n        // Store reference\n        this.media.plyr = this;\n\n        // Wrap media\n        if (!is.element(this.elements.container)) {\n            this.elements.container = createElement('div', {\n                class: this.config.classNames.videoInitFlag,\n            });\n            wrap(this.media, this.elements.container);\n        }\n\n        // Add style hook\n        ui.addStyleHook.call(this);\n\n        // Setup media\n        media.setup.call(this);\n\n        // Listen for events if debugging\n        if (this.config.debug) {\n            on.call(this, this.elements.container, this.config.events.join(' '), event => {\n                this.debug.log(`event: ${event.type}`);\n            });\n        }\n\n        // Setup interface\n        // If embed but not fully supported, build interface now to avoid flash of controls\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n            ui.build.call(this);\n        }\n\n        // Container listeners\n        this.listeners.container();\n\n        // Global listeners\n        this.listeners.global();\n\n        // Setup fullscreen\n        this.fullscreen = new Fullscreen(this);\n\n        // Setup ads if provided\n        if (this.config.ads.enabled) {\n            this.ads = new Ads(this);\n        }\n\n        // Autoplay if required\n        if (this.config.autoplay) {\n            this.play();\n        }\n\n        // Seek time will be recorded (in listeners.js) so we can prevent hiding controls for a few seconds after seek\n        this.lastSeekTime = 0;\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n        return Boolean(this.provider === providers.html5);\n    }\n\n    get isEmbed() {\n        return Boolean(this.isYouTube || this.isVimeo);\n    }\n\n    get isYouTube() {\n        return Boolean(this.provider === providers.youtube);\n    }\n\n    get isVimeo() {\n        return Boolean(this.provider === providers.vimeo);\n    }\n\n    get isVideo() {\n        return Boolean(this.type === types.video);\n    }\n\n    get isAudio() {\n        return Boolean(this.type === types.audio);\n    }\n\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n    play() {\n        if (!is.function(this.media.play)) {\n            return null;\n        }\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n    }\n\n    /**\n     * Pause the media\n     */\n    pause() {\n        if (!this.playing || !is.function(this.media.pause)) {\n            return;\n        }\n\n        this.media.pause();\n    }\n\n    /**\n     * Get playing state\n     */\n    get playing() {\n        return Boolean(this.ready && !this.paused && !this.ended);\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n        return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get stopped state\n     */\n    get stopped() {\n        return Boolean(this.paused && this.currentTime === 0);\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n        return Boolean(this.media.ended);\n    }\n\n    /**\n     * Toggle playback based on current status\n     * @param {boolean} input\n     */\n    togglePlay(input) {\n        // Toggle based on current state if nothing passed\n        const toggle = is.boolean(input) ? input : !this.playing;\n\n        if (toggle) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n\n    /**\n     * Stop playback\n     */\n    stop() {\n        if (this.isHTML5) {\n            this.pause();\n            this.restart();\n        } else if (is.function(this.media.stop)) {\n            this.media.stop();\n        }\n    }\n\n    /**\n     * Restart playback\n     */\n    restart() {\n        this.currentTime = 0;\n    }\n\n    /**\n     * Rewind\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n     */\n    rewind(seekTime) {\n        this.currentTime = this.currentTime - (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Fast forward\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n     */\n    forward(seekTime) {\n        this.currentTime = this.currentTime + (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Seek to a time\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n        // Bail if media duration isn't available yet\n        if (!this.duration) {\n            return;\n        }\n\n        // Validate input\n        const inputIsValid = is.number(input) && input > 0;\n\n        // Set\n        this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\n\n        // Logging\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n        return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n        const { buffered } = this.media;\n\n        // YouTube / Vimeo return a float between 0-1\n        if (is.number(buffered)) {\n            return buffered;\n        }\n\n        // HTML5\n        // TODO: Handle buffered chunks of the media\n        // (i.e. seek to another section buffers only that section)\n        if (buffered && buffered.length && this.duration > 0) {\n            return buffered.end(0) / this.duration;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n        return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n        // Faux duration set via config\n        const fauxDuration = parseFloat(this.config.duration);\n\n        // Media duration can be NaN or Infinity before the media has loaded\n        const realDuration = (this.media || {}).duration;\n        const duration = !is.number(realDuration) || realDuration === Infinity ? 0 : realDuration;\n\n        // If config duration is funky, use regular duration\n        return fauxDuration || duration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n        let volume = value;\n        const max = 1;\n        const min = 0;\n\n        if (is.string(volume)) {\n            volume = Number(volume);\n        }\n\n        // Load volume from storage if no value specified\n        if (!is.number(volume)) {\n            volume = this.storage.get('volume');\n        }\n\n        // Use config if all else fails\n        if (!is.number(volume)) {\n            ({ volume } = this.config);\n        }\n\n        // Maximum is volumeMax\n        if (volume > max) {\n            volume = max;\n        }\n        // Minimum is volumeMin\n        if (volume < min) {\n            volume = min;\n        }\n\n        // Update config\n        this.config.volume = volume;\n\n        // Set the player volume\n        this.media.volume = volume;\n\n        // If muted, and we're increasing volume manually, reset muted state\n        if (!is.empty(value) && this.muted && volume > 0) {\n            this.muted = false;\n        }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n        return Number(this.media.volume);\n    }\n\n    /**\n     * Increase volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    increaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (is.number(step) ? step : 0);\n    }\n\n    /**\n     * Decrease volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    decreaseVolume(step) {\n        this.increaseVolume(-step);\n    }\n\n    /**\n     * Set muted state\n     * @param {boolean} mute\n     */\n    set muted(mute) {\n        let toggle = mute;\n\n        // Load muted state from storage\n        if (!is.boolean(toggle)) {\n            toggle = this.storage.get('muted');\n        }\n\n        // Use config if all else fails\n        if (!is.boolean(toggle)) {\n            toggle = this.config.muted;\n        }\n\n        // Update config\n        this.config.muted = toggle;\n\n        // Set mute on the player\n        this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n        return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n        // Assume yes for all non HTML5 (as we can't tell...)\n        if (!this.isHTML5) {\n            return true;\n        }\n\n        if (this.isAudio) {\n            return true;\n        }\n\n        // Get audio tracks\n        return (\n            Boolean(this.media.mozHasAudio) ||\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\n        );\n    }\n\n    /**\n     * Set playback speed\n     * @param {number} speed - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n        let speed = null;\n\n        if (is.number(input)) {\n            speed = input;\n        }\n\n        if (!is.number(speed)) {\n            speed = this.storage.get('speed');\n        }\n\n        if (!is.number(speed)) {\n            speed = this.config.speed.selected;\n        }\n\n        // Set min/max\n        if (speed < 0.1) {\n            speed = 0.1;\n        }\n        if (speed > 2.0) {\n            speed = 2.0;\n        }\n\n        if (!this.config.speed.options.includes(speed)) {\n            this.debug.warn(`Unsupported speed (${speed})`);\n            return;\n        }\n\n        // Update config\n        this.config.speed.selected = speed;\n\n        // Set media speed\n        this.media.playbackRate = speed;\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n        return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {number} input - Quality level\n     */\n    set quality(input) {\n        const config = this.config.quality;\n        const options = this.options.quality;\n\n        if (!options.length) {\n            return;\n        }\n\n        let quality = [\n            !is.empty(input) && Number(input),\n            this.storage.get('quality'),\n            config.selected,\n            config.default,\n        ].find(is.number);\n\n        let updateStorage = true;\n\n        if (!options.includes(quality)) {\n            const value = closest(options, quality);\n            this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\n            quality = value;\n\n            // Don't update storage if quality is not supported\n            updateStorage = false;\n        }\n\n        // Update config\n        config.selected = quality;\n\n        // Set quality\n        this.media.quality = quality;\n\n        // Save to storage\n        if (updateStorage) {\n            this.storage.set({ quality });\n        }\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n        return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n        const toggle = is.boolean(input) ? input : this.config.loop.active;\n        this.config.loop.active = toggle;\n        this.media.loop = toggle;\n\n        // Set default to be a true toggle\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n        return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {object} input - The new source object (see docs)\n     */\n    set source(input) {\n        source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n        return this.media.currentSrc;\n    }\n\n    /**\n     * Get a download URL (either source or custom)\n     */\n    get download() {\n        const { download } = this.config.urls;\n\n        return is.url(download) ? download : this.source;\n    }\n\n    /**\n     * Set the poster image for a video\n     * @param {input} - the URL for the new poster image\n     */\n    set poster(input) {\n        if (!this.isVideo) {\n            this.debug.warn('Poster can only be set for video');\n            return;\n        }\n\n        ui.setPoster.call(this, input, false).catch(() => {});\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n        if (!this.isVideo) {\n            return null;\n        }\n\n        return this.media.getAttribute('poster');\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n        const toggle = is.boolean(input) ? input : this.config.autoplay;\n        this.config.autoplay = toggle;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n        return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n        captions.toggle.call(this, input, false);\n    }\n\n    /**\n     * Set the caption track by index\n     * @param {number} - Caption index\n     */\n    set currentTrack(input) {\n        captions.set.call(this, input, false);\n    }\n\n    /**\n     * Get the current caption track index (-1 if disabled)\n     */\n    get currentTrack() {\n        const { toggled, currentTrack } = this.captions;\n        return toggled ? currentTrack : -1;\n    }\n\n    /**\n     * Set the wanted language for captions\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n        captions.setLanguage.call(this, input, false);\n    }\n\n    /**\n     * Get the current track's language\n     */\n    get language() {\n        return (captions.getCurrentTrack.call(this) || {}).language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n        // Bail if no support\n        if (!support.pip) {\n            return;\n        }\n\n        // Toggle based on current state if not passed\n        const toggle = is.boolean(input) ? input : !this.pip;\n\n        // Toggle based on current state\n        // Safari\n        if (is.function(this.media.webkitSetPresentationMode)) {\n            this.media.webkitSetPresentationMode(toggle ? pip.active : pip.inactive);\n        }\n\n        // Chrome\n        if (is.function(this.media.requestPictureInPicture)) {\n            if (!this.pip && toggle) {\n                this.media.requestPictureInPicture();\n            } else if (this.pip && !toggle) {\n                document.exitPictureInPicture();\n            }\n        }\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n        if (!support.pip) {\n            return null;\n        }\n\n        // Safari\n        if (!is.empty(this.media.webkitPresentationMode)) {\n            return this.media.webkitPresentationMode === pip.active;\n        }\n\n        // Chrome\n        return this.media === document.pictureInPictureElement;\n    }\n\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n    airplay() {\n        // Show dialog if supported\n        if (support.airplay) {\n            this.media.webkitShowPlaybackTargetPicker();\n        }\n    }\n\n    /**\n     * Toggle the player controls\n     * @param {boolean} [toggle] - Whether to show the controls\n     */\n    toggleControls(toggle) {\n        // Don't toggle if missing UI support or if it's audio\n        if (this.supported.ui && !this.isAudio) {\n            // Get state before change\n            const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\n\n            // Negate the argument if not undefined since adding the class to hides the controls\n            const force = typeof toggle === 'undefined' ? undefined : !toggle;\n\n            // Apply and get updated state\n            const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\n\n            // Close menu\n            if (hiding && this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n                controls.toggleMenu.call(this, false);\n            }\n\n            // Trigger event on change\n            if (hiding !== isHidden) {\n                const eventName = hiding ? 'controlshidden' : 'controlsshown';\n                triggerEvent.call(this, this.media, eventName);\n            }\n\n            return !hiding;\n        }\n\n        return false;\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    on(event, callback) {\n        on.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Add event listeners once\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    once(event, callback) {\n        once.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Remove event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    off(event, callback) {\n        off(this.elements.container, event, callback);\n    }\n\n    /**\n     * Destroy an instance\n     * Event listeners are removed when elements are removed\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n     * @param {function} callback - Callback for when destroy is complete\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\n     */\n    destroy(callback, soft = false) {\n        if (!this.ready) {\n            return;\n        }\n\n        const done = () => {\n            // Reset overflow (incase destroyed while in fullscreen)\n            document.body.style.overflow = '';\n\n            // GC for embed\n            this.embed = null;\n\n            // If it's a soft destroy, make minimal changes\n            if (soft) {\n                if (Object.keys(this.elements).length) {\n                    // Remove elements\n                    removeElement(this.elements.buttons.play);\n                    removeElement(this.elements.captions);\n                    removeElement(this.elements.controls);\n                    removeElement(this.elements.wrapper);\n\n                    // Clear for GC\n                    this.elements.buttons.play = null;\n                    this.elements.captions = null;\n                    this.elements.controls = null;\n                    this.elements.wrapper = null;\n                }\n\n                // Callback\n                if (is.function(callback)) {\n                    callback();\n                }\n            } else {\n                // Unbind listeners\n                unbindListeners.call(this);\n\n                // Replace the container with the original element provided\n                replaceElement(this.elements.original, this.elements.container);\n\n                // Event\n                triggerEvent.call(this, this.elements.original, 'destroyed', true);\n\n                // Callback\n                if (is.function(callback)) {\n                    callback.call(this.elements.original);\n                }\n\n                // Reset state\n                this.ready = false;\n\n                // Clear for garbage collection\n                setTimeout(() => {\n                    this.elements = null;\n                    this.media = null;\n                }, 200);\n            }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Provider specific stuff\n        if (this.isHTML5) {\n            // Clear timeout\n            clearTimeout(this.timers.loading);\n\n            // Restore native video controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Clean up\n            done();\n        } else if (this.isYouTube) {\n            // Clear timers\n            clearInterval(this.timers.buffering);\n            clearInterval(this.timers.playing);\n\n            // Destroy YouTube API\n            if (this.embed !== null && is.function(this.embed.destroy)) {\n                this.embed.destroy();\n            }\n\n            // Clean up\n            done();\n        } else if (this.isVimeo) {\n            // Destroy Vimeo API\n            // then clean up (wait, to prevent postmessage errors)\n            if (this.embed !== null) {\n                this.embed.unload().then(done);\n            }\n\n            // Vimeo does not always return\n            setTimeout(done, 200);\n        }\n    }\n\n    /**\n     * Check for support for a mime type (HTML5 only)\n     * @param {string} type - Mime type\n     */\n    supports(type) {\n        return support.mime.call(this, type);\n    }\n\n    /**\n     * Check for support\n     * @param {string} type - Player type (audio/video)\n     * @param {string} provider - Provider (html5/youtube/vimeo)\n     * @param {bool} inline - Where player has `playsinline` sttribute\n     */\n    static supported(type, provider, inline) {\n        return support.check(type, provider, inline);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {string} url - URL for the SVG sprite\n     * @param {string} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n        return loadSprite(url, id);\n    }\n\n    /**\n     * Setup multiple instances\n     * @param {*} selector\n     * @param {object} options\n     */\n    static setup(selector, options = {}) {\n        let targets = null;\n\n        if (is.string(selector)) {\n            targets = Array.from(document.querySelectorAll(selector));\n        } else if (is.nodeList(selector)) {\n            targets = Array.from(selector);\n        } else if (is.array(selector)) {\n            targets = selector.filter(is.element);\n        }\n\n        if (is.empty(targets)) {\n            return null;\n        }\n\n        return targets.map(t => new Plyr(t, options));\n    }\n}\n\nPlyr.defaults = cloneDeep(defaults);\n\nexport default Plyr;\n"]}