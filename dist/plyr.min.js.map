{"version":3,"sources":["src/js/utils/is.js","src/js/utils/events.js","src/js/utils/elements.js","src/js/utils/animation.js","src/js/utils/browser.js","src/js/support.js","src/js/html5.js","src/js/utils/arrays.js","src/js/utils/objects.js","src/js/utils/strings.js","src/js/utils/i18n.js","src/js/storage.js","src/js/utils/fetch.js","src/js/utils/loadSprite.js","src/js/utils/time.js","src/js/controls.js","src/js/utils/urls.js","src/js/captions.js","src/js/config/defaults.js","src/js/config/states.js","src/js/config/types.js","src/js/console.js","src/js/fullscreen.js","src/js/utils/loadImage.js","src/js/ui.js","src/js/listeners.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils/loadScript.js","src/js/plugins/vimeo.js","src/js/plugins/youtube.js","src/js/media.js","src/js/plugins/ads.js","src/js/source.js","src/js/plyr.js"],"names":["getConstructor","input","constructor","instanceOf","Boolean","isNullOrUndefined","isObject","Object","isString","String","isArray","Array","isNodeList","NodeList","isEmpty","length","keys","is","nullOrUndefined","object","number","Number","isNaN","string","boolean","function","Function","array","weakMap","WeakMap","nodeList","element","Element","textNode","Text","event","Event","keyboardEvent","KeyboardEvent","cue","window","TextTrackCue","VTTCue","track","TextTrack","kind","url","URL","startsWith","concat","hostname","e","empty","supportsPassiveListeners","supported","options","defineProperty","get","addEventListener","removeEventListener","toggleListener","callback","_this","this","toggle","arguments","undefined","passive","capture","events","split","forEach","type","eventListeners","push","on","call","off","once","onceCallback","_len","args","_key","apply","triggerEvent","bubbles","detail","CustomEvent","assign","plyr","dispatchEvent","wrap","elements","wrapper","targets","from","reverse","index","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","insertBefore","setAttributes","attributes","entries","filter","_ref","value","_slicedToArray","_ref3","_ref4","key","setAttribute","createElement","text","document","innerText","insertElement","removeElement","removeChild","emptyElement","childNodes","lastChild","replaceElement","newChild","oldChild","replaceChild","getAttributesFromSelector","sel","existingAttributes","existing","s","selector","trim","className","replace","parts","charAt","class","id","toggleHidden","hidden","hide","removeAttribute","toggleClass","force","map","method","classList","contains","hasClass","matches","querySelectorAll","includes","getElements","container","getElement","querySelector","setFocus","tabFocus","focus","preventScroll","config","classNames","transitionEndEvent","WebkitTransition","MozTransition","OTransition","transition","find","style","repaint","setTimeout","offsetHeight","range","browser","isIE","documentMode","isWebkit","documentElement","test","navigator","userAgent","isIPhone","platform","isIos","defaultCodecs","audio/ogg","audio/wav","video/webm","video/mp4","video/ogg","support","audio","video","check","provider","playsinline","canPlayInline","api","ui","rangeInput","pip","webkitSetPresentationMode","pictureInPictureEnabled","disablePictureInPicture","airplay","WebKitPlaybackTargetAvailabilityEvent","mime","inputType","mediaType","isHTML5","media","canPlayType","textTracks","touch","transitions","reducedMotion","matchMedia","html5","getSources","source","getAttribute","getQualityOptions","extend","player","set","_player$media","currentTime","paused","preload","readyState","src","play","load","quality","cancelRequests","blankVideo","debug","log","dedupe","item","indexOf","getDeep","path","reduce","obj","target","sources","shift","_defineProperty","format","toString","match","i","replaceAll","RegExp","toTitleCase","toUpperCase","substr","toLowerCase","toCamelCase","toPascalCase","slice","getHTML","innerHTML","prototype","resources","vimeo","youtube","i18n","{seektime}","seekTime","{title}","title","_ref2","Storage","_classCallCheck","enabled","storage","store","localStorage","getItem","json","JSON","parse","setItem","stringify","removeItem","fetch","responseType","Promise","resolve","reject","request","XMLHttpRequest","responseText","response","Error","status","open","send","loadSprite","option","hasId","exists","getElementById","update","data","body","insertAdjacentElement","useStorage","inlineSvg","str","prefix","svg","decodeURIComponent","substring","toSvg","cached","content","then","result","catch","getHours","parseInt","getMinutes","getSeconds","formatTime","time","displayHours","inverted","hours","mins","secs","controls","getIconUrl","cors","iconUrl","location","host","svg4everybody","findElements","selectors","buttons","pause","restart","rewind","fastForward","mute","settings","captions","fullscreen","progress","inputs","seek","volume","display","buffer","duration","seekTooltip","tooltip","error","warn","toggleNativeControls","createIcon","iconPath","iconPrefix","icon","createElementNS","role","focusable","use","setAttributeNS","createLabel","attr","join","createBadge","badge","menu","createButton","buttonType","props","label","labelPressed","iconPressed","control","button","createRange","min","max","step","autocomplete","aria-label","aria-valuemin","aria-valuemax","aria-valuenow","updateRangeFill","createProgress","aria-hidden","suffixKey","played","suffix","createTime","bindMenuItemShortcuts","menuItem","which","preventDefault","stopPropagation","isRadioButton","showMenuPanel","nextElementSibling","firstElementChild","previousElementSibling","lastElementChild","focusFirstMenuItem","createMenuItem","_this2","list","_ref$badge","_ref$checked","checked","aria-checked","flex","enumerable","children","node","listeners","bind","currentTrack","speed","parseFloat","updateTimeDisplay","updateVolume","setRange","muted","pressed","updateProgress","_this3","current","toFixed","getElementsByTagName","nodeValue","setProgress","buffered","percent","setProperty","updateSeekTooltip","_this4","tooltips","clientRect","getBoundingClientRect","visible","width","pageX","left","timeUpdate","invert","invertTime","seeking","durationUpdate","Math","pow","hasDuration","displayDuration","toggleMenuButton","setting","updateSetting","pane","panels","default","getLabel","setQualityMenu","_this5","checkMenu","getBadge","sort","a","b","sorting","setCaptionsMenu","_this6","tracks","getTracks","toggled","language","unshift","setSpeedMenu","_this7","isVimeo","values","some","popup","firstItem","toggleMenu","show","isMenuItem","getMenuSize","tab","clone","position","opacity","scrollWidth","height","scrollHeight","_this8","size","restore","propertyName","setDownloadLink","download","create","_this9","aria-haspopup","aria-controls","aria-expanded","inner","home","backButton","href","urls","isEmbed","inject","_this10","floor","random","seektime","addProperty","controlPressed","parseUrl","parser","buildUrlParams","params","URLSearchParams","setup","isVideo","isYouTube","protocol","blob","createObjectURL","languages","userLanguage","active","trackEvents","_this$captions","meta","currentTrackNode","languageExists","mode","updateCues","setLanguage","activeClass","findTrack","_toConsumableArray","embed","enableTextTrack","has","sortIsDefault","sorted","every","getCurrentTrack","cues","activeCues","getCueAsHTML","cueText","caption","defaults","autoplay","autopause","toggleInvert","ratio","clickToPlay","hideControls","resetOnEnd","disableContextMenu","loop","selected","keyboard","focused","global","fallback","iosNative","seekLabel","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","frameTitle","menuBack","normal","start","end","all","reset","disabled","advertisement","qualityBadge","2160","1440","1080","720","576","480","sdk","iframe","googleIMA","editable","labels","videoInitFlag","embedContainer","poster","posterEnabled","ads","playing","stopped","loading","hover","isTouch","uiSupported","noTransition","google","publisherId","providers","types","noop","Console","console","onChange","first","last","keyCode","activeElement","shiftKey","toggleFallback","scrollPosition","x","scrollX","y","scrollY","scrollTo","overflow","viewport","head","property","hasProperty","cleanupViewport","part","Fullscreen","native","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","action","cancelFullScreen","exit","enter","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","pre","loadImage","minWidth","image","Image","handler","onload","onerror","naturalWidth","addStyleHook","build","checkPlaying","ready","setTitle","setPoster","togglePoster","enable","err","backgroundImage","backgroundSize","toggleControls","checkLoading","clearTimeout","timers","recentTouchSeek","lastSeekTime","Date","now","Listeners","lastKey","focusTimer","lastKeyDown","handleKey","setTabFocus","firstTouch","code","repeat","altKey","ctrlKey","metaKey","togglePlay","increaseVolume","decreaseVolume","forward","toggleCaptions","timeStamp","wasKeyDown","delay","initialized","managerPromise","isAudio","ended","proxyEvents","_event$detail","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","proxy","inputEvent","rect","currentTarget","hasAttribute","done","seekTo","webkitDirectionInvertedFromDevice","_map2","deltaX","deltaY","direction","sign","abs","module","exports","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","splice","executeCallbacks","depsNotFound","success","loadFile","callbackFn","numTries","isLegacyIECss","doc","async","maxTries","numRetries","beforeCallbackFn","before","pathStripped","rel","relList","as","onbeforeload","ev","sheet","cssText","defaultPrevented","loadjs","paths","arg1","arg2","loadFn","fn","numWaiting","loadFiles","returnPromise","deps","bundleIds","r","subscribe","isDefined","factory","loadScript","assurePlaybackState","hasPlayed","setAspectRatio","Vimeo","_split$map2","padding","paddingBottom","offset","transform","byline","portrait","transparent","gesture","$2","thumbnail_large","pathname","Player","disableTextTrack","stop","restorePause","setVolume","setCurrentTime","setPlaybackRate","name","currentSrc","setLoop","getVideoUrl","getVideoWidth","getVideoHeight","dimensions","getRatio","w","h","setAutopause","state","getVideoTitle","getCurrentTime","getDuration","getTextTracks","_ref$cues","strippedCues","fragment","createDocumentFragment","firstChild","getPaused","seconds","_vimeo$ratio$split$ma2","dimension","YT","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","getTitle","videoId","getVideoData","items","snippet","currentId","posterSrc","playerVars","hl","showinfo","iv_load_policy","modestbranding","disablekb","widget_referrer","cc_load_policy","cc_lang_pref","onError","message","2","5","100","101","150","onPlaybackRateChange","instance","playbackRate","getPlaybackRate","onReady","playVideo","pauseVideo","stopVideo","getAvailablePlaybackRates","clearInterval","buffering","setInterval","getVideoLoadedFraction","lastBuffered","onStateChange","unMute","Ads","displayContainer","manager","loader","cuePoints","safetyTimer","countdownTimer","ima","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","AdEvent","onAdEvent","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","contentComplete","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","initialize","init","adError","zIndex","destroy","_this11","handlers","_this12","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","AV_WIDTH","AV_HEIGHT","AV_CDIM2","insertElements","attribute","change","_sources$","_sources$$provider","tagName","crossorigin","Plyr","failed","jQuery","original","getProviderByUrl","search","truthy","searchParams","webkitShowPlaybackTargetPicker","isHidden","hiding","eventName","soft","unload","inputIsValid","fauxDuration","realDuration","Infinity","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","updateStorage","prev","curr","closest","requestPictureInPicture","exitPictureInPicture","webkitPresentationMode","pictureInPictureElement","inline","t"],"mappings":"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","file":"plyr.min.js","sourcesContent":["// ==========================================================================\n// Type checking utils\n// ==========================================================================\n\nconst getConstructor = input => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\nconst isNullOrUndefined = input => input === null || typeof input === 'undefined';\nconst isObject = input => getConstructor(input) === Object;\nconst isNumber = input => getConstructor(input) === Number && !Number.isNaN(input);\nconst isString = input => getConstructor(input) === String;\nconst isBoolean = input => getConstructor(input) === Boolean;\nconst isFunction = input => getConstructor(input) === Function;\nconst isArray = input => Array.isArray(input);\nconst isWeakMap = input => instanceOf(input, WeakMap);\nconst isNodeList = input => instanceOf(input, NodeList);\nconst isElement = input => instanceOf(input, Element);\nconst isTextNode = input => getConstructor(input) === Text;\nconst isEvent = input => instanceOf(input, Event);\nconst isKeyboardEvent = input => instanceOf(input, KeyboardEvent);\nconst isCue = input => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\nconst isTrack = input => instanceOf(input, TextTrack) || (!isNullOrUndefined(input) && isString(input.kind));\n\nconst isEmpty = input =>\n    isNullOrUndefined(input) ||\n    ((isString(input) || isArray(input) || isNodeList(input)) && !input.length) ||\n    (isObject(input) && !Object.keys(input).length);\n\nconst isUrl = input => {\n    // Accept a URL object\n    if (instanceOf(input, window.URL)) {\n        return true;\n    }\n\n    // Must be string from here\n    if (!isString(input)) {\n        return false;\n    }\n\n    // Add the protocol if required\n    let string = input;\n    if (!input.startsWith('http://') || !input.startsWith('https://')) {\n        string = `http://${input}`;\n    }\n\n    try {\n        return !isEmpty(new URL(string).hostname);\n    } catch (e) {\n        return false;\n    }\n};\n\nexport default {\n    nullOrUndefined: isNullOrUndefined,\n    object: isObject,\n    number: isNumber,\n    string: isString,\n    boolean: isBoolean,\n    function: isFunction,\n    array: isArray,\n    weakMap: isWeakMap,\n    nodeList: isNodeList,\n    element: isElement,\n    textNode: isTextNode,\n    event: isEvent,\n    keyboardEvent: isKeyboardEvent,\n    cue: isCue,\n    track: isTrack,\n    url: isUrl,\n    empty: isEmpty,\n};\n","// ==========================================================================\n// Event utils\n// ==========================================================================\n\nimport is from './is';\n\n// Check for passive event listener support\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n// https://www.youtube.com/watch?v=NPM6172J22g\nconst supportsPassiveListeners = (() => {\n    // Test via a getter in the options object to see if the passive property is accessed\n    let supported = false;\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get() {\n                supported = true;\n                return null;\n            },\n        });\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n        // Do nothing\n    }\n\n    return supported;\n})();\n\n// Toggle event listener\nexport function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\n    // Bail if no element, event, or callback\n    if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\n        return;\n    }\n\n    // Allow multiple events\n    const events = event.split(' ');\n\n    // Build options\n    // Default to just the capture boolean for browsers with no passive listener support\n    let options = capture;\n\n    // If passive events listeners are supported\n    if (supportsPassiveListeners) {\n        options = {\n            // Whether the listener can be passive (i.e. default never prevented)\n            passive,\n            // Whether the listener is a capturing listener or not\n            capture,\n        };\n    }\n\n    // If a single node is passed, bind the event listener\n    events.forEach(type => {\n        if (this && this.eventListeners && toggle) {\n            // Cache event listener\n            this.eventListeners.push({ element, type, callback, options });\n        }\n\n        element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n    });\n}\n\n// Bind event handler\nexport function on(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, true, passive, capture);\n}\n\n// Unbind event handler\nexport function off(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, false, passive, capture);\n}\n\n// Bind once-only event handler\nexport function once(element, events = '', callback, passive = true, capture = false) {\n    function onceCallback(...args) {\n        off(element, events, onceCallback, passive, capture);\n        callback.apply(this, args);\n    }\n\n    toggleListener.call(this, element, events, onceCallback, true, passive, capture);\n}\n\n// Trigger event\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n    // Bail if no element\n    if (!is.element(element) || is.empty(type)) {\n        return;\n    }\n\n    // Create and dispatch the event\n    const event = new CustomEvent(type, {\n        bubbles,\n        detail: Object.assign({}, detail, {\n            plyr: this,\n        }),\n    });\n\n    // Dispatch the event\n    element.dispatchEvent(event);\n}\n\n// Unbind all cached event listeners\nexport function unbindListeners() {\n    if (this && this.eventListeners) {\n        this.eventListeners.forEach(item => {\n            const { element, type, callback, options } = item;\n            element.removeEventListener(type, callback, options);\n        });\n\n        this.eventListeners = [];\n    }\n}\n\n// Run method when / if player is ready\nexport function ready() {\n    return new Promise(\n        resolve => (this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve)),\n    ).then(() => {});\n}\n","// ==========================================================================\n// Element utils\n// ==========================================================================\n\nimport { toggleListener } from './events';\nimport is from './is';\n\n// Wrap an element\nexport function wrap(elements, wrapper) {\n    // Convert `elements` to an array, if necessary.\n    const targets = elements.length ? elements : [elements];\n\n    // Loops backwards to prevent having to clone the wrapper on the\n    // first element (see `child` below).\n    Array.from(targets)\n        .reverse()\n        .forEach((element, index) => {\n            const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n\n            // Cache the current parent and sibling.\n            const parent = element.parentNode;\n            const sibling = element.nextSibling;\n\n            // Wrap the element (is automatically removed from its current\n            // parent).\n            child.appendChild(element);\n\n            // If the element had a sibling, insert the wrapper before\n            // the sibling to maintain the HTML structure; otherwise, just\n            // append it to the parent.\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            } else {\n                parent.appendChild(child);\n            }\n        });\n}\n\n// Set attributes\nexport function setAttributes(element, attributes) {\n    if (!is.element(element) || is.empty(attributes)) {\n        return;\n    }\n\n    // Assume null and undefined attributes should be left out,\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\n    Object.entries(attributes)\n        .filter(([, value]) => !is.nullOrUndefined(value))\n        .forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// Create a DocumentFragment\nexport function createElement(type, attributes, text) {\n    // Create a new <element>\n    const element = document.createElement(type);\n\n    // Set all passed attributes\n    if (is.object(attributes)) {\n        setAttributes(element, attributes);\n    }\n\n    // Add text node\n    if (is.string(text)) {\n        element.innerText = text;\n    }\n\n    // Return built element\n    return element;\n}\n\n// Inaert an element after another\nexport function insertAfter(element, target) {\n    if (!is.element(element) || !is.element(target)) {\n        return;\n    }\n\n    target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n// Insert a DocumentFragment\nexport function insertElement(type, parent, attributes, text) {\n    if (!is.element(parent)) {\n        return;\n    }\n\n    parent.appendChild(createElement(type, attributes, text));\n}\n\n// Remove element(s)\nexport function removeElement(element) {\n    if (is.nodeList(element) || is.array(element)) {\n        Array.from(element).forEach(removeElement);\n        return;\n    }\n\n    if (!is.element(element) || !is.element(element.parentNode)) {\n        return;\n    }\n\n    element.parentNode.removeChild(element);\n}\n\n// Remove all child elements\nexport function emptyElement(element) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let { length } = element.childNodes;\n\n    while (length > 0) {\n        element.removeChild(element.lastChild);\n        length -= 1;\n    }\n}\n\n// Replace element\nexport function replaceElement(newChild, oldChild) {\n    if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) {\n        return null;\n    }\n\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n\n    return newChild;\n}\n\n// Get an attribute object from a string selector\nexport function getAttributesFromSelector(sel, existingAttributes) {\n    // For example:\n    // '.test' to { class: 'test' }\n    // '#test' to { id: 'test' }\n    // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n    if (!is.string(sel) || is.empty(sel)) {\n        return {};\n    }\n\n    const attributes = {};\n    const existing = existingAttributes;\n\n    sel.split(',').forEach(s => {\n        // Remove whitespace\n        const selector = s.trim();\n        const className = selector.replace('.', '');\n        const stripped = selector.replace(/[[\\]]/g, '');\n\n        // Get the parts and value\n        const parts = stripped.split('=');\n        const key = parts[0];\n        const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n\n        // Get the first character\n        const start = selector.charAt(0);\n\n        switch (start) {\n            case '.':\n                // Add to existing classname\n                if (is.object(existing) && is.string(existing.class)) {\n                    existing.class += ` ${className}`;\n                }\n\n                attributes.class = className;\n                break;\n\n            case '#':\n                // ID selector\n                attributes.id = selector.replace('#', '');\n                break;\n\n            case '[':\n                // Attribute selector\n                attributes[key] = value;\n\n                break;\n\n            default:\n                break;\n        }\n    });\n\n    return attributes;\n}\n\n// Toggle hidden\nexport function toggleHidden(element, hidden) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let hide = hidden;\n\n    if (!is.boolean(hide)) {\n        hide = !element.hidden;\n    }\n\n    if (hide) {\n        element.setAttribute('hidden', '');\n    } else {\n        element.removeAttribute('hidden');\n    }\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nexport function toggleClass(element, className, force) {\n    if (is.nodeList(element)) {\n        return Array.from(element).map(e => toggleClass(e, className, force));\n    }\n\n    if (is.element(element)) {\n        let method = 'toggle';\n        if (typeof force !== 'undefined') {\n            method = force ? 'add' : 'remove';\n        }\n\n        element.classList[method](className);\n        return element.classList.contains(className);\n    }\n\n    return false;\n}\n\n// Has class name\nexport function hasClass(element, className) {\n    return is.element(element) && element.classList.contains(className);\n}\n\n// Element matches selector\nexport function matches(element, selector) {\n    const prototype = { Element };\n\n    function match() {\n        return Array.from(document.querySelectorAll(selector)).includes(this);\n    }\n\n    const matches =\n        prototype.matches ||\n        prototype.webkitMatchesSelector ||\n        prototype.mozMatchesSelector ||\n        prototype.msMatchesSelector ||\n        match;\n\n    return matches.call(element, selector);\n}\n\n// Find all elements\nexport function getElements(selector) {\n    return this.elements.container.querySelectorAll(selector);\n}\n\n// Find a single element\nexport function getElement(selector) {\n    return this.elements.container.querySelector(selector);\n}\n\n// Trap focus inside container\nexport function trapFocus(element = null, toggle = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    const focusable = getElements.call(this, 'button:not(:disabled), input:not(:disabled), [tabindex]');\n    const first = focusable[0];\n    const last = focusable[focusable.length - 1];\n\n    const trap = event => {\n        // Bail if not tab key or not fullscreen\n        if (event.key !== 'Tab' || event.keyCode !== 9) {\n            return;\n        }\n\n        // Get the current focused element\n        const focused = document.activeElement;\n\n        if (focused === last && !event.shiftKey) {\n            // Move focus to first element that can be tabbed if Shift isn't used\n            first.focus();\n            event.preventDefault();\n        } else if (focused === first && event.shiftKey) {\n            // Move focus to last element that can be tabbed if Shift is used\n            last.focus();\n            event.preventDefault();\n        }\n    };\n\n    toggleListener.call(this, this.elements.container, 'keydown', trap, toggle, false);\n}\n\n// Set focus and tab focus class\nexport function setFocus(element = null, tabFocus = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    // Set regular focus\n    element.focus({ preventScroll: true });\n\n    // If we want to mimic keyboard focus via tab\n    if (tabFocus) {\n        toggleClass(element, this.config.classNames.tabFocus);\n    }\n}\n","// ==========================================================================\n// Animation utils\n// ==========================================================================\n\nimport { toggleHidden } from './elements';\nimport is from './is';\n\nexport const transitionEndEvent = (() => {\n    const element = document.createElement('span');\n\n    const events = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend',\n    };\n\n    const type = Object.keys(events).find(event => element.style[event] !== undefined);\n\n    return is.string(type) ? events[type] : false;\n})();\n\n// Force repaint of element\nexport function repaint(element) {\n    setTimeout(() => {\n        try {\n            toggleHidden(element, true);\n            element.offsetHeight; // eslint-disable-line\n            toggleHidden(element, false);\n        } catch (e) {\n            // Do nothing\n        }\n    }, 0);\n}\n","// ==========================================================================\n// Browser sniffing\n// Unfortunately, due to mixed support, UA sniffing is required\n// ==========================================================================\n\nconst browser = {\n    isIE: /* @cc_on!@ */ false || !!document.documentMode,\n    isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n    isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n    isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\n};\n\nexport default browser;\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport { transitionEndEvent } from './utils/animation';\nimport browser from './utils/browser';\nimport { createElement } from './utils/elements';\nimport is from './utils/is';\n\n// Default codecs for checking mimetype support\nconst defaultCodecs = {\n    'audio/ogg': 'vorbis',\n    'audio/wav': '1',\n    'video/webm': 'vp8, vorbis',\n    'video/mp4': 'avc1.42E01E, mp4a.40.2',\n    'video/ogg': 'theora',\n};\n\n// Check for feature support\nconst support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider, playsinline) {\n        const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n        const api = support[type] || provider !== 'html5';\n        const ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\n\n        return {\n            api,\n            ui,\n        };\n    },\n\n    // Picture-in-picture support\n    // Safari & Chrome only currently\n    pip: (() => {\n        if (browser.isIPhone) {\n            return false;\n        }\n\n        // Safari\n        // https://developer.apple.com/documentation/webkitjs/adding_picture_in_picture_to_your_safari_media_controls\n        if (is.function(createElement('video').webkitSetPresentationMode)) {\n            return true;\n        }\n\n        // Chrome\n        // https://developers.google.com/web/updates/2018/10/watch-video-using-picture-in-picture\n        if (document.pictureInPictureEnabled && !createElement('video').disablePictureInPicture) {\n            return true;\n        }\n\n        return false;\n    })(),\n\n    // Airplay support\n    // Safari only currently\n    airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(inputType) {\n        const [mediaType] = inputType.split('/');\n        let type = inputType;\n\n        // Verify we're using HTML5 and there's no media type mismatch\n        if (!this.isHTML5 || mediaType !== this.type) {\n            return false;\n        }\n\n        // Add codec if required\n        if (Object.keys(defaultCodecs).includes(type)) {\n            type += `; codecs=\"${defaultCodecs[inputType]}\"`;\n        }\n\n        try {\n            return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n        } catch (e) {\n            return false;\n        }\n    },\n\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n        const range = document.createElement('input');\n        range.type = 'range';\n        return range.type === 'range';\n    })(),\n\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n\n    // Detect transitions support\n    transitions: transitionEndEvent !== false,\n\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport support from './support';\nimport { removeElement } from './utils/elements';\nimport { triggerEvent } from './utils/events';\n\nconst html5 = {\n    getSources() {\n        if (!this.isHTML5) {\n            return [];\n        }\n\n        const sources = Array.from(this.media.querySelectorAll('source'));\n\n        // Filter out unsupported sources\n        return sources.filter(source => support.mime.call(this, source.getAttribute('type')));\n    },\n\n    // Get quality levels\n    getQualityOptions() {\n        // Get sizes from <source> elements\n        return html5.getSources\n            .call(this)\n            .map(source => Number(source.getAttribute('size')))\n            .filter(Boolean);\n    },\n\n    extend() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const player = this;\n\n        // Quality\n        Object.defineProperty(player.media, 'quality', {\n            get() {\n                // Get sources\n                const sources = html5.getSources.call(player);\n                const source = sources.find(source => source.getAttribute('src') === player.source);\n\n                // Return size, if match is found\n                return source && Number(source.getAttribute('size'));\n            },\n            set(input) {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                // Get first match for requested size\n                const source = sources.find(source => Number(source.getAttribute('size')) === input);\n\n                // No matching source found\n                if (!source) {\n                    return;\n                }\n\n                // Get current state\n                const { currentTime, paused, preload, readyState } = player.media;\n\n                // Set new source\n                player.media.src = source.getAttribute('src');\n\n                // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n                if (preload !== 'none' || readyState) {\n                    // Restore time\n                    player.once('loadedmetadata', () => {\n                        player.currentTime = currentTime;\n\n                        // Resume playing\n                        if (!paused) {\n                            player.play();\n                        }\n                    });\n\n                    // Load new source\n                    player.media.load();\n                }\n\n                // Trigger change event\n                triggerEvent.call(player, player.media, 'qualitychange', false, {\n                    quality: input,\n                });\n            },\n        });\n    },\n\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        // Remove child sources\n        removeElement(html5.getSources.call(this));\n\n        // Set blank video src attribute\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n        this.media.setAttribute('src', this.config.blankVideo);\n\n        // Load the new empty source\n        // This will cancel existing requests\n        // See https://github.com/sampotts/plyr/issues/174\n        this.media.load();\n\n        // Debugging\n        this.debug.log('Cancelled network requests');\n    },\n};\n\nexport default html5;\n","// ==========================================================================\n// Array utils\n// ==========================================================================\n\nimport is from './is';\n\n// Add polyfill for array\nif (!Array.prototype.find) {\n    Array.prototype.find = function(args) {\n        return this.filter(args)[0]; \n    };\n}\n\n// Remove duplicates in an array\nexport function dedupe(array) {\n    if (!is.array(array)) {\n        return array;\n    }\n\n    return array.filter((item, index) => array.indexOf(item) === index);\n}\n\n// Get the closest value in an array\nexport function closest(array, value) {\n    if (!is.array(array) || !array.length) {\n        return null;\n    }\n\n    return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n}\n","// ==========================================================================\n// Object utils\n// ==========================================================================\n\nimport is from './is';\n\n// Clone nested objects\nexport function cloneDeep(object) {\n    return JSON.parse(JSON.stringify(object));\n}\n\n// Get a nested value in an object\nexport function getDeep(object, path) {\n    return path.split('.').reduce((obj, key) => obj && obj[key], object);\n}\n\n// Deep extend destination object with N more objects\nexport function extend(target = {}, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n\n    const source = sources.shift();\n\n    if (!is.object(source)) {\n        return target;\n    }\n\n    Object.keys(source).forEach(key => {\n        if (is.object(source[key])) {\n            if (!Object.keys(target).includes(key)) {\n                Object.assign(target, { [key]: {} });\n            }\n\n            extend(target[key], source[key]);\n        } else {\n            Object.assign(target, { [key]: source[key] });\n        }\n    });\n\n    return extend(target, ...sources);\n}\n","// ==========================================================================\n// String utils\n// ==========================================================================\n\nimport is from './is';\n\n// Generate a random ID\nexport function generateId(prefix) {\n    return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n}\n\n// Format string\nexport function format(input, ...args) {\n    if (is.empty(input)) {\n        return input;\n    }\n\n    return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\n}\n\n// Get percentage\nexport function getPercentage(current, max) {\n    if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n        return 0;\n    }\n\n    return ((current / max) * 100).toFixed(2);\n}\n\n// Replace all occurances of a string in a string\nexport function replaceAll(input = '', find = '', replace = '') {\n    return input.replace(\n        new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'),\n        replace.toString(),\n    );\n}\n\n// Convert to title case\nexport function toTitleCase(input = '') {\n    return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\n}\n\n// Convert string to pascalCase\nexport function toPascalCase(input = '') {\n    let string = input.toString();\n\n    // Convert kebab case\n    string = replaceAll(string, '-', ' ');\n\n    // Convert snake case\n    string = replaceAll(string, '_', ' ');\n\n    // Convert to title case\n    string = toTitleCase(string);\n\n    // Convert to pascal case\n    return replaceAll(string, ' ', '');\n}\n\n// Convert string to pascalCase\nexport function toCamelCase(input = '') {\n    let string = input.toString();\n\n    // Convert to pascal case\n    string = toPascalCase(string);\n\n    // Convert first character to lowercase\n    return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n// Remove HTML from a string\nexport function stripHTML(source) {\n    const fragment = document.createDocumentFragment();\n    const element = document.createElement('div');\n    fragment.appendChild(element);\n    element.innerHTML = source;\n    return fragment.firstChild.innerText;\n}\n\n// Like outerHTML, but also works for DocumentFragment\nexport function getHTML(element) {\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(element);\n    return wrapper.innerHTML;\n}\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport is from './is';\nimport { getDeep } from './objects';\nimport { replaceAll } from './strings';\n\n// Skip i18n for abbreviations and brand names\nconst resources = {\n    pip: 'PIP',\n    airplay: 'AirPlay',\n    html5: 'HTML5',\n    vimeo: 'Vimeo',\n    youtube: 'YouTube',\n};\n\nconst i18n = {\n    get(key = '', config = {}) {\n        if (is.empty(key) || is.empty(config)) {\n            return '';\n        }\n\n        let string = getDeep(config.i18n, key);\n\n        if (is.empty(string)) {\n            if (Object.keys(resources).includes(key)) {\n                return resources[key];\n            }\n\n            return '';\n        }\n\n        const replace = {\n            '{seektime}': config.seekTime,\n            '{title}': config.title,\n        };\n\n        Object.entries(replace).forEach(([key, value]) => {\n            string = replaceAll(string, key, value);\n        });\n\n        return string;\n    },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nclass Storage {\n    constructor(player) {\n        this.enabled = player.config.storage.enabled;\n        this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n        try {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            const test = '___test';\n\n            // Try to use it (it might be disabled, e.g. user is in private mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            window.localStorage.setItem(test, test);\n            window.localStorage.removeItem(test);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    get(key) {\n        if (!Storage.supported || !this.enabled) {\n            return null;\n        }\n\n        const store = window.localStorage.getItem(this.key);\n\n        if (is.empty(store)) {\n            return null;\n        }\n\n        const json = JSON.parse(store);\n\n        return is.string(key) && key.length ? json[key] : json;\n    }\n\n    set(object) {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n            return;\n        }\n\n        // Can only store objectst\n        if (!is.object(object)) {\n            return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (is.empty(storage)) {\n            storage = {};\n        }\n\n        // Update the working copy of the values\n        extend(storage, object);\n\n        // Update storage\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\n    }\n}\n\nexport default Storage;\n","// ==========================================================================\n// Fetch wrapper\n// Using XHR to avoid issues with older browsers\n// ==========================================================================\n\nexport default function fetch(url, responseType = 'text') {\n    return new Promise((resolve, reject) => {\n        try {\n            const request = new XMLHttpRequest();\n\n            // Check for CORS support\n            if (!('withCredentials' in request)) {\n                return;\n            }\n\n            request.addEventListener('load', () => {\n                if (responseType === 'text') {\n                    try {\n                        resolve(JSON.parse(request.responseText));\n                    } catch (e) {\n                        resolve(request.responseText);\n                    }\n                } else {\n                    resolve(request.response);\n                }\n            });\n\n            request.addEventListener('error', () => {\n                throw new Error(request.status);\n            });\n\n            request.open('GET', url, true);\n\n            // Set the required response type\n            request.responseType = responseType;\n\n            request.send();\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n","// ==========================================================================\n// Sprite loader\n// ==========================================================================\n\nimport Storage from '../storage';\nimport fetch from './fetch';\nimport is from './is';\n\n// Load an external SVG sprite\nexport default function loadSprite(url, id, option = {}) {\n    if (!is.string(url)) {\n        return;\n    }\n\n    const prefix = 'cache';\n    const hasId = is.string(id);\n    let isCached = false;\n\n    const exists = () => document.getElementById(id) !== null;\n\n    const update = (container, data) => {\n        container.innerHTML = data;\n\n        // Check again incase of race condition\n        if (hasId && exists()) {\n            return;\n        }\n\n        // Inject the SVG to the body\n        document.body.insertAdjacentElement('afterbegin', container);\n    };\n\n    // Only load once if ID set\n    if (!hasId || !exists()) {\n        const useStorage = Storage.supported;\n\n        // Create container\n        const container = document.createElement('div');\n        container.setAttribute('hidden', '');\n\n        if (hasId) {\n            container.setAttribute('id', id);\n        }\n\n        if (option.inlineSvg) {\n            const toSvg = str => {\n                const prefix = 'data:image/svg+xml,';\n                if(str.indexOf(prefix) === -1) {\n                    return str;\n                }\n                const svg = decodeURIComponent(str).split(prefix)[1];\n                return svg.substring(0, svg.length -1);\n            };\n            update(container, toSvg(option.inlineSvg));\n            return;\n        }\n\n        // Check in cache\n        if (useStorage) {\n            const cached = window.localStorage.getItem(`${prefix}-${id}`);\n            isCached = cached !== null;\n\n            if (isCached) {\n                const data = JSON.parse(cached);\n                update(container, data.content);\n            }\n        }\n\n        // Get the sprite\n        fetch(url)\n            .then(result => {\n                if (is.empty(result)) {\n                    return;\n                }\n\n                if (useStorage) {\n                    window.localStorage.setItem(\n                        `${prefix}-${id}`,\n                        JSON.stringify({\n                            content: result,\n                        }),\n                    );\n                }\n\n                update(container, result);\n            })\n            .catch(() => {\n            });\n    }\n}\n","// ==========================================================================\n// Time utils\n// ==========================================================================\n\nimport is from './is';\n\n// Time helpers\nexport const getHours = value => parseInt((value / 60 / 60) % 60, 10);\nexport const getMinutes = value => parseInt((value / 60) % 60, 10);\nexport const getSeconds = value => parseInt(value % 60, 10);\n\n// Format time to UI friendly string\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n        return formatTime(null, displayHours, inverted);\n    }\n\n    // Format time component to add leading zero\n    const format = value => `0${value}`.slice(-2);\n\n    // Breakdown to hours, mins, secs\n    let hours = getHours(time);\n    const mins = getMinutes(time);\n    const secs = getSeconds(time);\n\n    // Do we need to display hours?\n    if (displayHours || hours > 0) {\n        hours = `${hours}:`;\n    } else {\n        hours = '';\n    }\n\n    // Render\n    return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n}\n","// ==========================================================================\n// Plyr controls\n// TODO: This needs to be split into smaller files and cleaned up\n// ==========================================================================\n\nimport captions from './captions';\nimport html5 from './html5';\nimport support from './support';\nimport { repaint, transitionEndEvent } from './utils/animation';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport { createElement, emptyElement, getAttributesFromSelector, getElement, getElements, hasClass, matches, removeElement, setAttributes, setFocus, toggleClass, toggleHidden } from './utils/elements';\nimport { off, on } from './utils/events';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { extend } from './utils/objects';\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\nimport { formatTime, getHours } from './utils/time';\n\n// TODO: Don't export a massive object - break down and create class\nconst controls = {\n    // Get icon URL\n    getIconUrl() {\n        const url = new URL(this.config.iconUrl, window.location);\n        const cors = url.host !== window.location.host || (browser.isIE && !window.svg4everybody);\n\n        return {\n            url: this.config.iconUrl,\n            cors,\n        };\n    },\n\n    // Find the UI controls\n    findElements() {\n        try {\n            this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n            // Buttons\n            this.elements.buttons = {\n                play: getElements.call(this, this.config.selectors.buttons.play),\n                pause: getElement.call(this, this.config.selectors.buttons.pause),\n                restart: getElement.call(this, this.config.selectors.buttons.restart),\n                rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n                fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n                mute: getElement.call(this, this.config.selectors.buttons.mute),\n                pip: getElement.call(this, this.config.selectors.buttons.pip),\n                airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n                settings: getElement.call(this, this.config.selectors.buttons.settings),\n                captions: getElement.call(this, this.config.selectors.buttons.captions),\n                fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\n            };\n\n            // Progress\n            this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n            // Inputs\n            this.elements.inputs = {\n                seek: getElement.call(this, this.config.selectors.inputs.seek),\n                volume: getElement.call(this, this.config.selectors.inputs.volume),\n            };\n\n            // Display\n            this.elements.display = {\n                buffer: getElement.call(this, this.config.selectors.display.buffer),\n                currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n                duration: getElement.call(this, this.config.selectors.display.duration),\n            };\n\n            // Seek tooltip\n            if (is.element(this.elements.progress)) {\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(\n                    `.${this.config.classNames.tooltip}`,\n                );\n            }\n\n            return true;\n        } catch (error) {\n            // Log it\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n            // Restore native video controls\n            this.toggleNativeControls(true);\n\n            return false;\n        }\n    },\n\n    // Create <svg> icon\n    createIcon(type, attributes) {\n        const namespace = 'http://www.w3.org/2000/svg';\n        const iconUrl = controls.getIconUrl.call(this);\n        const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n\n        // Create <svg>\n        const icon = document.createElementNS(namespace, 'svg');\n        setAttributes(\n            icon,\n            extend(attributes, {\n                role: 'presentation',\n                focusable: 'false',\n            }),\n        );\n\n        // Create the <use> to reference sprite\n        const use = document.createElementNS(namespace, 'use');\n        const path = `${iconPath}-${type}`;\n\n        // Set `href` attributes\n        // https://github.com/sampotts/plyr/issues/460\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n        if ('href' in use) {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n        }\n\n        // Always set the older attribute even though it's \"deprecated\" (it'll be around for ages)\n        use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n\n        // Add <use> to <svg>\n        icon.appendChild(use);\n\n        return icon;\n    },\n\n    // Create hidden text label\n    createLabel(key, attr = {}) {\n        const text = i18n.get(key, this.config);\n\n        const attributes = Object.assign({}, attr, {\n            class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' '),\n        });\n\n        return createElement('span', attributes, text);\n    },\n\n    // Create a badge\n    createBadge(text) {\n        if (is.empty(text)) {\n            return null;\n        }\n\n        const badge = createElement('span', {\n            class: this.config.classNames.menu.value,\n        });\n\n        badge.appendChild(\n            createElement(\n                'span',\n                {\n                    class: this.config.classNames.menu.badge,\n                },\n                text,\n            ),\n        );\n\n        return badge;\n    },\n\n    // Create a <button>\n    createButton(buttonType, attr) {\n        const attributes = Object.assign({}, attr);\n        let type = toCamelCase(buttonType);\n\n        const props = {\n            element: 'button',\n            toggle: false,\n            label: null,\n            icon: null,\n            labelPressed: null,\n            iconPressed: null,\n        };\n\n        ['element', 'icon', 'label'].forEach(key => {\n            if (Object.keys(attributes).includes(key)) {\n                props[key] = attributes[key];\n                delete attributes[key];\n            }\n        });\n\n        // Default to 'button' type to prevent form submission\n        if (props.element === 'button' && !Object.keys(attributes).includes('type')) {\n            attributes.type = 'button';\n        }\n\n        // Set class name\n        if (Object.keys(attributes).includes('class')) {\n            if (!attributes.class.includes(this.config.classNames.control)) {\n                attributes.class += ` ${this.config.classNames.control}`;\n            }\n        } else {\n            attributes.class = this.config.classNames.control;\n        }\n\n        // Large play button\n        switch (buttonType) {\n            case 'play':\n                props.toggle = true;\n                props.label = 'play';\n                props.labelPressed = 'pause';\n                props.icon = 'play';\n                props.iconPressed = 'pause';\n                break;\n\n            case 'mute':\n                props.toggle = true;\n                props.label = 'mute';\n                props.labelPressed = 'unmute';\n                props.icon = 'volume';\n                props.iconPressed = 'muted';\n                break;\n\n            case 'captions':\n                props.toggle = true;\n                props.label = 'enableCaptions';\n                props.labelPressed = 'disableCaptions';\n                props.icon = 'captions-off';\n                props.iconPressed = 'captions-on';\n                break;\n\n            case 'fullscreen':\n                // props.toggle = true;\n                props.label = 'enterFullscreen';\n                props.icon = 'enter-fullscreen';\n                // props.labelPressed = 'exitFullscreen';\n                // props.iconPressed = 'exit-fullscreen';\n                break;\n\n            case 'play-large':\n                props.toggle = true;\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\n                type = 'play';\n                props.label = 'play';\n                props.icon = 'play';\n                props.labelPressed = 'pause';\n                props.iconPressed = 'pause';\n                break;\n\n            default:\n                if (is.empty(props.label)) {\n                    props.label = type;\n                }\n                if (is.empty(props.icon)) {\n                    props.icon = buttonType;\n                }\n        }\n\n        const button = createElement(props.element);\n\n        // Setup toggle icon and labels\n        if (props.toggle) {\n            // Icon\n            button.appendChild(\n                controls.createIcon.call(this, props.iconPressed, {\n                    class: 'icon--pressed',\n                }),\n            );\n            button.appendChild(\n                controls.createIcon.call(this, props.icon, {\n                    class: 'icon--not-pressed',\n                }),\n            );\n\n            // Label/Tooltip\n            button.appendChild(\n                controls.createLabel.call(this, props.labelPressed, {\n                    class: 'label--pressed',\n                }),\n            );\n            button.appendChild(\n                controls.createLabel.call(this, props.label, {\n                    class: 'label--not-pressed',\n                }),\n            );\n        } else {\n            button.appendChild(controls.createIcon.call(this, props.icon));\n            button.appendChild(controls.createLabel.call(this, props.label));\n        }\n\n        // Merge and set attributes\n        extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n        setAttributes(button, attributes);\n\n        // We have multiple play buttons\n        if (type === 'play') {\n            if (!is.array(this.elements.buttons[type])) {\n                this.elements.buttons[type] = [];\n            }\n\n            this.elements.buttons[type].push(button);\n        } else {\n            this.elements.buttons[type] = button;\n        }\n\n        return button;\n    },\n\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n        // Seek input\n        const input = createElement(\n            'input',\n            extend(\n                getAttributesFromSelector(this.config.selectors.inputs[type]),\n                {\n                    type: 'range',\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    value: 0,\n                    autocomplete: 'off',\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\n                    role: 'slider',\n                    'aria-label': i18n.get(type, this.config),\n                    'aria-valuemin': 0,\n                    'aria-valuemax': 100,\n                    'aria-valuenow': 0,\n                },\n                attributes,\n            ),\n        );\n\n        this.elements.inputs[type] = input;\n\n        // Set the fill for webkit now\n        controls.updateRangeFill.call(this, input);\n\n        return input;\n    },\n\n    // Create a <progress>\n    createProgress(type, attributes) {\n        const progress = createElement(\n            'progress',\n            extend(\n                getAttributesFromSelector(this.config.selectors.display[type]),\n                {\n                    min: 0,\n                    max: 100,\n                    value: 0,\n                    role: 'presentation',\n                    'aria-hidden': true,\n                },\n                attributes,\n            ),\n        );\n\n        // Create the label inside\n        if (type !== 'volume') {\n            progress.appendChild(createElement('span', null, '0'));\n\n            const suffixKey = {\n                played: 'played',\n                buffer: 'buffered',\n            }[type];\n            const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n\n            progress.innerText = `% ${suffix.toLowerCase()}`;\n        }\n\n        this.elements.display[type] = progress;\n\n        return progress;\n    },\n\n    // Create time display\n    createTime(type) {\n        const attributes = getAttributesFromSelector(this.config.selectors.display[type]);\n\n        const container = createElement(\n            'div',\n            extend(attributes, {\n                class: `${this.config.classNames.display.time} ${attributes.class ? attributes.class : ''}`.trim(),\n                'aria-label': i18n.get(type, this.config),\n            }),\n            '00:00',\n        );\n\n        // Reference for updates\n        this.elements.display[type] = container;\n\n        return container;\n    },\n\n    // Bind keyboard shortcuts for a menu item\n    // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    bindMenuItemShortcuts(menuItem, type) {\n        // Navigate through menus via arrow keys and space\n        on(\n            menuItem,\n            'keydown keyup',\n            event => {\n                // We only care about space and ⬆️ ⬇️️ ➡️\n                if (![32, 38, 39, 40].includes(event.which)) {\n                    return;\n                }\n\n                // Prevent play / seek\n                event.preventDefault();\n                event.stopPropagation();\n\n                // We're just here to prevent the keydown bubbling\n                if (event.type === 'keydown') {\n                    return;\n                }\n\n                const isRadioButton = matches(menuItem, '[role=\"menuitemradio\"]');\n\n                // Show the respective menu\n                if (!isRadioButton && [32, 39].includes(event.which)) {\n                    controls.showMenuPanel.call(this, type, true);\n                } else {\n                    let target;\n\n                    if (event.which !== 32) {\n                        if (event.which === 40 || (isRadioButton && event.which === 39)) {\n                            target = menuItem.nextElementSibling;\n\n                            if (!is.element(target)) {\n                                target = menuItem.parentNode.firstElementChild;\n                            }\n                        } else {\n                            target = menuItem.previousElementSibling;\n\n                            if (!is.element(target)) {\n                                target = menuItem.parentNode.lastElementChild;\n                            }\n                        }\n\n                        setFocus.call(this, target, true);\n                    }\n                }\n            },\n            false,\n        );\n\n        // Enter will fire a `click` event but we still need to manage focus\n        // So we bind to keyup which fires after and set focus here\n        on(menuItem, 'keyup', event => {\n            if (event.which !== 13) {\n                return;\n            }\n\n            controls.focusFirstMenuItem.call(this, null, true);\n        });\n    },\n\n    // Create a settings menu item\n    createMenuItem({ value, list, type, title, badge = null, checked = false }) {\n        const attributes = getAttributesFromSelector(this.config.selectors.inputs[type]);\n\n        const menuItem = createElement(\n            'button',\n            extend(attributes, {\n                type: 'button',\n                role: 'menuitemradio',\n                class: `${this.config.classNames.control} ${attributes.class ? attributes.class : ''}`.trim(),\n                'aria-checked': checked,\n                value,\n            }),\n        );\n\n        const flex = createElement('span');\n\n        // We have to set as HTML incase of special characters\n        flex.innerHTML = title;\n\n        if (is.element(badge)) {\n            flex.appendChild(badge);\n        }\n\n        menuItem.appendChild(flex);\n\n        // Replicate radio button behaviour\n        Object.defineProperty(menuItem, 'checked', {\n            enumerable: true,\n            get() {\n                return menuItem.getAttribute('aria-checked') === 'true';\n            },\n            set(checked) {\n                // Ensure exclusivity\n                if (checked) {\n                    Array.from(menuItem.parentNode.children)\n                        .filter(node => matches(node, '[role=\"menuitemradio\"]'))\n                        .forEach(node => node.setAttribute('aria-checked', 'false'));\n                }\n\n                menuItem.setAttribute('aria-checked', checked ? 'true' : 'false');\n            },\n        });\n\n        this.listeners.bind(\n            menuItem,\n            'click keyup',\n            event => {\n                if (is.keyboardEvent(event) && event.which !== 32) {\n                    return;\n                }\n\n                event.preventDefault();\n                event.stopPropagation();\n\n                menuItem.checked = true;\n\n                switch (type) {\n                    case 'language':\n                        this.currentTrack = Number(value);\n                        break;\n\n                    case 'quality':\n                        this.quality = value;\n                        break;\n\n                    case 'speed':\n                        this.speed = parseFloat(value);\n                        break;\n\n                    default:\n                        break;\n                }\n\n                controls.showMenuPanel.call(this, 'home', is.keyboardEvent(event));\n            },\n            type,\n            false,\n        );\n\n        controls.bindMenuItemShortcuts.call(this, menuItem, type);\n\n        list.appendChild(menuItem);\n    },\n\n    // Format a time for display\n    formatTime(time = 0, inverted = false) {\n        // Bail if the value isn't a number\n        if (!is.number(time)) {\n            return time;\n        }\n\n        // Always display hours if duration is over an hour\n        const forceHours = getHours(this.duration) > 0;\n\n        return formatTime(time, forceHours, inverted);\n    },\n\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n        // Bail if there's no element to display or the value isn't a number\n        if (!is.element(target) || !is.number(time)) {\n            return;\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        target.innerText = controls.formatTime(time, inverted);\n    },\n\n    // Update volume UI and storage\n    updateVolume() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Update range\n        if (is.element(this.elements.inputs.volume)) {\n            controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n        }\n\n        // Update mute state\n        if (is.element(this.elements.buttons.mute)) {\n            this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n        }\n    },\n\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n        if (!is.element(target)) {\n            return;\n        }\n\n        // eslint-disable-next-line\n        target.value = value;\n\n        // Webkit range fill\n        controls.updateRangeFill.call(this, target);\n    },\n\n    // Update <progress> elements\n    updateProgress(event) {\n        if (!this.supported.ui || !is.event(event)) {\n            return;\n        }\n\n        let value = 0;\n\n        const setProgress = (target, input) => {\n            const value = is.number(input) ? input : 0;\n            const progress = is.element(target) ? target : this.elements.display.buffer;\n\n            // Update value and label\n            if (is.element(progress)) {\n                progress.value = value;\n\n                // Update text label inside\n                const label = progress.getElementsByTagName('span')[0];\n                if (is.element(label)) {\n                    label.childNodes[0].nodeValue = value;\n                }\n            }\n        };\n\n        if (event) {\n            switch (event.type) {\n                // Video playing\n                case 'timeupdate':\n                case 'seeking':\n                case 'seeked':\n                    value = getPercentage(this.currentTime, this.duration);\n\n                    // Set seek range value only if it's a 'natural' time event\n                    if (event.type === 'timeupdate') {\n                        controls.setRange.call(this, this.elements.inputs.seek, value);\n                    }\n\n                    break;\n\n                // Check buffer status\n                case 'playing':\n                case 'progress':\n                    setProgress(this.elements.display.buffer, this.buffered * 100);\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    },\n\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n        // Get range from event if event passed\n        const range = is.event(target) ? target.target : target;\n\n        // Needs to be a valid <input type='range'>\n        if (!is.element(range) || range.getAttribute('type') !== 'range') {\n            return;\n        }\n\n        // Set aria values for https://github.com/sampotts/plyr/issues/905\n        if (matches(range, this.config.selectors.inputs.seek)) {\n            range.setAttribute('aria-valuenow', this.currentTime);\n            const currentTime = controls.formatTime(this.currentTime);\n            const duration = controls.formatTime(this.duration);\n            const format = i18n.get('seekLabel', this.config);\n            range.setAttribute(\n                'aria-valuetext',\n                format.replace('{currentTime}', currentTime).replace('{duration}', duration),\n            );\n        } else if (matches(range, this.config.selectors.inputs.volume)) {\n            const percent = range.value * 100;\n            range.setAttribute('aria-valuenow', percent);\n            range.setAttribute('aria-valuetext', `${percent.toFixed(1)}%`);\n        } else {\n            range.setAttribute('aria-valuenow', range.value);\n        }\n\n        // WebKit only\n        if (!browser.isWebkit) {\n            return;\n        }\n\n        // Set CSS custom property\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n        // Bail if setting not true\n        if (\n            !this.config.tooltips.seek ||\n            !is.element(this.elements.inputs.seek) ||\n            !is.element(this.elements.display.seekTooltip) ||\n            this.duration === 0\n        ) {\n            return;\n        }\n\n        // Calculate percentage\n        let percent = 0;\n        const clientRect = this.elements.progress.getBoundingClientRect();\n        const visible = `${this.config.classNames.tooltip}--visible`;\n\n        const toggle = toggle => {\n            toggleClass(this.elements.display.seekTooltip, visible, toggle);\n        };\n\n        // Hide on touch\n        if (this.touch) {\n            toggle(false);\n            return;\n        }\n\n        // Determine percentage, if already visible\n        if (is.event(event)) {\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n        } else if (hasClass(this.elements.display.seekTooltip, visible)) {\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n        } else {\n            return;\n        }\n\n        // Set bounds\n        if (percent < 0) {\n            percent = 0;\n        } else if (percent > 100) {\n            percent = 100;\n        }\n\n        // Display the time a click would seek to\n        controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\n\n        // Set position\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\n\n        // Show/hide the tooltip\n        // If the event is a moues in/out and percentage is inside bounds\n        if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n            toggle(event.type === 'mouseenter');\n        }\n    },\n\n    // Handle time change event\n    timeUpdate(event) {\n        // Only invert if only one time element is displayed and used for both duration and currentTime\n        const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n        // Duration\n        controls.updateTimeDisplay.call(\n            this,\n            this.elements.display.currentTime,\n            invert ? this.duration - this.currentTime : this.currentTime,\n            invert,\n        );\n\n        // Ignore updates while seeking\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\n            return;\n        }\n\n        // Playing progress\n        controls.updateProgress.call(this, event);\n    },\n\n    // Show the duration on metadataloaded or durationchange events\n    durationUpdate() {\n        // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n        if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\n            return;\n        }\n\n        // If duration is the 2**32 (shaka), Infinity (HLS), DASH-IF (Number.MAX_SAFE_INTEGER || Number.MAX_VALUE) indicating live we hide the currentTime and progressbar.\n        // https://github.com/video-dev/hls.js/blob/5820d29d3c4c8a46e8b75f1e3afa3e68c1a9a2db/src/controller/buffer-controller.js#L415\n        // https://github.com/google/shaka-player/blob/4d889054631f4e1cf0fbd80ddd2b71887c02e232/lib/media/streaming_engine.js#L1062\n        // https://github.com/Dash-Industry-Forum/dash.js/blob/69859f51b969645b234666800d4cb596d89c602d/src/dash/models/DashManifestModel.js#L338\n        if (this.duration >= 2 ** 32) {\n            toggleHidden(this.elements.display.currentTime, true);\n            toggleHidden(this.elements.progress, true);\n            return;\n        }\n\n        // Update ARIA values\n        if (is.element(this.elements.inputs.seek)) {\n            this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n        }\n\n        // If there's a spot to display duration\n        const hasDuration = is.element(this.elements.display.duration);\n\n        // If there's only one time display, display duration there\n        if (!hasDuration && this.config.displayDuration && this.paused) {\n            controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n        }\n\n        // If there's a duration element, update content\n        if (hasDuration) {\n            controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n        }\n\n        // Update the tooltip (if visible)\n        controls.updateSeekTooltip.call(this);\n    },\n\n    // Hide/show a tab\n    toggleMenuButton(setting, toggle) {\n        toggleHidden(this.elements.settings.buttons[setting], !toggle);\n    },\n\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n        const pane = this.elements.settings.panels[setting];\n        let value = null;\n        let list = container;\n\n        if (setting === 'captions') {\n            value = this.currentTrack;\n        } else {\n            value = !is.empty(input) ? input : this[setting];\n\n            // Get default\n            if (is.empty(value)) {\n                value = this.config[setting].default;\n            }\n\n            // Unsupported value\n            if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n                this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n                return;\n            }\n\n            // Disabled value\n            if (!this.config[setting].options.includes(value)) {\n                this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n                return;\n            }\n        }\n\n        // Get the list if we need to\n        if (!is.element(list)) {\n            list = pane && pane.querySelector('[role=\"menu\"]');\n        }\n\n        // If there's no list it means it's not been rendered...\n        if (!is.element(list)) {\n            return;\n        }\n\n        // Update the label\n        const label = this.elements.settings.buttons[setting].querySelector(`.${this.config.classNames.menu.value}`);\n        label.innerHTML = controls.getLabel.call(this, setting, value);\n\n        // Find the radio option and check it\n        const target = list && list.querySelector(`[value=\"${value}\"]`);\n\n        if (is.element(target)) {\n            target.checked = true;\n        }\n    },\n\n    // Translate a value into a nice label\n    getLabel(setting, value) {\n        switch (setting) {\n            case 'speed':\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n            case 'quality':\n                if (is.number(value)) {\n                    const label = i18n.get(`qualityLabel.${value}`, this.config);\n\n                    if (!label.length) {\n                        return `${value}p`;\n                    }\n\n                    return label;\n                }\n\n                return toTitleCase(value);\n\n            case 'captions':\n                return captions.getLabel.call(this);\n\n            default:\n                return null;\n        }\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.quality)) {\n            return;\n        }\n\n        const type = 'quality';\n        const list = this.elements.settings.panels.quality.querySelector('[role=\"menu\"]');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\n        }\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the badge HTML for HD, 4K etc\n        const getBadge = quality => {\n            const label = i18n.get(`qualityBadge.${quality}`, this.config);\n\n            if (!label.length) {\n                return null;\n            }\n\n            return controls.createBadge.call(this, label);\n        };\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => {\n                const sorting = this.config.quality.options;\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n            })\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                    badge: getBadge(quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set the looping options\n    /* setLoopMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panels.loop.querySelector('[role=\"menu\"]');\n\n        // Show the pane and tab\n        toggleHidden(this.elements.settings.buttons.loop, false);\n        toggleHidden(this.elements.settings.panels.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.loop.options);\n        controls.toggleMenuButton.call(this, 'loop', toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        options.forEach(option => {\n            const item = createElement('li');\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.captions)) {\n            return;\n        }\n\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panels.captions.querySelector('[role=\"menu\"]');\n        const tracks = captions.getTracks.call(this);\n        const toggle = Boolean(tracks.length);\n\n        // Toggle the pane and tab\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!toggle) {\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n        const list = this.elements.settings.panels.speed.querySelector('[role=\"menu\"]');\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n        const { buttons } = this.elements.settings;\n        const visible = !is.empty(buttons) && Object.values(buttons).some(button => !button.hidden);\n\n        toggleHidden(this.elements.settings.menu, !visible);\n    },\n\n    // Focus the first menu item in a given (or visible) menu\n    focusFirstMenuItem(pane, tabFocus = false) {\n        if (this.elements.settings.popup.hidden) {\n            return;\n        }\n\n        let target = pane;\n\n        if (!is.element(target)) {\n            target = Object.values(this.elements.settings.panels).find(pane => !pane.hidden);\n        }\n\n        const firstItem = target.querySelector('[role^=\"menuitem\"]');\n\n        setFocus.call(this, firstItem, tabFocus);\n    },\n\n    // Show/hide menu\n    toggleMenu(input) {\n        const { popup } = this.elements.settings;\n        const button = this.elements.buttons.settings;\n\n        // Menu and button are required\n        if (!is.element(popup) || !is.element(button)) {\n            return;\n        }\n\n        // True toggle by default\n        const { hidden } = popup;\n        let show = hidden;\n\n        if (is.boolean(input)) {\n            show = input;\n        } else if (is.keyboardEvent(input) && input.which === 27) {\n            show = false;\n        } else if (is.event(input)) {\n            const isMenuItem = popup.contains(input.target);\n\n            // If the click was inside the menu or if the click\n            // wasn't the button or menu item and we're trying to\n            // show the menu (a doc click shouldn't show the menu)\n            if (isMenuItem || (!isMenuItem && input.target !== button && show)) {\n                return;\n            }\n        }\n\n        // Set button attributes\n        button.setAttribute('aria-expanded', show);\n\n        // Show the actual popup\n        toggleHidden(popup, !show);\n\n        // Add class hook\n        toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n        // Focus the first item if key interaction\n        if (show && is.keyboardEvent(input)) {\n            controls.focusFirstMenuItem.call(this, null, true);\n        } else if (!show && !hidden) {\n            // If closing, re-focus the button\n            setFocus.call(this, button, is.keyboardEvent(input));\n        }\n    },\n\n    // Get the natural size of a menu panel\n    getMenuSize(tab) {\n        const clone = tab.cloneNode(true);\n        clone.style.position = 'absolute';\n        clone.style.opacity = 0;\n        clone.removeAttribute('hidden');\n\n        // Append to parent so we get the \"real\" size\n        tab.parentNode.appendChild(clone);\n\n        // Get the sizes before we remove\n        const width = clone.scrollWidth;\n        const height = clone.scrollHeight;\n\n        // Remove from the DOM\n        removeElement(clone);\n\n        return {\n            width,\n            height,\n        };\n    },\n\n    // Show a panel in the menu\n    showMenuPanel(type = '', tabFocus = false) {\n        const target = document.getElementById(`plyr-settings-${this.id}-${type}`);\n\n        // Nothing to show, bail\n        if (!is.element(target)) {\n            return;\n        }\n\n        // Hide all other panels\n        const container = target.parentNode;\n        const current = Array.from(container.children).find(node => !node.hidden);\n\n        // If we can do fancy animations, we'll animate the height/width\n        if (support.transitions && !support.reducedMotion) {\n            // Set the current width as a base\n            container.style.width = `${current.scrollWidth}px`;\n            container.style.height = `${current.scrollHeight}px`;\n\n            // Get potential sizes\n            const size = controls.getMenuSize.call(this, target);\n\n            // Restore auto height/width\n            const restore = event => {\n                // We're only bothered about height and width on the container\n                if (event.target !== container || !['width', 'height'].includes(event.propertyName)) {\n                    return;\n                }\n\n                // Revert back to auto\n                container.style.width = '';\n                container.style.height = '';\n\n                // Only listen once\n                off.call(this, container, transitionEndEvent, restore);\n            };\n\n            // Listen for the transition finishing and restore auto height/width\n            on.call(this, container, transitionEndEvent, restore);\n\n            // Set dimensions to target\n            container.style.width = `${size.width}px`;\n            container.style.height = `${size.height}px`;\n        }\n\n        // Set attributes on current tab\n        toggleHidden(current, true);\n\n        // Set attributes on target\n        toggleHidden(target, false);\n\n        // Focus the first item\n        controls.focusFirstMenuItem.call(this, target, tabFocus);\n    },\n\n    // Set the download link\n    setDownloadLink() {\n        const button = this.elements.buttons.download;\n\n        // Bail if no button\n        if (!is.element(button)) {\n            return;\n        }\n\n        // Set download link\n        button.setAttribute('href', this.download);\n    },\n\n    // Build the default HTML\n    // TODO: Set order based on order in the config.controls array?\n    create(data) {\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        // Restart button\n        if (this.config.controls.includes('restart')) {\n            container.appendChild(controls.createButton.call(this, 'restart'));\n        }\n\n        // Rewind button\n        if (this.config.controls.includes('rewind')) {\n            container.appendChild(controls.createButton.call(this, 'rewind'));\n        }\n\n        // Play/Pause button\n        if (this.config.controls.includes('play')) {\n            container.appendChild(controls.createButton.call(this, 'play'));\n        }\n\n        // Volume controls\n        if (this.config.controls.includes('mute')) {\n            container.appendChild(controls.createButton.call(this, 'mute'));\n        }\n\n        // Media current time display\n        if (this.config.controls.includes('current-time')) {\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\n        }\n\n        // Fast forward button\n        if (this.config.controls.includes('fast-forward')) {\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\n        }\n\n        // Progress\n        if (this.config.controls.includes('progress')) {\n            const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n            // Seek range slider\n            progress.appendChild(\n                controls.createRange.call(this, 'seek', {\n                    id: `plyr-seek-${data.id}`,\n                }),\n            );\n\n            // Buffer progress\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n            // TODO: Add loop display indicator\n\n            // Seek tooltip\n            if (this.config.tooltips.seek) {\n                const tooltip = createElement(\n                    'span',\n                    {\n                        class: this.config.classNames.tooltip,\n                    },\n                    '00:00',\n                );\n\n                progress.appendChild(tooltip);\n                this.elements.display.seekTooltip = tooltip;\n            }\n\n            this.elements.progress = progress;\n            container.appendChild(this.elements.progress);\n        }\n\n        // Media duration display\n        if (this.config.controls.includes('duration')) {\n            container.appendChild(controls.createTime.call(this, 'duration'));\n        }\n\n        // Volume controls\n        // if (this.config.controls.includes('mute') || this.config.controls.includes('volume')) {\n        //     const volume = createElement('div', {\n        //         class: 'plyr__volume',\n        //     });\n        //\n        //     // Toggle mute button\n        //     if (this.config.controls.includes('mute')) {\n        //         volume.appendChild(controls.createButton.call(this, 'mute'));\n        //     }\n        //\n        //     // Volume range control\n        //     if (this.config.controls.includes('volume')) {\n        //         // Set the attributes\n        //         const attributes = {\n        //             max: 1,\n        //             step: 0.05,\n        //             value: this.config.volume,\n        //         };\n        //\n        //         // Create the volume range slider\n        //         volume.appendChild(\n        //             controls.createRange.call(\n        //                 this,\n        //                 'volume',\n        //                 extend(attributes, {\n        //                     id: `plyr-volume-${data.id}`,\n        //                 }),\n        //             ),\n        //         );\n        //\n        //         this.elements.volume = volume;\n        //     }\n        //\n        //     container.appendChild(volume);\n        // }\n\n        // Toggle captions button\n        if (this.config.controls.includes('captions')) {\n            container.appendChild(controls.createButton.call(this, 'captions'));\n        }\n\n        // Settings button / menu\n        if (this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n            const control = createElement('div', {\n                class: 'plyr__menu',\n                hidden: '',\n            });\n\n            control.appendChild(\n                controls.createButton.call(this, 'settings', {\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}`,\n                    'aria-expanded': false,\n                }),\n            );\n\n            const popup = createElement('div', {\n                class: 'plyr__menu__container',\n                id: `plyr-settings-${data.id}`,\n                hidden: '',\n            });\n\n            const inner = createElement('div');\n\n            const home = createElement('div', {\n                id: `plyr-settings-${data.id}-home`,\n            });\n\n            // Create the menu\n            const menu = createElement('div', {\n                role: 'menu',\n            });\n\n            home.appendChild(menu);\n            inner.appendChild(home);\n            this.elements.settings.panels.home = home;\n\n            // Build the menu items\n            this.config.settings.forEach(type => {\n                // TODO: bundle this with the createMenuItem helper and bindings\n                const menuItem = createElement(\n                    'button',\n                    extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                        role: 'menuitem',\n                        'aria-haspopup': true,\n                        hidden: '',\n                    }),\n                );\n\n                // Bind menu shortcuts for keyboard users\n                controls.bindMenuItemShortcuts.call(this, menuItem, type);\n\n                // Show menu on click\n                on(menuItem, 'click', () => {\n                    controls.showMenuPanel.call(this, type, false);\n                });\n\n                const flex = createElement('span', null, i18n.get(type, this.config));\n\n                const value = createElement('span', {\n                    class: this.config.classNames.menu.value,\n                });\n\n                // Speed contains HTML entities\n                value.innerHTML = data[type];\n\n                flex.appendChild(value);\n                menuItem.appendChild(flex);\n                menu.appendChild(menuItem);\n\n                // Build the panes\n                const pane = createElement('div', {\n                    id: `plyr-settings-${data.id}-${type}`,\n                    hidden: '',\n                });\n\n                // Back button\n                const backButton = createElement('button', {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                });\n\n                // Visible label\n                backButton.appendChild(\n                    createElement(\n                        'span',\n                        {\n                            'aria-hidden': true,\n                        },\n                        i18n.get(type, this.config),\n                    ),\n                );\n\n                // Screen reader label\n                backButton.appendChild(\n                    createElement(\n                        'span',\n                        {\n                            class: this.config.classNames.hidden,\n                        },\n                        i18n.get('menuBack', this.config),\n                    ),\n                );\n\n                // Go back via keyboard\n                on(\n                    pane,\n                    'keydown',\n                    event => {\n                        // We only care about <-\n                        if (event.which !== 37) {\n                            return;\n                        }\n\n                        // Prevent seek\n                        event.preventDefault();\n                        event.stopPropagation();\n\n                        // Show the respective menu\n                        controls.showMenuPanel.call(this, 'home', true);\n                    },\n                    false,\n                );\n\n                // Go back via button click\n                on(backButton, 'click', () => {\n                    controls.showMenuPanel.call(this, 'home', false);\n                });\n\n                // Add to pane\n                pane.appendChild(backButton);\n\n                // Menu\n                pane.appendChild(\n                    createElement('div', {\n                        role: 'menu',\n                    }),\n                );\n\n                inner.appendChild(pane);\n\n                this.elements.settings.buttons[type] = menuItem;\n                this.elements.settings.panels[type] = pane;\n            });\n\n            popup.appendChild(inner);\n            control.appendChild(popup);\n            container.appendChild(control);\n\n            this.elements.settings.popup = popup;\n            this.elements.settings.menu = control;\n        }\n\n        // Picture in picture button\n        if (this.config.controls.includes('pip') && support.pip) {\n            container.appendChild(controls.createButton.call(this, 'pip'));\n        }\n\n        // Airplay button\n        if (this.config.controls.includes('airplay') && support.airplay) {\n            container.appendChild(controls.createButton.call(this, 'airplay'));\n        }\n\n        // Download button\n        if (this.config.controls.includes('download')) {\n            const attributes = {\n                element: 'a',\n                href: this.download,\n                target: '_blank',\n            };\n\n            const { download } = this.config.urls;\n\n            if (!is.url(download) && this.isEmbed) {\n                extend(attributes, {\n                    icon: `logo-${this.provider}`,\n                    label: this.provider,\n                });\n            }\n\n            container.appendChild(controls.createButton.call(this, 'download', attributes));\n        }\n\n        // Toggle fullscreen button\n        if (this.config.controls.includes('fullscreen')) {\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\n        }\n\n        // Larger overlaid play button\n        if (this.config.controls.includes('play-large')) {\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\n        }\n\n        this.elements.controls = container;\n\n        // Set available quality levels\n        if (this.isHTML5) {\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        controls.setSpeedMenu.call(this);\n\n        return container;\n    },\n\n    // Insert controls\n    inject() {\n        // Sprite\n        if (this.config.loadSprite || this.config.inlineSvg) {\n            const icon = controls.getIconUrl.call(this);\n\n            // Only load external sprite using AJAX\n            if (icon.cors) {\n                loadSprite(icon.url, 'sprite-plyr', {inlineSvg: this.config.inlineSvg});\n            }\n        }\n\n        // Create a unique ID\n        this.id = Math.floor(Math.random() * 10000);\n\n        // Null by default\n        let container = null;\n        this.elements.controls = null;\n\n        // Set template properties\n        const props = {\n            id: this.id,\n            seektime: this.config.seekTime,\n            title: this.config.title,\n        };\n        let update = true;\n\n        // If function, run it and use output\n        if (is.function(this.config.controls)) {\n            this.config.controls = this.config.controls.call(this, props);\n        }\n\n        // Convert falsy controls to empty array (primarily for empty strings)\n        if (!this.config.controls) {\n            this.config.controls = [];\n        }\n\n        if (is.element(this.config.controls) || is.string(this.config.controls)) {\n            // HTMLElement or Non-empty string passed as the option\n            container = this.config.controls;\n        } else {\n            // Create controls\n            container = controls.create.call(this, {\n                id: this.id,\n                seektime: this.config.seekTime,\n                speed: this.speed,\n                quality: this.quality,\n                captions: captions.getLabel.call(this),\n                // TODO: Looping\n                // loop: 'None',\n            });\n            update = false;\n        }\n\n        // Replace props with their value\n        const replace = input => {\n            let result = input;\n\n            Object.entries(props).forEach(([key, value]) => {\n                result = replaceAll(result, `{${key}}`, value);\n            });\n\n            return result;\n        };\n\n        // Update markup\n        if (update) {\n            if (is.string(this.config.controls)) {\n                container = replace(container);\n            } else if (is.element(container)) {\n                container.innerHTML = replace(container.innerHTML);\n            }\n        }\n\n        // Controls container\n        let target;\n\n        // Inject to custom location\n        if (is.string(this.config.selectors.controls.container)) {\n            target = document.querySelector(this.config.selectors.controls.container);\n        }\n\n        // Inject into the container by default\n        if (!is.element(target)) {\n            target = this.elements.container;\n        }\n\n        // Inject controls HTML (needs to be before captions, hence \"afterbegin\")\n        const insertMethod = is.element(container) ? 'insertAdjacentElement' : 'insertAdjacentHTML';\n        target[insertMethod]('afterbegin', container);\n\n        // Find the elements if need be\n        if (!is.element(this.elements.controls)) {\n            controls.findElements.call(this);\n        }\n\n        // Add pressed property to buttons\n        if (!is.empty(this.elements.buttons)) {\n            const addProperty = button => {\n                const className = this.config.classNames.controlPressed;\n                Object.defineProperty(button, 'pressed', {\n                    enumerable: true,\n                    get() {\n                        return hasClass(button, className);\n                    },\n                    set(pressed = false) {\n                        toggleClass(button, className, pressed);\n                    },\n                });\n            };\n\n            // Toggle classname when pressed property is set\n            Object.values(this.elements.buttons)\n                .filter(Boolean)\n                .forEach(button => {\n                    if (is.array(button) || is.nodeList(button)) {\n                        Array.from(button).filter(Boolean).forEach(addProperty);\n                    } else {\n                        addProperty(button);\n                    }\n                });\n        }\n\n        // Edge sometimes doesn't finish the paint so force a redraw\n        if (window.navigator.userAgent.includes('Edge')) {\n            repaint(target);\n        }\n\n        // Setup tooltips\n        // if (this.config.tooltips.controls) {\n        //     const { classNames, selectors } = this.config;\n        //     const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n        //     const labels = getElements.call(this, selector);\n        //\n        //     Array.from(labels).forEach(label => {\n        //         toggleClass(label, this.config.classNames.hidden, false);\n        //         toggleClass(label, this.config.classNames.tooltip, true);\n        //     });\n        // }\n    },\n};\n\nexport default controls;\n","// ==========================================================================\n// URL utils\n// ==========================================================================\n\nimport is from './is';\n\n/**\n * Parse a string to a URL object\n * @param {string} input - the URL to be parsed\n * @param {boolean} safe - failsafe parsing\n */\nexport function parseUrl(input, safe = true) {\n    let url = input;\n\n    if (safe) {\n        const parser = document.createElement('a');\n        parser.href = url;\n        url = parser.href;\n    }\n\n    try {\n        return new URL(url);\n    } catch (e) {\n        return null;\n    }\n}\n\n// Convert object to URLSearchParams\nexport function buildUrlParams(input) {\n    const params = new URLSearchParams();\n\n    if (is.object(input)) {\n        Object.entries(input).forEach(([key, value]) => {\n            params.set(key, value);\n        });\n    }\n\n    return params;\n}\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport controls from './controls';\nimport support from './support';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n    createElement,\n    emptyElement,\n    getAttributesFromSelector,\n    insertAfter,\n    removeElement,\n    toggleClass,\n} from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport fetch from './utils/fetch';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport { getHTML } from './utils/strings';\nimport { parseUrl } from './utils/urls';\n\nconst captions = {\n    // Setup captions\n    setup() {\n        // Requires UI support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Only Vimeo and HTML5 video supported at this point\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n            // Clear menu and hide\n            if (\n                is.array(this.config.controls) &&\n                this.config.controls.includes('settings') &&\n                this.config.settings.includes('captions')\n            ) {\n                controls.setCaptionsMenu.call(this);\n            }\n\n            return;\n        }\n\n        // Inject the container\n        if (!is.element(this.elements.captions)) {\n            this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n\n            insertAfter(this.elements.captions, this.elements.wrapper);\n        }\n\n        // Fix IE captions if CORS is used\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\n        if (browser.isIE && window.URL) {\n            const elements = this.media.querySelectorAll('track');\n\n            Array.from(elements).forEach(track => {\n                const src = track.getAttribute('src');\n                const url = parseUrl(src);\n\n                if (\n                    url !== null &&\n                    url.hostname !== window.location.href.hostname &&\n                    ['http:', 'https:'].includes(url.protocol)\n                ) {\n                    fetch(src, 'blob')\n                        .then(blob => {\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\n                        })\n                        .catch(() => {\n                            removeElement(track);\n                        });\n                }\n            });\n        }\n\n        // Get and set initial data\n        // The \"preferred\" options are not realized unless / until the wanted language has a match\n        // * languages: Array of user's browser languages.\n        // * language:  The language preferred by user settings or config\n        // * active:    The state preferred by user settings or config\n        // * toggled:   The real captions state\n\n        const browserLanguages = navigator.languages || [navigator.language || navigator.userLanguage || 'en'];\n        const languages = dedupe(browserLanguages.map(language => language.split('-')[0]));\n\n        let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n        // Use first browser language when language is 'auto'\n        if (language === 'auto') {\n            [language] = languages;\n        }\n\n        let active = this.storage.get('captions');\n        if (!is.boolean(active)) {\n            ({ active } = this.config.captions);\n        }\n\n        Object.assign(this.captions, {\n            toggled: false,\n            active,\n            language,\n            languages,\n        });\n\n        // Watch changes to textTracks and update captions menu\n        if (this.isHTML5) {\n            const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n            on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n        }\n\n        // Update available languages in list next tick (the event must not be triggered before the listeners)\n        setTimeout(captions.update.bind(this), 0);\n    },\n\n    // Update available language options in settings based on tracks\n    update() {\n        const tracks = captions.getTracks.call(this, true);\n        // Get the wanted language\n        const { active, language, meta, currentTrackNode } = this.captions;\n        const languageExists = Boolean(tracks.find(track => track.language === language));\n\n        // Handle tracks (add event listener and \"pseudo\"-default)\n        if (this.isHTML5 && this.isVideo) {\n            tracks.filter(track => !meta.get(track)).forEach(track => {\n                this.debug.log('Track added', track);\n                // Attempt to store if the original dom element was \"default\"\n                meta.set(track, {\n                    default: track.mode === 'showing',\n                });\n\n                // Turn off native caption rendering to avoid double captions\n                track.mode = 'hidden';\n\n                // Add event listener for cue changes\n                on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n            });\n        }\n\n        // Update language first time it matches, or if the previous matching track was removed\n        if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\n            captions.setLanguage.call(this, language);\n            captions.toggle.call(this, active && languageExists);\n        }\n\n        // Enable or disable captions based on track length\n        toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n\n        // Update available languages in list\n        if ((this.config.controls || []).includes('settings') && this.config.settings.includes('captions')) {\n            controls.setCaptionsMenu.call(this);\n        }\n    },\n\n    // Toggle captions display\n    // Used internally for the toggleCaptions method, with the passive option forced to false\n    toggle(input, passive = true) {\n        // If there's no full support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        const { toggled } = this.captions; // Current state\n        const activeClass = this.config.classNames.captions.active;\n\n        // Get the next state\n        // If the method is called without parameter, toggle based on current value\n        const active = is.nullOrUndefined(input) ? !toggled : input;\n\n        // Update state and trigger event\n        if (active !== toggled) {\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.active = active;\n                this.storage.set({ captions: active });\n            }\n\n            // Force language if the call isn't passive and there is no matching language to toggle to\n            if (!this.language && active && !passive) {\n                const tracks = captions.getTracks.call(this);\n                const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n                // Override user preferences to avoid switching languages if a matching track is added\n                this.captions.language = track.language;\n\n                // Set caption, but don't store in localStorage as user preference\n                captions.set.call(this, tracks.indexOf(track));\n                return;\n            }\n\n            // Toggle button if it's enabled\n            if (this.elements.buttons.captions) {\n                this.elements.buttons.captions.pressed = active;\n            }\n\n            // Add class hook\n            toggleClass(this.elements.container, activeClass, active);\n\n            this.captions.toggled = active;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // Trigger event (not used internally)\n            triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n        }\n    },\n\n    // Set captions by track index\n    // Used internally for the currentTrack setter with the passive option forced to false\n    set(index, passive = true) {\n        const tracks = captions.getTracks.call(this);\n\n        // Disable captions if setting to -1\n        if (index === -1) {\n            captions.toggle.call(this, false, passive);\n            return;\n        }\n\n        if (!is.number(index)) {\n            this.debug.warn('Invalid caption argument', index);\n            return;\n        }\n\n        if (!(index in tracks)) {\n            this.debug.warn('Track not found', index);\n            return;\n        }\n\n        if (this.captions.currentTrack !== index) {\n            this.captions.currentTrack = index;\n            const track = tracks[index];\n            const { language } = track || {};\n\n            // Store reference to node for invalidation on remove\n            this.captions.currentTrackNode = track;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.language = language;\n                this.storage.set({ language });\n            }\n\n            // Handle Vimeo captions\n            if (this.isVimeo) {\n                this.embed.enableTextTrack(language);\n            }\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'languagechange');\n        }\n\n        // Show captions\n        captions.toggle.call(this, true, passive);\n\n        if (this.isHTML5 && this.isVideo) {\n            // If we change the active track while a cue is already displayed we need to update it\n            captions.updateCues.call(this);\n        }\n    },\n\n    // Set captions by language\n    // Used internally for the language setter with the passive option forced to false\n    setLanguage(input, passive = true) {\n        if (!is.string(input)) {\n            this.debug.warn('Invalid language argument', input);\n            return;\n        }\n        // Normalize\n        const language = input.toLowerCase();\n        this.captions.language = language;\n\n        // Set currentTrack\n        const tracks = captions.getTracks.call(this);\n        const track = captions.findTrack.call(this, [language]);\n        captions.set.call(this, tracks.indexOf(track), passive);\n    },\n\n    // Get current valid caption tracks\n    // If update is false it will also ignore tracks without metadata\n    // This is used to \"freeze\" the language options when captions.update is false\n    getTracks(update = false) {\n        // Handle media or textTracks missing or null\n        const tracks = Array.from((this.media || {}).textTracks || []);\n        // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n        // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n        return tracks\n            .filter(track => !this.isHTML5 || update || this.captions.meta.has(track))\n            .filter(track => ['captions', 'subtitles'].includes(track.kind));\n    },\n\n    // Match tracks based on languages and get the first\n    findTrack(languages, force = false) {\n        const tracks = captions.getTracks.call(this);\n        const sortIsDefault = track => Number((this.captions.meta.get(track) || {}).default);\n        const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n        let track;\n        languages.every(language => {\n            track = sorted.find(track => track.language === language);\n            return !track; // Break iteration if there is a match\n        });\n        // If no match is found but is required, get first\n        return track || (force ? sorted[0] : undefined);\n    },\n\n    // Get the current track\n    getCurrentTrack() {\n        return captions.getTracks.call(this)[this.currentTrack];\n    },\n\n    // Get UI label for track\n    getLabel(track) {\n        let currentTrack = track;\n\n        if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n            currentTrack = captions.getCurrentTrack.call(this);\n        }\n\n        if (is.track(currentTrack)) {\n            if (!is.empty(currentTrack.label)) {\n                return currentTrack.label;\n            }\n\n            if (!is.empty(currentTrack.language)) {\n                return track.language.toUpperCase();\n            }\n\n            return i18n.get('enabled', this.config);\n        }\n\n        return i18n.get('disabled', this.config);\n    },\n\n    // Update captions using current track's active cues\n    // Also optional array argument in case there isn't any track (ex: vimeo)\n    updateCues(input) {\n        // Requires UI\n        if (!this.supported.ui) {\n            return;\n        }\n\n        if (!is.element(this.elements.captions)) {\n            this.debug.warn('No captions element to render to');\n            return;\n        }\n\n        // Only accept array or empty input\n        if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n            this.debug.warn('updateCues: Invalid input', input);\n            return;\n        }\n\n        let cues = input;\n\n        // Get cues from track\n        if (!cues) {\n            const track = captions.getCurrentTrack.call(this);\n            cues = Array.from((track || {}).activeCues || [])\n                .map(cue => cue.getCueAsHTML())\n                .map(getHTML);\n        }\n\n        // Set new caption text\n        const content = cues.map(cueText => cueText.trim()).join('\\n');\n        const changed = content !== this.elements.captions.innerHTML;\n\n        if (changed) {\n            // Empty the container and create a new child element\n            emptyElement(this.elements.captions);\n            const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n            caption.innerHTML = content;\n            this.elements.captions.appendChild(caption);\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'cuechange');\n        }\n    },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n    // Disable\n    enabled: true,\n\n    // Custom media title\n    title: '',\n\n    // Logging to console\n    debug: false,\n\n    // Auto play (if supported)\n    autoplay: false,\n\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n\n    // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\n    // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\n    playsinline: true,\n\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n\n    // Default volume\n    volume: 1,\n    muted: false,\n\n    // Pass a custom duration\n    duration: null,\n\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n\n    // Invert the current time to be a countdown\n    invertTime: true,\n\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n\n    // Aspect ratio (for embeds)\n    ratio: '16:9',\n\n    // Click video container to play/pause\n    clickToPlay: true,\n\n    // Auto hide the controls\n    hideControls: true,\n\n    // Reset to start when playback ended\n    resetOnEnd: false,\n\n    // Disable the standard context menu\n    disableContextMenu: true,\n\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.4.7/plyr.svg',\n\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n    // Quality default\n    quality: {\n        default: 576,\n        options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240],\n    },\n\n    // Set loops\n    loop: {\n        active: false,\n        // start: null,\n        // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n        selected: 1,\n        options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\n    },\n\n    // Keyboard shortcut settings\n    keyboard: {\n        focused: true,\n        global: false,\n    },\n\n    // Display tooltips\n    tooltips: {\n        controls: false,\n        seek: true,\n    },\n\n    // Captions settings\n    captions: {\n        active: false,\n        language: 'auto',\n        // Listen to new tracks added after Plyr is initialized.\n        // This is needed for streaming captions, but may result in unselectable options\n        update: false,\n    },\n\n    // Fullscreen settings\n    fullscreen: {\n        enabled: true, // Allow fullscreen?\n        fallback: true, // Fallback for vintage browsers\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    },\n\n    // Local storage\n    storage: {\n        enabled: true,\n        key: 'plyr',\n    },\n\n    // Default controls\n    controls: [\n        'play-large',\n        // 'restart',\n        // 'rewind',\n        'play',\n        // 'fast-forward',\n        'progress',\n        'current-time',\n        'mute',\n        'volume',\n        'captions',\n        'settings',\n        'pip',\n        'airplay',\n        // 'download',\n        'fullscreen',\n    ],\n    settings: ['captions', 'quality', 'speed'],\n\n    // Localisation\n    i18n: {\n        restart: 'Restart',\n        rewind: 'Rewind {seektime}s',\n        play: 'Play',\n        pause: 'Pause',\n        fastForward: 'Forward {seektime}s',\n        seek: 'Seek',\n        seekLabel: '{currentTime} of {duration}',\n        played: 'Played',\n        buffered: 'Buffered',\n        currentTime: 'Current time',\n        duration: 'Duration',\n        volume: 'Volume',\n        mute: 'Mute',\n        unmute: 'Unmute',\n        enableCaptions: 'Enable captions',\n        disableCaptions: 'Disable captions',\n        download: 'Download',\n        enterFullscreen: 'Enter fullscreen',\n        exitFullscreen: 'Exit fullscreen',\n        frameTitle: 'Player for {title}',\n        captions: 'Captions',\n        settings: 'Settings',\n        menuBack: 'Go back to previous menu',\n        speed: 'Speed',\n        normal: 'Normal',\n        quality: 'Quality',\n        loop: 'Loop',\n        start: 'Start',\n        end: 'End',\n        all: 'All',\n        reset: 'Reset',\n        disabled: 'Disabled',\n        enabled: 'Enabled',\n        advertisement: 'Ad',\n        qualityBadge: {\n            2160: '4K',\n            1440: 'HD',\n            1080: 'HD',\n            720: 'HD',\n            576: 'SD',\n            480: 'SD',\n        },\n    },\n\n    // URLs\n    urls: {\n        download: null,\n        vimeo: {\n            sdk: 'https://player.vimeo.com/api/player.js',\n            iframe: 'https://player.vimeo.com/video/{0}?{1}',\n            api: 'https://vimeo.com/api/v2/video/{0}.json',\n        },\n        youtube: {\n            sdk: 'https://www.youtube.com/iframe_api',\n            api:\n                'https://www.googleapis.com/youtube/v3/videos?id={0}&key={1}&fields=items(snippet(title))&part=snippet',\n        },\n        googleIMA: {\n            sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n        },\n    },\n\n    // Custom control listeners\n    listeners: {\n        seek: null,\n        play: null,\n        pause: null,\n        restart: null,\n        rewind: null,\n        fastForward: null,\n        mute: null,\n        volume: null,\n        captions: null,\n        download: null,\n        fullscreen: null,\n        pip: null,\n        airplay: null,\n        speed: null,\n        quality: null,\n        loop: null,\n        language: null,\n    },\n\n    // Events to watch and bubble\n    events: [\n        // Events to watch on HTML5 media elements and bubble\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n        'ended',\n        'progress',\n        'stalled',\n        'playing',\n        'waiting',\n        'canplay',\n        'canplaythrough',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'timeupdate',\n        'volumechange',\n        'play',\n        'pause',\n        'error',\n        'seeking',\n        'seeked',\n        'emptied',\n        'ratechange',\n        'cuechange',\n\n        // Custom events\n        'download',\n        'enterfullscreen',\n        'exitfullscreen',\n        'captionsenabled',\n        'captionsdisabled',\n        'languagechange',\n        'controlshidden',\n        'controlsshown',\n        'ready',\n\n        // YouTube\n        'statechange',\n\n        // Quality\n        'qualitychange',\n\n        // Ads\n        'adsloaded',\n        'adscontentpause',\n        'adscontentresume',\n        'adstarted',\n        'adsmidpoint',\n        'adscomplete',\n        'adsallcomplete',\n        'adsimpression',\n        'adsclick',\n    ],\n\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n        editable: 'input, textarea, select, [contenteditable]',\n        container: '.plyr',\n        controls: {\n            container: null,\n            wrapper: '.plyr__controls',\n        },\n        labels: '[data-plyr]',\n        buttons: {\n            play: '[data-plyr=\"play\"]',\n            pause: '[data-plyr=\"pause\"]',\n            restart: '[data-plyr=\"restart\"]',\n            rewind: '[data-plyr=\"rewind\"]',\n            fastForward: '[data-plyr=\"fast-forward\"]',\n            mute: '[data-plyr=\"mute\"]',\n            captions: '[data-plyr=\"captions\"]',\n            download: '[data-plyr=\"download\"]',\n            fullscreen: '[data-plyr=\"fullscreen\"]',\n            pip: '[data-plyr=\"pip\"]',\n            airplay: '[data-plyr=\"airplay\"]',\n            settings: '[data-plyr=\"settings\"]',\n            loop: '[data-plyr=\"loop\"]',\n        },\n        inputs: {\n            seek: '[data-plyr=\"seek\"]',\n            volume: '[data-plyr=\"volume\"]',\n            speed: '[data-plyr=\"speed\"]',\n            language: '[data-plyr=\"language\"]',\n            quality: '[data-plyr=\"quality\"]',\n        },\n        display: {\n            currentTime: '.plyr__time--current',\n            duration: '.plyr__time--duration',\n            buffer: '.plyr__progress__buffer',\n            loop: '.plyr__progress__loop', // Used later\n            volume: '.plyr__volume--display',\n        },\n        progress: '.plyr__progress',\n        captions: '.plyr__captions',\n        caption: '.plyr__caption',\n        menu: {\n            quality: '.js-plyr__menu__list--quality',\n        },\n    },\n\n    // Class hooks added to the player in different states\n    classNames: {\n        type: 'plyr--{0}',\n        provider: 'plyr--{0}',\n        video: 'plyr__video-wrapper',\n        videoInitFlag: 'plyr__is-video-init',\n        embed: 'plyr__video-embed',\n        embedContainer: 'plyr__video-embed__container',\n        poster: 'plyr__poster',\n        posterEnabled: 'plyr__poster-enabled',\n        ads: 'plyr__ads',\n        control: 'plyr__control',\n        controlPressed: 'plyr__control--pressed',\n        playing: 'plyr--playing',\n        paused: 'plyr--paused',\n        stopped: 'plyr--stopped',\n        loading: 'plyr--loading',\n        hover: 'plyr--hover',\n        tooltip: 'plyr__tooltip',\n        cues: 'plyr__cues',\n        hidden: 'plyr__sr-only',\n        hideControls: 'plyr--hide-controls',\n        isIos: 'plyr--is-ios',\n        isTouch: 'plyr--is-touch',\n        uiSupported: 'plyr--full-ui',\n        noTransition: 'plyr--no-transition',\n        display: {\n            time: 'plyr__time',\n        },\n        menu: {\n            value: 'plyr__menu__value',\n            badge: 'plyr__badge',\n            open: 'plyr--menu-open',\n        },\n        captions: {\n            enabled: 'plyr--captions-enabled',\n            active: 'plyr--captions-active',\n        },\n        fullscreen: {\n            enabled: 'plyr--fullscreen-enabled',\n            fallback: 'plyr--fullscreen-fallback',\n        },\n        pip: {\n            supported: 'plyr--pip-supported',\n            active: 'plyr--pip-active',\n        },\n        airplay: {\n            supported: 'plyr--airplay-supported',\n            active: 'plyr--airplay-active',\n        },\n        tabFocus: 'plyr__tab-focus',\n    },\n\n    // Embed attributes\n    attributes: {\n        embed: {\n            provider: 'data-plyr-provider',\n            id: 'data-plyr-embed-id',\n        },\n    },\n\n    // API keys\n    keys: {\n        google: null,\n    },\n\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n        enabled: false,\n        publisherId: '',\n    },\n};\n\nexport default defaults;\n","// ==========================================================================\n// Plyr states\n// ==========================================================================\n\nexport const pip = {\n    active: 'picture-in-picture',\n    inactive: 'inline',\n};\n\nexport default { pip };\n","// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo',\n};\n\nexport const types = {\n    audio: 'audio',\n    video: 'video',\n};\n\n/**\n * Get provider by URL\n * @param {String} url\n */\nexport function getProviderByUrl(url) {\n    // YouTube\n    if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n        return providers.youtube;\n    }\n\n    // Vimeo\n    if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n        return providers.vimeo;\n    }\n\n    return null;\n}\n\nexport default { providers, types };\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n    constructor(enabled = false) {\n        this.enabled = window.console && enabled;\n\n        if (this.enabled) {\n            this.log('Debugging enabled');\n        }\n    }\n\n    get log() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n\n    get warn() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n\n    get error() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// https://webkit.org/blog/7929/designing-websites-for-iphone-x/\n// ==========================================================================\n\nimport { repaint } from './utils/animation';\nimport browser from './utils/browser';\nimport { hasClass, toggleClass, trapFocus } from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nfunction onChange() {\n    if (!this.enabled) {\n        return;\n    }\n\n    // Update toggle button\n    const button = this.player.elements.buttons.fullscreen;\n    if (is.element(button)) {\n        button.pressed = this.active;\n    }\n\n    // Trigger an event\n    triggerEvent.call(this.player, this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n\n    // Trap focus in container\n    if (!browser.isIos) {\n        trapFocus.call(this.player, this.target, this.active);\n    }\n}\n\nfunction toggleFallback(toggle = false) {\n    // Store or restore scroll position\n    if (toggle) {\n        this.scrollPosition = {\n            x: window.scrollX || 0,\n            y: window.scrollY || 0,\n        };\n    } else {\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n\n    // Force full viewport on iPhone X+\n    if (browser.isIos) {\n        let viewport = document.head.querySelector('meta[name=\"viewport\"]');\n        const property = 'viewport-fit=cover';\n\n        // Inject the viewport meta if required\n        if (!viewport) {\n            viewport = document.createElement('meta');\n            viewport.setAttribute('name', 'viewport');\n        }\n\n        // Check if the property already exists\n        const hasProperty = is.string(viewport.content) && viewport.content.includes(property);\n\n        if (toggle) {\n            this.cleanupViewport = !hasProperty;\n\n            if (!hasProperty) {\n                viewport.content += `,${property}`;\n            }\n        } else if (this.cleanupViewport) {\n            viewport.content = viewport.content\n                .split(',')\n                .filter(part => part.trim() !== property)\n                .join(',');\n        }\n\n        // Force a repaint as sometimes Safari doesn't want to fill the screen\n        setTimeout(() => repaint(this.target), 100);\n    }\n\n    // Toggle button and fire events\n    onChange.call(this);\n}\n\nclass Fullscreen {\n    constructor(player) {\n        // Keep reference to parent\n        this.player = player;\n\n        // Get prefix\n        this.prefix = Fullscreen.prefix;\n        this.property = Fullscreen.property;\n\n        // Scroll position\n        this.scrollPosition = { x: 0, y: 0 };\n\n        // Register event listeners\n        // Handle event (incase user presses escape etc)\n        on.call(\n            this.player,\n            document,\n            this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\n            () => {\n                // TODO: Filter for target??\n                onChange.call(this);\n            },\n        );\n\n        // Fullscreen toggle on double click\n        on.call(this.player, this.player.elements.container, 'dblclick', event => {\n            // Ignore double click in controls\n            if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n                return;\n            }\n\n            this.toggle();\n        });\n\n        // Update the UI\n        this.update();\n    }\n\n    // Determine if native supported\n    static get native() {\n        return !!(\n            document.fullscreenEnabled ||\n            document.webkitFullscreenEnabled ||\n            document.mozFullScreenEnabled ||\n            document.msFullscreenEnabled\n        );\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n        // No prefix\n        if (is.function(document.exitFullscreen)) {\n            return '';\n        }\n\n        // Check for fullscreen support by vendor prefix\n        let value = '';\n        const prefixes = ['webkit', 'moz', 'ms'];\n\n        prefixes.some(pre => {\n            if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n                value = pre;\n                return true;\n            }\n\n            return false;\n        });\n\n        return value;\n    }\n\n    static get property() {\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is enabled\n    get enabled() {\n        return (\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n            this.player.config.fullscreen.enabled &&\n            this.player.supported.ui &&\n            this.player.isVideo\n        );\n    }\n\n    // Get active state\n    get active() {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Fallback using classname\n        if (!Fullscreen.native) {\n            return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n        }\n\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.property}Element`];\n\n        return element === this.target;\n    }\n\n    // Get target element\n    get target() {\n        return browser.isIos && this.player.config.fullscreen.iosNative\n            ? this.player.media\n            : this.player.elements.container;\n    }\n\n    // Update UI\n    update() {\n        if (this.enabled) {\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\n        } else {\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n    }\n\n    // Make an element fullscreen\n    enter() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitEnterFullscreen();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, true);\n        } else if (!this.prefix) {\n            this.target.requestFullscreen();\n        } else if (!is.empty(this.prefix)) {\n            this.target[`${this.prefix}Request${this.property}`]();\n        }\n    }\n\n    // Bail from fullscreen\n    exit() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitExitFullscreen();\n            this.player.play();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, false);\n        } else if (!this.prefix) {\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!is.empty(this.prefix)) {\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n            document[`${this.prefix}${action}${this.property}`]();\n        }\n    }\n\n    // Toggle state\n    toggle() {\n        if (!this.active) {\n            this.enter();\n        } else {\n            this.exit();\n        }\n    }\n}\n\nexport default Fullscreen;\n","// ==========================================================================\n// Load image avoiding xhr/fetch CORS issues\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n// By default it checks if it is at least 1px, but you can add a second argument to change this\n// ==========================================================================\n\nexport default function loadImage(src, minWidth = 1) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n\n        const handler = () => {\n            delete image.onload;\n            delete image.onerror;\n            (image.naturalWidth >= minWidth ? resolve : reject)(image);\n        };\n\n        Object.assign(image, { onload: handler, onerror: handler, src });\n    });\n}\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport captions from './captions';\nimport controls from './controls';\nimport support from './support';\nimport browser from './utils/browser';\nimport { getElement, toggleClass } from './utils/elements';\nimport { ready, triggerEvent } from './utils/events';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport loadImage from './utils/loadImage';\n\nconst ui = {\n    addStyleHook() {\n        toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n        toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n    },\n\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n        if (toggle && this.isHTML5) {\n            this.media.setAttribute('controls', '');\n        } else {\n            this.media.removeAttribute('controls');\n        }\n    },\n\n    // Setup the UI\n    build() {\n        // Re-attach media element listeners\n        // TODO: Use event bubbling?\n        this.listeners.media();\n\n        // Don't setup interface if no support\n        if (!this.supported.ui) {\n            this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n            // Restore native controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Bail\n            return;\n        }\n\n        // Inject custom controls if not present\n        if (!is.element(this.elements.controls)) {\n            // Inject custom controls\n            controls.inject.call(this);\n\n            // Re-attach control listeners\n            this.listeners.controls();\n        }\n\n        // Remove native controls\n        ui.toggleNativeControls.call(this);\n\n        // Setup captions for HTML5\n        if (this.isHTML5) {\n            captions.setup.call(this);\n        }\n\n        // Reset volume\n        this.volume = null;\n\n        // Reset mute state\n        this.muted = null;\n\n        // Reset speed\n        this.speed = null;\n\n        // Reset loop state\n        this.loop = null;\n\n        // Reset quality setting\n        this.quality = null;\n\n        // Reset volume display\n        controls.updateVolume.call(this);\n\n        // Reset time display\n        controls.timeUpdate.call(this);\n\n        // Update the UI\n        ui.checkPlaying.call(this);\n\n        // Check for picture-in-picture support\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.pip.supported,\n            support.pip && this.isHTML5 && this.isVideo,\n        );\n\n        // Check for airplay support\n        toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n        // Add iOS class\n        toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n        // Add touch class\n        toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n\n        // Ready for API calls\n        this.ready = true;\n\n        // Ready event at end of execution stack\n        setTimeout(() => {\n            triggerEvent.call(this, this.media, 'ready');\n        }, 0);\n\n        // Set the title\n        ui.setTitle.call(this);\n\n        // Assure the poster image is set, if the property was added before the element was created\n        if (this.poster) {\n            ui.setPoster.call(this, this.poster, false).catch(() => {});\n        }\n\n        // Manually set the duration if user has overridden it.\n        // The event listeners for it doesn't get called if preload is disabled (#701)\n        if (this.config.duration) {\n            controls.durationUpdate.call(this);\n        }\n    },\n\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n        // Find the current text\n        let label = i18n.get('play', this.config);\n\n        // If there's a media title set, use that for the label\n        if (is.string(this.config.title) && !is.empty(this.config.title)) {\n            label += `, ${this.config.title}`;\n        }\n\n        // If there's a play button, set label\n        Array.from(this.elements.buttons.play || []).forEach(button => {\n            button.setAttribute('aria-label', label);\n        });\n\n        // Set iframe title\n        // https://github.com/sampotts/plyr/issues/124\n        if (this.isEmbed) {\n            const iframe = getElement.call(this, 'iframe');\n\n            if (!is.element(iframe)) {\n                return;\n            }\n\n            // Default to media type\n            const title = !is.empty(this.config.title) ? this.config.title : 'video';\n            const format = i18n.get('frameTitle', this.config);\n\n            iframe.setAttribute('title', format.replace('{title}', title));\n        }\n    },\n\n    // Toggle poster\n    togglePoster(enable) {\n        toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n    },\n\n    // Set the poster image (async)\n    // Used internally for the poster setter, with the passive option forced to false\n    setPoster(poster, passive = true) {\n        // Don't override if call is passive\n        if (passive && this.poster) {\n            return Promise.reject(new Error('Poster already set'));\n        }\n\n        // Set property synchronously to respect the call order\n        this.media.setAttribute('poster', poster);\n\n        // Wait until ui is ready\n        return (\n            ready\n                .call(this)\n                // Load image\n                .then(() => loadImage(poster))\n                .catch(err => {\n                    // Hide poster on error unless it's been set by another call\n                    if (poster === this.poster) {\n                        ui.togglePoster.call(this, false);\n                    }\n                    // Rethrow\n                    throw err;\n                })\n                .then(() => {\n                    // Prevent race conditions\n                    if (poster !== this.poster) {\n                        throw new Error('setPoster cancelled by later call to setPoster');\n                    }\n                })\n                .then(() => {\n                    Object.assign(this.elements.poster.style, {\n                        backgroundImage: `url('${poster}')`,\n                        // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n                        backgroundSize: '',\n                    });\n                    ui.togglePoster.call(this, true);\n                    return poster;\n                })\n        );\n    },\n\n    // Check playing state\n    checkPlaying(event) {\n        // Class hooks\n        toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n        toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n        toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n        // Set state\n        Array.from(this.elements.buttons.play || []).forEach(target => {\n            target.pressed = this.playing;\n        });\n\n        // Only update controls on non timeupdate events\n        if (is.event(event) && event.type === 'timeupdate') {\n            return;\n        }\n\n        // Toggle controls\n        ui.toggleControls.call(this);\n    },\n\n    // Check if media is loading\n    checkLoading(event) {\n        this.loading = ['stalled', 'waiting'].includes(event.type);\n\n        // clear class\n        toggleClass(this.elements.container, this.config.classNames.videoInitFlag, false);\n\n        // Clear timer\n        clearTimeout(this.timers.loading);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Update progress bar loading class state\n            toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n            // Update controls visibility\n            ui.toggleControls.call(this);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Toggle controls based on state and `force` argument\n    toggleControls(force) {\n        const { controls } = this.elements;\n\n        if (controls && this.config.hideControls) {\n            // Don't hide controls if a touch-device user recently seeked. (Must be limited to touch devices, or it occasionally prevents desktop controls from hiding.)\n            const recentTouchSeek = (this.touch && this.lastSeekTime + 2000 > Date.now());\n\n            // Show controls if force, loading, paused, button interaction, or recent seek, otherwise hide\n            this.toggleControls(Boolean(force || this.loading || this.paused || controls.pressed || controls.hover || recentTouchSeek));\n        }\n    },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport controls from './controls';\nimport ui from './ui';\nimport { repaint } from './utils/animation';\nimport browser from './utils/browser';\nimport { getElement, getElements, matches, toggleClass, toggleHidden } from './utils/elements';\nimport { on, once, toggleListener, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nclass Listeners {\n    constructor(player) {\n        this.player = player;\n        this.lastKey = null;\n        this.focusTimer = null;\n        this.lastKeyDown = null;\n\n        this.handleKey = this.handleKey.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.setTabFocus = this.setTabFocus.bind(this);\n        this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n        const { player } = this;\n        const { elements } = player;\n        const code = event.keyCode ? event.keyCode : event.which;\n        const pressed = event.type === 'keydown';\n        const repeat = pressed && code === this.lastKey;\n\n        // Bail if a modifier key is set\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n            return;\n        }\n\n        // If the event is bubbled from the media element\n        // Firefox doesn't get the keycode for whatever reason\n        if (!is.number(code)) {\n            return;\n        }\n\n        // Seek by the number keys\n        const seekByKey = () => {\n            // Divide the max duration into 10th's and times by the number value\n            player.currentTime = (player.duration / 10) * (code - 48);\n        };\n\n        // Handle the key on keydown\n        // Reset on keyup\n        if (pressed) {\n            // Check focused element\n            // and if the focused element is not editable (e.g. text input)\n            // and any that accept key input http://webaim.org/techniques/keyboard/\n            const focused = document.activeElement;\n            if (is.element(focused)) {\n                const { editable } = player.config.selectors;\n                const { seek } = elements.inputs;\n\n                if (focused !== seek && matches(focused, editable)) {\n                    return;\n                }\n\n                if (event.which === 32 && matches(focused, 'button, [role^=\"menuitem\"]')) {\n                    return;\n                }\n            }\n\n            // Which keycodes should we prevent default\n            const preventDefault = [32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79];\n\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\n            if (preventDefault.includes(code)) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            switch (code) {\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    // 0-9\n                    if (!repeat) {\n                        seekByKey();\n                    }\n                    break;\n\n                case 32:\n                case 75:\n                    // Space and K key\n                    if (!repeat) {\n                        player.togglePlay();\n                    }\n                    break;\n\n                case 38:\n                    // Arrow up\n                    player.increaseVolume(0.1);\n                    break;\n\n                case 40:\n                    // Arrow down\n                    player.decreaseVolume(0.1);\n                    break;\n\n                case 77:\n                    // M key\n                    if (!repeat) {\n                        player.muted = !player.muted;\n                    }\n                    break;\n\n                case 39:\n                    // Arrow forward\n                    player.forward();\n                    break;\n\n                case 37:\n                    // Arrow back\n                    player.rewind();\n                    break;\n\n                case 70:\n                    // F key\n                    player.fullscreen.toggle();\n                    break;\n\n                case 67:\n                    // C key\n                    if (!repeat) {\n                        player.toggleCaptions();\n                    }\n                    break;\n\n                case 76:\n                    // L key\n                    player.loop = !player.loop;\n                    break;\n\n                    /* case 73:\n                    this.setLoop('start');\n                    break;\n\n                case 76:\n                    this.setLoop();\n                    break;\n\n                case 79:\n                    this.setLoop('end');\n                    break; */\n\n                default:\n                    break;\n            }\n\n            // Escape is handle natively when in full screen\n            // So we only need to worry about non native\n            if (!player.fullscreen.enabled && player.fullscreen.active && code === 27) {\n                player.fullscreen.toggle();\n            }\n\n            // Store last code for next cycle\n            this.lastKey = code;\n        } else {\n            this.lastKey = null;\n        }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n        controls.toggleMenu.call(this.player, event);\n    }\n\n    // Device is touch enabled\n    firstTouch() {\n        const { player } = this;\n        const { elements } = player;\n\n        player.touch = true;\n\n        // Add touch class\n        toggleClass(elements.container, player.config.classNames.isTouch, true);\n    }\n\n    setTabFocus(event) {\n        const { player } = this;\n        const { elements } = player;\n\n        clearTimeout(this.focusTimer);\n\n        // Ignore any key other than tab\n        if (event.type === 'keydown' && event.which !== 9) {\n            return;\n        }\n\n        // Store reference to event timeStamp\n        if (event.type === 'keydown') {\n            this.lastKeyDown = event.timeStamp;\n        }\n\n        // Remove current classes\n        const removeCurrent = () => {\n            const className = player.config.classNames.tabFocus;\n            const current = getElements.call(player, `.${className}`);\n            toggleClass(current, className, false);\n        };\n\n        // Determine if a key was pressed to trigger this event\n        const wasKeyDown = event.timeStamp - this.lastKeyDown <= 20;\n\n        // Ignore focus events if a key was pressed prior\n        if (event.type === 'focus' && !wasKeyDown) {\n            return;\n        }\n\n        // Remove all current\n        removeCurrent();\n\n        // Delay the adding of classname until the focus has changed\n        // This event fires before the focusin event\n        this.focusTimer = setTimeout(() => {\n            const focused = document.activeElement;\n\n            // Ignore if current focus element isn't inside the player\n            if (!elements.container.contains(focused)) {\n                return;\n            }\n\n            toggleClass(document.activeElement, player.config.classNames.tabFocus, true);\n        }, 10);\n    }\n\n    // Global window & document listeners\n    global(toggle = true) {\n        const { player } = this;\n\n        // Keyboard shortcuts\n        if (player.config.keyboard.global) {\n            toggleListener.call(player, window, 'keydown keyup', this.handleKey, toggle, false);\n        }\n\n        // Click anywhere closes menu\n        toggleListener.call(player, document.body, 'click', this.toggleMenu, toggle);\n\n        // Detect touch by events\n        once.call(player, document.body, 'touchstart', this.firstTouch);\n\n        // Tab focus detection\n        toggleListener.call(player, document.body, 'keydown focus blur', this.setTabFocus, toggle, false, true);\n    }\n\n    // Container listeners\n    container() {\n        const { player } = this;\n        const { elements } = player;\n\n        // Keyboard shortcuts\n        if (!player.config.keyboard.global && player.config.keyboard.focused) {\n            on.call(player, elements.container, 'keydown keyup', this.handleKey, false);\n        }\n\n        // Toggle controls on mouse events and entering fullscreen\n        on.call(\n            player,\n            elements.container,\n            'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\n            event => {\n                const { controls } = elements;\n\n                // Remove button states for fullscreen\n                if (controls && event.type === 'enterfullscreen') {\n                    controls.pressed = false;\n                    controls.hover = false;\n                }\n\n                // Show, then hide after a timeout unless another control event occurs\n                const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\n\n                let delay = 0;\n\n                if (show) {\n                    ui.toggleControls.call(player, true);\n                    // Use longer timeout for touch devices\n                    delay = player.touch ? 3000 : 2000;\n                }\n\n                // Clear timer\n                clearTimeout(player.timers.controls);\n\n                // Set new timer to prevent flicker when seeking\n                player.timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n            },\n        );\n    }\n\n    // Listen for media events\n    media() {\n        const { player } = this;\n        const { elements } = player;\n\n        // Time change on media\n        on.call(player, player.media, 'timeupdate seeking seeked', event => controls.timeUpdate.call(player, event));\n\n        // Display duration\n        on.call(player, player.media, 'durationchange loadeddata loadedmetadata', event =>\n            controls.durationUpdate.call(player, event),\n        );\n\n        // Check for audio tracks on load\n        // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\n\n        // on.call(player, player.media, 'canplay loadeddata', () => {\n        //     toggleHidden(elements.volume, !player.hasAudio);\n        //     toggleHidden(elements.buttons.mute, !player.hasAudio);\n        // });\n\n        // Handle the media finishing\n        on.call(player, player.media, 'ended', () => {\n            // Show poster on end\n            if (player.isHTML5 && player.isVideo && player.config.resetOnEnd) {\n                // Restart\n                player.restart();\n            }\n        });\n\n        // Check for buffer progress\n        on.call(player, player.media, 'progress playing seeking seeked', event =>\n            controls.updateProgress.call(player, event),\n        );\n\n        // Handle volume changes\n        on.call(player, player.media, 'volumechange', event => controls.updateVolume.call(player, event));\n\n        // Handle play/pause\n        on.call(player, player.media, 'playing play pause ended emptied timeupdate', event =>\n            ui.checkPlaying.call(player, event),\n        );\n\n        // Loading state\n        on.call(player, player.media, 'waiting canplay seeked playing', event => ui.checkLoading.call(player, event));\n\n        // If autoplay, then load advertisement if required\n        // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\n        on.call(player, player.media, 'playing', () => {\n            if (!player.ads) {\n                return;\n            }\n\n            // If ads are enabled, wait for them first\n            if (player.ads.enabled && !player.ads.initialized) {\n                // Wait for manager response\n                player.ads.managerPromise.then(() => player.ads.play()).catch(() => player.play());\n            }\n        });\n\n        // Click video\n        if (player.supported.ui && player.config.clickToPlay && !player.isAudio) {\n            // Re-fetch the wrapper\n            const wrapper = getElement.call(player, `.${player.config.classNames.video}`);\n\n            // Bail if there's no wrapper (this should never happen)\n            if (!is.element(wrapper)) {\n                return;\n            }\n\n            // On click play, pause or restart\n            on.call(player, elements.container, 'click', event => {\n                const targets = [elements.container, wrapper];\n\n                // Ignore if click if not container or in video wrapper\n                if (!targets.includes(event.target) && !wrapper.contains(event.target)) {\n                    return;\n                }\n\n                // Touch devices will just show controls (if hidden)\n                if (player.touch && player.config.hideControls) {\n                    return;\n                }\n\n                if (player.ended) {\n                    player.restart();\n                    player.play();\n                } else {\n                    player.togglePlay();\n                }\n            });\n        }\n\n        // Disable right click\n        if (player.supported.ui && player.config.disableContextMenu) {\n            on.call(\n                player,\n                elements.wrapper,\n                'contextmenu',\n                event => {\n                    event.preventDefault();\n                },\n                false,\n            );\n        }\n\n        // Volume change\n        on.call(player, player.media, 'volumechange', () => {\n            // Save to storage\n            player.storage.set({\n                volume: player.volume,\n                muted: player.muted,\n            });\n        });\n\n        // Speed change\n        on.call(player, player.media, 'ratechange', () => {\n            // Update UI\n            controls.updateSetting.call(player, 'speed');\n\n            // Save to storage\n            player.storage.set({ speed: player.speed });\n        });\n\n        // Quality change\n        on.call(player, player.media, 'qualitychange', event => {\n            // Update UI\n            controls.updateSetting.call(player, 'quality', null, event.detail.quality);\n        });\n\n        // Update download link when ready and if quality changes\n        on.call(player, player.media, 'ready qualitychange', () => {\n            controls.setDownloadLink.call(player);\n        });\n\n        // Proxy events to container\n        // Bubble up key events for Edge\n        const proxyEvents = player.config.events.concat(['keyup', 'keydown']).join(' ');\n\n        on.call(player, player.media, proxyEvents, event => {\n            let { detail = {} } = event;\n\n            // Get error details from media\n            if (event.type === 'error') {\n                detail = player.media.error;\n            }\n\n            triggerEvent.call(player, elements.container, event.type, true, detail);\n        });\n    }\n\n    // Run default and custom handlers\n    proxy(event, defaultHandler, customHandlerKey) {\n        const { player } = this;\n        const customHandler = player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n        let returned = true;\n\n        // Execute custom handler\n        if (hasCustomHandler) {\n            returned = customHandler.call(player, event);\n        }\n\n        // Only call default handler if not prevented in custom handler\n        if (returned && is.function(defaultHandler)) {\n            defaultHandler.call(player, event);\n        }\n    }\n\n    // Trigger custom and default handlers\n    bind(element, type, defaultHandler, customHandlerKey, passive = true) {\n        const { player } = this;\n        const customHandler = player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n\n        on.call(\n            player,\n            element,\n            type,\n            event => this.proxy(event, defaultHandler, customHandlerKey),\n            passive && !hasCustomHandler,\n        );\n    }\n\n    // Listen for control events\n    controls() {\n        const { player } = this;\n        const { elements } = player;\n\n        // IE doesn't support input event, so we fallback to change\n        const inputEvent = browser.isIE || browser.isIos ? 'change' : 'input';\n\n        // Play/pause toggle\n        if (elements.buttons.play) {\n            Array.from(elements.buttons.play).forEach(button => {\n                this.bind(button, 'click', player.togglePlay, 'play');\n            });\n        }\n\n        // Pause\n        this.bind(elements.buttons.restart, 'click', player.restart, 'restart');\n\n        // Rewind\n        this.bind(elements.buttons.rewind, 'click', player.rewind, 'rewind');\n\n        // Rewind\n        this.bind(elements.buttons.fastForward, 'click', player.forward, 'fastForward');\n\n        // Mute toggle\n        this.bind(\n            elements.buttons.mute,\n            'click',\n            () => {\n                player.muted = !player.muted;\n            },\n            'mute',\n        );\n\n        // Captions toggle\n        this.bind(elements.buttons.captions, 'click', () => player.toggleCaptions());\n\n        // Download\n        this.bind(\n            elements.buttons.download,\n            'click',\n            () => {\n                triggerEvent.call(player, player.media, 'download');\n            },\n            'download',\n        );\n\n        // Fullscreen toggle\n        this.bind(\n            elements.buttons.fullscreen,\n            'click',\n            () => {\n                player.fullscreen.toggle();\n            },\n            'fullscreen',\n        );\n\n        // Picture-in-Picture\n        this.bind(\n            elements.buttons.pip,\n            'click',\n            () => {\n                player.pip = 'toggle';\n            },\n            'pip',\n        );\n\n        // Airplay\n        this.bind(elements.buttons.airplay, 'click', player.airplay, 'airplay');\n\n        // Settings menu - click toggle\n        this.bind(elements.buttons.settings, 'click', event => {\n            // Prevent the document click listener closing the menu\n            event.stopPropagation();\n\n            controls.toggleMenu.call(player, event);\n        });\n\n        // Settings menu - keyboard toggle\n        // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n        this.bind(\n            elements.buttons.settings,\n            'keyup',\n            event => {\n                const code = event.which;\n\n                // We only care about space and return\n                if (![13, 32].includes(code)) {\n                    return;\n                }\n\n                // Because return triggers a click anyway, all we need to do is set focus\n                if (code === 13) {\n                    controls.focusFirstMenuItem.call(player, null, true);\n                    return;\n                }\n\n                // Prevent scroll\n                event.preventDefault();\n\n                // Prevent playing video (Firefox)\n                event.stopPropagation();\n\n                // Toggle menu\n                controls.toggleMenu.call(player, event);\n            },\n            null,\n            false, // Can't be passive as we're preventing default\n        );\n\n        // Escape closes menu\n        this.bind(elements.settings.menu, 'keydown', event => {\n            if (event.which === 27) {\n                controls.toggleMenu.call(player, event);\n            }\n        });\n\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\n        this.bind(elements.inputs.seek, 'mousedown mousemove', event => {\n            const rect = elements.progress.getBoundingClientRect();\n            const percent = (100 / rect.width) * (event.pageX - rect.left);\n            event.currentTarget.setAttribute('seek-value', percent);\n        });\n\n        // Pause while seeking\n        this.bind(elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', event => {\n            const seek = event.currentTarget;\n            const code = event.keyCode ? event.keyCode : event.which;\n            const attribute = 'play-on-seeked';\n\n            if (is.keyboardEvent(event) && (code !== 39 && code !== 37)) {\n                return;\n            }\n\n            // Record seek time so we can prevent hiding controls for a few seconds after seek\n            player.lastSeekTime = Date.now();\n\n            // Was playing before?\n            const play = seek.hasAttribute(attribute);\n\n            // Done seeking\n            const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\n\n            // If we're done seeking and it was playing, resume playback\n            if (play && done) {\n                seek.removeAttribute(attribute);\n                player.play();\n            } else if (!done && player.playing) {\n                seek.setAttribute(attribute, '');\n                player.pause();\n            }\n        });\n\n        // Fix range inputs on iOS\n        // Super weird iOS bug where after you interact with an <input type=\"range\">,\n        // it takes over further interactions on the page. This is a hack\n        if (browser.isIos) {\n            const inputs = getElements.call(player, 'input[type=\"range\"]');\n            Array.from(inputs).forEach(input => this.bind(input, inputEvent, event => repaint(event.target)));\n        }\n\n        // Seek\n        this.bind(\n            elements.inputs.seek,\n            inputEvent,\n            event => {\n                const seek = event.currentTarget;\n\n                // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n                let seekTo = seek.getAttribute('seek-value');\n\n                if (is.empty(seekTo)) {\n                    seekTo = seek.value;\n                }\n\n                seek.removeAttribute('seek-value');\n\n                player.currentTime = (seekTo / seek.max) * player.duration;\n            },\n            'seek',\n        );\n\n        // Seek tooltip\n        this.bind(elements.progress, 'mouseenter mouseleave mousemove', event =>\n            controls.updateSeekTooltip.call(player, event),\n        );\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebkit) {\n            Array.from(getElements.call(player, 'input[type=\"range\"]')).forEach(element => {\n                this.bind(element, 'input', event => controls.updateRangeFill.call(player, event.target));\n            });\n        }\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (player.config.toggleInvert && !is.element(elements.display.duration)) {\n            this.bind(elements.display.currentTime, 'click', () => {\n                // Do nothing if we're at the start\n                if (player.currentTime === 0) {\n                    return;\n                }\n\n                player.config.invertTime = !player.config.invertTime;\n\n                controls.timeUpdate.call(player);\n            });\n        }\n\n        // Volume\n        this.bind(\n            elements.inputs.volume,\n            inputEvent,\n            event => {\n                player.volume = event.target.value;\n            },\n            'volume',\n        );\n\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(elements.controls, 'mouseenter mouseleave', event => {\n            elements.controls.hover = !player.touch && event.type === 'mouseenter';\n        });\n\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\n            elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\n        });\n\n        // Show controls when they receive focus (e.g., when using keyboard tab key)\n        this.bind(elements.controls, 'focusin', () => {\n            const { config, elements, timers } = player;\n\n            // Skip transition to prevent focus from scrolling the parent element\n            toggleClass(elements.controls, config.classNames.noTransition, true);\n\n            // Toggle\n            ui.toggleControls.call(player, true);\n\n            // Restore transition\n            setTimeout(() => {\n                toggleClass(elements.controls, config.classNames.noTransition, false);\n            }, 0);\n\n            // Delay a little more for mouse users\n            const delay = this.touch ? 3000 : 4000;\n\n            // Clear timer\n            clearTimeout(timers.controls);\n\n            // Hide again after delay\n            timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n        });\n\n        // Mouse wheel for volume\n        this.bind(\n            elements.inputs.volume,\n            'wheel',\n            event => {\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                const inverted = event.webkitDirectionInvertedFromDevice;\n\n                // Get delta from event. Invert if `inverted` is true\n                const [x, y] = [event.deltaX, -event.deltaY].map(value => (inverted ? -value : value));\n\n                // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\n                const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\n\n                // Change the volume by 2%\n                player.increaseVolume(direction / 50);\n\n                // Don't break page scrolling at max and min\n                const { volume } = player.media;\n                if ((direction === 1 && volume < 1) || (direction === -1 && volume > 0)) {\n                    event.preventDefault();\n                }\n            },\n            'volume',\n            false,\n        );\n    }\n}\n\nexport default Listeners;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isLegacyIECss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped;\n\n    // tag IE9+\n    isLegacyIECss = 'hideFocus' in e;\n\n    // use preload in IE Edge (to detect load errors)\n    if (isLegacyIECss && e.relList) {\n      isLegacyIECss = 0;\n      e.rel = 'preload';\n      e.as = 'style';\n    }\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // treat empty stylesheets as failures to get around lack of onerror\n    // support in IE9-11\n    if (isLegacyIECss) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText` (unless error is Code:18 SecurityError)\n        if (x.code != 18) result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    } else if (e.rel == 'preload' && e.as == 'style') {\n      // activate preloaded stylesheets\n      return e.rel = 'stylesheet'; // jshint ignore:line\n    }\n    \n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function)} [arg1] - The bundleId or success callback\n * @param {Function} [arg2] - The success or error callback\n * @param {Function} [arg3] - The error callback\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  function loadFn(resolve, reject) {\n    loadFiles(paths, function (pathsNotFound) {\n      // execute callbacks\n      executeCallbacks(args, pathsNotFound);\n      \n      // resolve Promise\n      if (resolve) {\n        executeCallbacks({success: resolve, error: reject}, pathsNotFound);\n      }\n\n      // publish bundle load event\n      publish(bundleId, pathsNotFound);\n    }, args);\n  }\n  \n  if (args.returnPromise) return new Promise(loadFn);\n  else loadFn();\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Load an external script\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nexport default function loadScript(url) {\n    return new Promise((resolve, reject) => {\n        loadjs(url, {\n            success: resolve,\n            error: reject,\n        });\n    });\n}\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport captions from '../captions';\nimport controls from '../controls';\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { format, stripHTML } from '../utils/strings';\nimport { buildUrlParams } from '../utils/urls';\n\n// Parse Vimeo ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    if (is.number(Number(url))) {\n        return url;\n    }\n\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Get aspect ratio for dimensions\nfunction getAspectRatio(width, height) {\n    const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\n    const ratio = getRatio(width, height);\n    return `${width / ratio}:${height / ratio}`;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst vimeo = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set intial ratio\n        vimeo.setAspectRatio.call(this);\n\n        // Load the API if not already\n        if (!is.object(window.Vimeo)) {\n            loadScript(this.config.urls.vimeo.sdk)\n                .then(() => {\n                    vimeo.ready.call(this);\n                })\n                .catch(error => {\n                    this.debug.warn('Vimeo API failed to load', error);\n                });\n        } else {\n            vimeo.ready.call(this);\n        }\n    },\n\n    // Set aspect ratio\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\n    setAspectRatio(input) {\n        const [x, y] = (is.string(input) ? input : this.config.ratio).split(':').map(Number);\n        const padding = (100 / x) * y;\n        vimeo.padding = padding;\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\n\n        if (this.supported.ui) {\n            const height = 240;\n            const offset = (height - padding) / (height / 50);\n\n            this.media.style.transform = `translateY(-${offset}%)`;\n        }\n    },\n\n    // API Ready\n    ready() {\n        const player = this;\n\n        // Get Vimeo params for the iframe\n        const options = {\n            loop: player.config.loop.active,\n            autoplay: player.autoplay,\n            // muted: player.muted,\n            byline: false,\n            portrait: false,\n            title: false,\n            speed: true,\n            transparent: 0,\n            gesture: 'media',\n            playsinline: !this.config.fullscreen.iosNative,\n        };\n        const params = buildUrlParams(options);\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(player.config.attributes.embed.id);\n        }\n\n        const id = parseId(source);\n\n        // Build an iframe\n        const iframe = createElement('iframe');\n        const src = format(player.config.urls.vimeo.iframe, id, params);\n        iframe.setAttribute('src', src);\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.setAttribute('allowtransparency', '');\n        iframe.setAttribute('allow', 'autoplay');\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Inject the package\n        const wrapper = createElement('div', { poster, class: player.config.classNames.embedContainer });\n        wrapper.appendChild(iframe);\n        player.media = replaceElement(wrapper, player.media);\n\n        // Get poster image\n        fetch(format(player.config.urls.vimeo.api, id), 'json').then(response => {\n            if (is.empty(response)) {\n                return;\n            }\n\n            // Get the URL for thumbnail\n            const url = new URL(response[0].thumbnail_large);\n\n            // Get original image\n            url.pathname = `${url.pathname.split('_')[0]}.jpg`;\n\n            // Set and show poster\n            ui.setPoster.call(player, url.href).catch(() => {});\n        });\n\n        // Setup instance\n        // https://github.com/vimeo/player.js\n        player.embed = new window.Vimeo.Player(iframe, {\n            autopause: player.config.autopause,\n            muted: player.muted,\n        });\n\n        player.media.paused = true;\n        player.media.currentTime = 0;\n\n        // Disable native text track rendering\n        if (player.supported.ui) {\n            player.embed.disableTextTrack();\n        }\n\n        // Create a faux HTML5 API using the Vimeo API\n        player.media.play = () => {\n            assurePlaybackState.call(player, true);\n            return player.embed.play();\n        };\n\n        player.media.pause = () => {\n            assurePlaybackState.call(player, false);\n            return player.embed.pause();\n        };\n\n        player.media.stop = () => {\n            player.pause();\n            player.currentTime = 0;\n        };\n\n        // Seeking\n        let { currentTime } = player.media;\n        Object.defineProperty(player.media, 'currentTime', {\n            get() {\n                return currentTime;\n            },\n            set(time) {\n                // Vimeo will automatically play on seek if the video hasn't been played before\n\n                // Get current paused state and volume etc\n                const { embed, media, paused, volume } = player;\n                const restorePause = paused && !embed.hasPlayed;\n\n                // Set seeking state and trigger event\n                media.seeking = true;\n                triggerEvent.call(player, media, 'seeking');\n\n                // If paused, mute until seek is complete\n                Promise.resolve(restorePause && embed.setVolume(0))\n                    // Seek\n                    .then(() => embed.setCurrentTime(time))\n                    // Restore paused\n                    .then(() => restorePause && embed.pause())\n                    // Restore volume\n                    .then(() => restorePause && embed.setVolume(volume))\n                    .catch(() => {\n                        // Do nothing\n                    });\n            },\n        });\n\n        // Playback speed\n        let speed = player.config.speed.selected;\n        Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n                return speed;\n            },\n            set(input) {\n                player.embed\n                    .setPlaybackRate(input)\n                    .then(() => {\n                        speed = input;\n                        triggerEvent.call(player, player.media, 'ratechange');\n                    })\n                    .catch(error => {\n                        // Hide menu item (and menu if empty)\n                        if (error.name === 'Error') {\n                            controls.setSpeedMenu.call(player, []);\n                        }\n                    });\n            },\n        });\n\n        // Volume\n        let { volume } = player.config;\n        Object.defineProperty(player.media, 'volume', {\n            get() {\n                return volume;\n            },\n            set(input) {\n                player.embed.setVolume(input).then(() => {\n                    volume = input;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Muted\n        let { muted } = player.config;\n        Object.defineProperty(player.media, 'muted', {\n            get() {\n                return muted;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : false;\n\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n                    muted = toggle;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Loop\n        let { loop } = player.config;\n        Object.defineProperty(player.media, 'loop', {\n            get() {\n                return loop;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : player.config.loop.active;\n\n                player.embed.setLoop(toggle).then(() => {\n                    loop = toggle;\n                });\n            },\n        });\n\n        // Source\n        let currentSrc;\n        player.embed\n            .getVideoUrl()\n            .then(value => {\n                currentSrc = value;\n                controls.setDownloadLink.call(player);\n            })\n            .catch(error => {\n                this.debug.warn(error);\n            });\n\n        Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n                return currentSrc;\n            },\n        });\n\n        // Ended\n        Object.defineProperty(player.media, 'ended', {\n            get() {\n                return player.currentTime === player.duration;\n            },\n        });\n\n        // Set aspect ratio based on video size\n        Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(dimensions => {\n            vimeo.ratio = getAspectRatio(dimensions[0], dimensions[1]);\n            vimeo.setAspectRatio.call(this, vimeo.ratio);\n        });\n\n        // Set autopause\n        player.embed.setAutopause(player.config.autopause).then(state => {\n            player.config.autopause = state;\n        });\n\n        // Get title\n        player.embed.getVideoTitle().then(title => {\n            player.config.title = title;\n            ui.setTitle.call(this);\n        });\n\n        // Get current time\n        player.embed.getCurrentTime().then(value => {\n            currentTime = value;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        // Get duration\n        player.embed.getDuration().then(value => {\n            player.media.duration = value;\n            triggerEvent.call(player, player.media, 'durationchange');\n        });\n\n        // Get captions\n        player.embed.getTextTracks().then(tracks => {\n            player.media.textTracks = tracks;\n            captions.setup.call(player);\n        });\n\n        player.embed.on('cuechange', ({ cues = [] }) => {\n            const strippedCues = cues.map(cue => stripHTML(cue.text));\n            captions.updateCues.call(player, strippedCues);\n        });\n\n        player.embed.on('loaded', () => {\n            // Assure state and events are updated on autoplay\n            player.embed.getPaused().then(paused => {\n                assurePlaybackState.call(player, !paused);\n                if (!paused) {\n                    triggerEvent.call(player, player.media, 'playing');\n                }\n            });\n\n            if (is.element(player.embed.element) && player.supported.ui) {\n                const frame = player.embed.element;\n\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                frame.setAttribute('tabindex', -1);\n            }\n        });\n\n        player.embed.on('play', () => {\n            assurePlaybackState.call(player, true);\n            triggerEvent.call(player, player.media, 'playing');\n        });\n\n        player.embed.on('pause', () => {\n            assurePlaybackState.call(player, false);\n        });\n\n        player.embed.on('timeupdate', data => {\n            player.media.seeking = false;\n            currentTime = data.seconds;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        player.embed.on('progress', data => {\n            player.media.buffered = data.percent;\n            triggerEvent.call(player, player.media, 'progress');\n\n            // Check all loaded\n            if (parseInt(data.percent, 10) === 1) {\n                triggerEvent.call(player, player.media, 'canplaythrough');\n            }\n\n            // Get duration as if we do it before load, it gives an incorrect value\n            // https://github.com/sampotts/plyr/issues/891\n            player.embed.getDuration().then(value => {\n                if (value !== player.media.duration) {\n                    player.media.duration = value;\n                    triggerEvent.call(player, player.media, 'durationchange');\n                }\n            });\n        });\n\n        player.embed.on('seeked', () => {\n            player.media.seeking = false;\n            triggerEvent.call(player, player.media, 'seeked');\n        });\n\n        player.embed.on('ended', () => {\n            player.media.paused = true;\n            triggerEvent.call(player, player.media, 'ended');\n        });\n\n        player.embed.on('error', detail => {\n            player.media.error = detail;\n            triggerEvent.call(player, player.media, 'error');\n        });\n\n        // Set height/width on fullscreen\n        player.on('enterfullscreen exitfullscreen', event => {\n            const { target } = player.fullscreen;\n\n            // Ignore for iOS native\n            if (target !== player.elements.container) {\n                return;\n            }\n\n            const toggle = event.type === 'enterfullscreen';\n            const [x, y] = vimeo.ratio.split(':').map(Number);\n            const dimension = x > y ? 'width' : 'height';\n\n            target.style[dimension] = toggle ? `${vimeo.padding}%` : null;\n        });\n\n        // Rebuild UI\n        setTimeout(() => ui.build.call(player), 0);\n    },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadImage from '../utils/loadImage';\nimport loadScript from '../utils/loadScript';\nimport { format, generateId } from '../utils/strings';\n\n// Parse YouTube ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst youtube = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set aspect ratio\n        youtube.setAspectRatio.call(this);\n\n        // Setup API\n        if (is.object(window.YT) && is.function(window.YT.Player)) {\n            youtube.ready.call(this);\n        } else {\n            // Load the API\n            loadScript(this.config.urls.youtube.sdk).catch(error => {\n                this.debug.warn('YouTube API failed to load', error);\n            });\n\n            // Setup callback for the API\n            // YouTube has it's own system of course...\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n            // Add to queue\n            window.onYouTubeReadyCallbacks.push(() => {\n                youtube.ready.call(this);\n            });\n\n            // Set callback to process queue\n            window.onYouTubeIframeAPIReady = () => {\n                window.onYouTubeReadyCallbacks.forEach(callback => {\n                    callback();\n                });\n            };\n        }\n    },\n\n    // Get the media title\n    getTitle(videoId) {\n        // Try via undocumented API method first\n        // This method disappears now and then though...\n        // https://github.com/sampotts/plyr/issues/709\n        if (is.function(this.embed.getVideoData)) {\n            const { title } = this.embed.getVideoData();\n\n            if (is.empty(title)) {\n                this.config.title = title;\n                ui.setTitle.call(this);\n                return;\n            }\n        }\n\n        // Or via Google API\n        const key = this.config.keys.google;\n        if (is.string(key) && !is.empty(key)) {\n            const url = format(this.config.urls.youtube.api, videoId, key);\n\n            fetch(url)\n                .then(result => {\n                    if (is.object(result)) {\n                        this.config.title = result.items[0].snippet.title;\n                        ui.setTitle.call(this);\n                    }\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Set aspect ratio\n    setAspectRatio() {\n        const ratio = this.config.ratio.split(':');\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\n    },\n\n    // API ready\n    ready() {\n        const player = this;\n\n        // Ignore already setup (race condition)\n        const currentId = player.media.getAttribute('id');\n        if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n            return;\n        }\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        // Replace the <iframe> with a <div> due to YouTube API issues\n        const videoId = parseId(source);\n        const id = generateId(player.provider);\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Replace media element\n        const container = createElement('div', { id, poster });\n        player.media = replaceElement(container, player.media);\n\n        // Id to poster wrapper\n        const posterSrc = format => `https://img.youtube.com/vi/${videoId}/${format}default.jpg`;\n\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n        loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n            .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n            .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n            .then(image => ui.setPoster.call(player, image.src))\n            .then(posterSrc => {\n                // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n                if (!posterSrc.includes('maxres')) {\n                    player.elements.poster.style.backgroundSize = 'cover';\n                }\n            })\n            .catch(() => {});\n\n        // Setup instance\n        // https://developers.google.com/youtube/iframe_api_reference\n        player.embed = new window.YT.Player(id, {\n            videoId,\n            playerVars: {\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\n                hl: player.config.hl, // iframe interface language\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\n                rel: 0, // No related vids\n                showinfo: 0, // Hide info\n                iv_load_policy: 3, // Hide annotations\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n                disablekb: 1, // Disable keyboard as we handle it\n                playsinline: 1, // Allow iOS inline playback\n\n                // Tracking for stats\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\n                widget_referrer: window ? window.location.href : null,\n\n                // Captions are flaky on YouTube\n                cc_load_policy: player.captions.active ? 1 : 0,\n                cc_lang_pref: player.config.captions.language,\n            },\n            events: {\n                onError(event) {\n                    // YouTube may fire onError twice, so only handle it once\n                    if (!player.media.error) {\n                        const code = event.data;\n                        // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n                        const message =\n                            {\n                                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                                150: 'The owner of the requested video does not allow it to be played in embedded players.',\n                            }[code] || 'An unknown error occured';\n\n                        player.media.error = { code, message };\n\n                        triggerEvent.call(player, player.media, 'error');\n                    }\n                },\n                onPlaybackRateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get current speed\n                    player.media.playbackRate = instance.getPlaybackRate();\n\n                    triggerEvent.call(player, player.media, 'ratechange');\n                },\n                onReady(event) {\n                    // Bail if onReady has already been called. See issue #1108\n                    if (is.function(player.media.play)) {\n                        return;\n                    }\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get the title\n                    youtube.getTitle.call(player, videoId);\n\n                    // Create a faux HTML5 API using the YouTube API\n                    player.media.play = () => {\n                        assurePlaybackState.call(player, true);\n                        instance.playVideo();\n                    };\n\n                    player.media.pause = () => {\n                        assurePlaybackState.call(player, false);\n                        instance.pauseVideo();\n                    };\n\n                    player.media.stop = () => {\n                        instance.stopVideo();\n                    };\n\n                    player.media.duration = instance.getDuration();\n                    player.media.paused = true;\n\n                    // Seeking\n                    player.media.currentTime = 0;\n                    Object.defineProperty(player.media, 'currentTime', {\n                        get() {\n                            return Number(instance.getCurrentTime());\n                        },\n                        set(time) {\n                            // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n                            if (player.paused && !player.embed.hasPlayed) {\n                                player.embed.mute();\n                            }\n\n                            // Set seeking state and trigger event\n                            player.media.seeking = true;\n                            triggerEvent.call(player, player.media, 'seeking');\n\n                            // Seek after events sent\n                            instance.seekTo(time);\n                        },\n                    });\n\n                    // Playback speed\n                    Object.defineProperty(player.media, 'playbackRate', {\n                        get() {\n                            return instance.getPlaybackRate();\n                        },\n                        set(input) {\n                            instance.setPlaybackRate(input);\n                        },\n                    });\n\n                    // Volume\n                    let { volume } = player.config;\n                    Object.defineProperty(player.media, 'volume', {\n                        get() {\n                            return volume;\n                        },\n                        set(input) {\n                            volume = input;\n                            instance.setVolume(volume * 100);\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Muted\n                    let { muted } = player.config;\n                    Object.defineProperty(player.media, 'muted', {\n                        get() {\n                            return muted;\n                        },\n                        set(input) {\n                            const toggle = is.boolean(input) ? input : muted;\n                            muted = toggle;\n                            instance[toggle ? 'mute' : 'unMute']();\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Source\n                    Object.defineProperty(player.media, 'currentSrc', {\n                        get() {\n                            return instance.getVideoUrl();\n                        },\n                    });\n\n                    // Ended\n                    Object.defineProperty(player.media, 'ended', {\n                        get() {\n                            return player.currentTime === player.duration;\n                        },\n                    });\n\n                    // Get available speeds\n                    player.options.speed = instance.getAvailablePlaybackRates();\n\n                    // Set the tabindex to avoid focus entering iframe\n                    if (player.supported.ui) {\n                        player.media.setAttribute('tabindex', -1);\n                    }\n\n                    triggerEvent.call(player, player.media, 'timeupdate');\n                    triggerEvent.call(player, player.media, 'durationchange');\n\n                    // Reset timer\n                    clearInterval(player.timers.buffering);\n\n                    // Setup buffering\n                    player.timers.buffering = setInterval(() => {\n                        // Get loaded % from YouTube\n                        player.media.buffered = instance.getVideoLoadedFraction();\n\n                        // Trigger progress only when we actually buffer something\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                            triggerEvent.call(player, player.media, 'progress');\n                        }\n\n                        // Set last buffer point\n                        player.media.lastBuffered = player.media.buffered;\n\n                        // Bail if we're at 100%\n                        if (player.media.buffered === 1) {\n                            clearInterval(player.timers.buffering);\n\n                            // Trigger event\n                            triggerEvent.call(player, player.media, 'canplaythrough');\n                        }\n                    }, 200);\n\n                    // Rebuild UI\n                    setTimeout(() => ui.build.call(player), 50);\n                },\n                onStateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Reset timer\n                    clearInterval(player.timers.playing);\n\n                    const seeked = player.media.seeking && [1, 2].includes(event.data);\n\n                    if (seeked) {\n                        // Unset seeking and fire seeked event\n                        player.media.seeking = false;\n                        triggerEvent.call(player, player.media, 'seeked');\n                    }\n\n                    // Handle events\n                    // -1   Unstarted\n                    // 0    Ended\n                    // 1    Playing\n                    // 2    Paused\n                    // 3    Buffering\n                    // 5    Video cued\n                    switch (event.data) {\n                        case -1:\n                            // Update scrubber\n                            triggerEvent.call(player, player.media, 'timeupdate');\n\n                            // Get loaded % from YouTube\n                            player.media.buffered = instance.getVideoLoadedFraction();\n                            triggerEvent.call(player, player.media, 'progress');\n\n                            break;\n\n                        case 0:\n                            assurePlaybackState.call(player, false);\n\n                            // YouTube doesn't support loop for a single video, so mimick it.\n                            if (player.media.loop) {\n                                // YouTube needs a call to `stopVideo` before playing again\n                                instance.stopVideo();\n                                instance.playVideo();\n                            } else {\n                                triggerEvent.call(player, player.media, 'ended');\n                            }\n\n                            break;\n\n                        case 1:\n                            // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (player.media.paused && !player.embed.hasPlayed) {\n                                player.media.pause();\n                            } else {\n                                assurePlaybackState.call(player, true);\n\n                                triggerEvent.call(player, player.media, 'playing');\n\n                                // Poll to get playback progress\n                                player.timers.playing = setInterval(() => {\n                                    triggerEvent.call(player, player.media, 'timeupdate');\n                                }, 50);\n\n                                // Check duration again due to YouTube bug\n                                // https://github.com/sampotts/plyr/issues/374\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                                if (player.media.duration !== instance.getDuration()) {\n                                    player.media.duration = instance.getDuration();\n                                    triggerEvent.call(player, player.media, 'durationchange');\n                                }\n                            }\n\n                            break;\n\n                        case 2:\n                            // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (!player.muted) {\n                                player.embed.unMute();\n                            }\n                            assurePlaybackState.call(player, false);\n\n                            break;\n\n                        default:\n                            break;\n                    }\n\n                    triggerEvent.call(player, player.elements.container, 'statechange', false, {\n                        code: event.data,\n                    });\n                },\n            },\n        });\n    },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport html5 from './html5';\nimport vimeo from './plugins/vimeo';\nimport youtube from './plugins/youtube';\nimport { createElement, toggleClass, wrap } from './utils/elements';\n\nconst media = {\n    // Setup media\n    setup() {\n        // If there's no media, bail\n        if (!this.media) {\n            this.debug.warn('No media element found!');\n            return;\n        }\n\n        // Add type class\n        toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n        // Add provider class\n        toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n        // Add video class for embeds\n        // This will require changes if audio embeds are added\n        if (this.isEmbed) {\n            toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n        }\n\n        // Inject the player wrapper\n        if (this.isVideo) {\n            // Create the wrapper div\n            this.elements.wrapper = createElement('div', {\n                class: this.config.classNames.video,\n            });\n\n            // Wrap the video in a container\n            wrap(this.media, this.elements.wrapper);\n\n            // Faux poster container\n            this.elements.poster = createElement('div', {\n                class: this.config.classNames.poster,\n            });\n\n            this.elements.wrapper.appendChild(this.elements.poster);\n        }\n\n        if (this.isHTML5) {\n            html5.extend.call(this);\n        } else if (this.isYouTube) {\n            youtube.setup.call(this);\n        } else if (this.isVimeo) {\n            vimeo.setup.call(this);\n        }\n    },\n};\n\nexport default media;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport { createElement } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport i18n from '../utils/i18n';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { formatTime } from '../utils/time';\nimport { buildUrlParams } from '../utils/urls';\n\nclass Ads {\n    /**\n     * Ads constructor.\n     * @param {object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n        this.player = player;\n        this.publisherId = player.config.ads.publisherId;\n        this.playing = false;\n        this.initialized = false;\n        this.elements = {\n            container: null,\n            displayContainer: null,\n        };\n        this.manager = null;\n        this.loader = null;\n        this.cuePoints = null;\n        this.events = {};\n        this.safetyTimer = null;\n        this.countdownTimer = null;\n\n        // Setup a promise to resolve when the IMA manager is ready\n        this.managerPromise = new Promise((resolve, reject) => {\n            // The ad is loaded and ready\n            this.on('loaded', resolve);\n\n            // Ads failed\n            this.on('error', reject);\n        });\n\n        this.load();\n    }\n\n    get enabled() {\n        return (\n            this.player.isHTML5 && this.player.isVideo && this.player.config.ads.enabled && !is.empty(this.publisherId)\n        );\n    }\n\n    /**\n     * Load the IMA SDK\n     */\n    load() {\n        if (this.enabled) {\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\n            if (!is.object(window.google) || !is.object(window.google.ima)) {\n                loadScript(this.player.config.urls.googleIMA.sdk)\n                    .then(() => {\n                        this.ready();\n                    })\n                    .catch(() => {\n                        // Script failed to load or is blocked\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\n                    });\n            } else {\n                this.ready();\n            }\n        }\n    }\n\n    /**\n     * Get the ads instance ready\n     */\n    ready() {\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n            this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n    }\n\n    // Build the default tag URL\n    get tagUrl() {\n        const params = {\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\n            AV_URL: window.location.hostname,\n            cb: Date.now(),\n            AV_WIDTH: 640,\n            AV_HEIGHT: 480,\n            AV_CDIM2: this.publisherId,\n        };\n\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n        return `${base}?${buildUrlParams(params)}`;\n    }\n\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n    setupIMA() {\n        // Create the container for our advertisements\n        this.elements.container = createElement('div', {\n            class: this.player.config.classNames.ads,\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // We assume the adContainer is the video container of the plyr element\n        // that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n    }\n\n    /**\n     * Request advertisements\n     */\n    requestAds() {\n        const { container } = this.player.elements;\n\n        try {\n            // Create ads loader\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n            // Listen and respond to ads loaded and error events\n            this.loader.addEventListener(\n                google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n                event => this.onAdsManagerLoaded(event),\n                false,\n            );\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n            // Request video ads\n            const request = new google.ima.AdsRequest();\n            request.adTagUrl = this.tagUrl;\n\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\n            // to select the correct creative if multiple are returned\n            request.linearAdSlotWidth = container.offsetWidth;\n            request.linearAdSlotHeight = container.offsetHeight;\n            request.nonLinearAdSlotWidth = container.offsetWidth;\n            request.nonLinearAdSlotHeight = container.offsetHeight;\n\n            // We only overlay ads as we only support video.\n            request.forceNonLinearFullSlot = false;\n\n            // Mute based on current state\n            request.setAdWillPlayMuted(!this.player.muted);\n\n            this.loader.requestAds(request);\n        } catch (e) {\n            this.onAdError(e);\n        }\n    }\n\n    /**\n     * Update the ad countdown\n     * @param {boolean} start\n     */\n    pollCountdown(start = false) {\n        if (!start) {\n            clearInterval(this.countdownTimer);\n            this.elements.container.removeAttribute('data-badge-text');\n            return;\n        }\n\n        const update = () => {\n            const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n            this.elements.container.setAttribute('data-badge-text', label);\n        };\n\n        this.countdownTimer = setInterval(update, 100);\n    }\n\n    /**\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\n     * @param {Event} adsManagerLoadedEvent\n     */\n    onAdsManagerLoaded(event) {\n        // Load could occur after a source change (race condition)\n        if (!this.enabled) {\n            return;\n        }\n\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add advertisement cue's within the time line if available\n        if (!is.empty(this.cuePoints)) {\n            this.cuePoints.forEach(cuePoint => {\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n                    const seekElement = this.player.elements.progress;\n\n                    if (is.element(seekElement)) {\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\n                        const cue = createElement('span', {\n                            class: this.player.config.classNames.cues,\n                        });\n\n                        cue.style.left = `${cuePercentage.toString()}%`;\n                        seekElement.appendChild(cue);\n                    }\n                }\n            });\n        }\n\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n    }\n\n    /**\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {Event} event\n     */\n    onAdEvent(event) {\n        const { container } = this.player.elements;\n\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n\n        // Proxy event\n        const dispatchEvent = type => {\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\n            triggerEvent.call(this.player, this.player.media, event);\n        };\n\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                // This is the first event sent for an ad - it is possible to determine whether the\n                // ad is a video ad or an overlay\n                this.trigger('loaded');\n\n                // Bubble event\n                dispatchEvent(event.type);\n\n                // Start countdown\n                this.pollCountdown(true);\n\n                if (!ad.isLinear()) {\n                    // Position AdDisplayContainer correctly for overlay\n                    ad.width = container.offsetWidth;\n                    ad.height = container.offsetHeight;\n                }\n\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n                break;\n\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                // All ads for the current videos are done. We can now request new advertisements\n                // in case the video is re-played\n\n                // Fire event\n                dispatchEvent(event.type);\n\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\n                // So here we load a new video when all ads are done.\n                // Then we load new ads within a new adsManager. When the video\n                // Is started - after - the ads are loaded, then we get ads.\n                // You can also easily test cancelling and reloading by running\n                // player.ads.cancel() and player.ads.play from the console I guess.\n                // this.player.source = {\n                //     type: 'video',\n                //     title: 'View From A Blue Moon',\n                //     sources: [{\n                //         src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n                // 'video/mp4', }], poster:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n                // };\n\n                // TODO: So there is still this thing where a video should only be allowed to start\n                // playing when the IMA SDK is ready or has failed\n\n                this.loadAds();\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n                // This event indicates the ad has started - the video player can adjust the UI,\n                // for example display a pause button and remaining time. Fired when content should\n                // be paused. This usually happens right before an ad is about to cover the content\n\n                dispatchEvent(event.type);\n\n                this.pauseContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n                // This event indicates the ad has finished - the video player can perform\n                // appropriate UI actions, such as removing the timer for remaining time detection.\n                // Fired when content should be resumed. This usually happens when an ad finishes\n                // or collapses\n\n                dispatchEvent(event.type);\n\n                this.pollCountdown();\n\n                this.resumeContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.STARTED:\n            case google.ima.AdEvent.Type.MIDPOINT:\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.IMPRESSION:\n            case google.ima.AdEvent.Type.CLICK:\n                dispatchEvent(event.type);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Any ad error handling comes through here\n     * @param {Event} event\n     */\n    onAdError(event) {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n    }\n\n    /**\n     * Setup hooks for Plyr and window events. This ensures\n     * the mid- and post-roll launch at the correct time. And\n     * resize the advertisement when the player resizes\n     */\n    listeners() {\n        const { container } = this.player.elements;\n        let time;\n\n        // Add listeners to the required events\n        this.player.on('ended', () => {\n            this.loader.contentComplete();\n        });\n\n        this.player.on('seeking', () => {\n            time = this.player.currentTime;\n            return time;\n        });\n\n        this.player.on('seeked', () => {\n            const seekedTime = this.player.currentTime;\n\n            if (is.empty(this.cuePoints)) {\n                return;\n            }\n\n            this.cuePoints.forEach((cuePoint, index) => {\n                if (time < cuePoint && cuePoint < seekedTime) {\n                    this.manager.discardAdBreak();\n                    this.cuePoints.splice(index, 1);\n                }\n            });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n            if (this.manager) {\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n            }\n        });\n    }\n\n    /**\n     * Initialize the adsManager and start playing advertisements\n     */\n    play() {\n        const { container } = this.player.elements;\n\n        if (!this.managerPromise) {\n            this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise\n            .then(() => {\n                // Initialize the container. Must be done via a user action on mobile devices\n                this.elements.displayContainer.initialize();\n\n                try {\n                    if (!this.initialized) {\n                        // Initialize the ads manager. Ad rules playlist will start at this time\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n                        // Call play to start showing the ad. Single video and overlay ads will\n                        // start at this time; the call will be ignored for ad rules\n                        this.manager.start();\n                    }\n\n                    this.initialized = true;\n                } catch (adError) {\n                    // An error may be thrown if there was a problem with the\n                    // VAST response\n                    this.onAdError(adError);\n                }\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Resume our video\n     */\n    resumeContent() {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play our video\n        if (this.player.currentTime < this.player.duration) {\n            this.player.play();\n        }\n    }\n\n    /**\n     * Pause our video\n     */\n    pauseContent() {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing.\n        this.playing = true;\n\n        // Pause our video.\n        this.player.pause();\n    }\n\n    /**\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\n     * video requests. https://developers.google.com/interactive-\n     * media-ads/docs/sdks/android/faq#8\n     */\n    cancel() {\n        // Pause our video\n        if (this.initialized) {\n            this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n    }\n\n    /**\n     * Re-create our adsManager\n     */\n    loadAds() {\n        // Tell our adsManager to go bye bye\n        this.managerPromise\n            .then(() => {\n                // Destroy our adsManager\n                if (this.manager) {\n                    this.manager.destroy();\n                }\n\n                // Re-set our adsManager promises\n                this.managerPromise = new Promise(resolve => {\n                    this.on('loaded', resolve);\n                    this.player.debug.log(this.manager);\n                });\n\n                // Now request some new advertisements\n                this.requestAds();\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Handles callbacks after an ad event was invoked\n     * @param {string} event - Event type\n     */\n    trigger(event, ...args) {\n        const handlers = this.events[event];\n\n        if (is.array(handlers)) {\n            handlers.forEach(handler => {\n                if (is.function(handler)) {\n                    handler.apply(this, args);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     * @return {Ads}\n     */\n    on(event, callback) {\n        if (!is.array(this.events[event])) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(callback);\n\n        return this;\n    }\n\n    /**\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\n     * advertisement is playing, or when a user action is required to start, then we clear the\n     * timer on ad ready\n     * @param {number} time\n     * @param {string} from\n     */\n    startSafetyTimer(time, from) {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n        this.safetyTimer = setTimeout(() => {\n            this.cancel();\n            this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n    }\n\n    /**\n     * Clear our safety timer(s)\n     * @param {string} from\n     */\n    clearSafetyTimer(from) {\n        if (!is.nullOrUndefined(this.safetyTimer)) {\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n            clearTimeout(this.safetyTimer);\n            this.safetyTimer = null;\n        }\n    }\n}\n\nexport default Ads;\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport { providers } from './config/types';\nimport html5 from './html5';\nimport media from './media';\nimport support from './support';\nimport ui from './ui';\nimport { createElement, insertElement, removeElement } from './utils/elements';\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\n\nconst source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n        if (is.string(attributes)) {\n            insertElement(type, this.media, {\n                src: attributes,\n            });\n        } else if (is.array(attributes)) {\n            attributes.forEach(attribute => {\n                insertElement(type, this.media, attribute);\n            });\n        }\n    },\n\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n        if (!getDeep(input, 'sources.length')) {\n            this.debug.warn('Invalid source format');\n            return;\n        }\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        // Destroy instance and re-setup\n        this.destroy.call(\n            this,\n            () => {\n                // Reset quality options\n                this.options.quality = [];\n\n                // Remove elements\n                removeElement(this.media);\n                this.media = null;\n\n                // Reset class name\n                if (is.element(this.elements.container)) {\n                    this.elements.container.removeAttribute('class');\n                }\n\n                // Set the type and provider\n                const { sources, type } = input;\n                const [{ provider = providers.html5, src }] = sources;\n                const tagName = provider === 'html5' ? type : 'div';\n                const attributes = provider === 'html5' ? {} : { src };\n\n                Object.assign(this, {\n                    provider,\n                    type,\n                    // Check for support\n                    supported: support.check(type, provider, this.config.playsinline),\n                    // Create new element\n                    media: createElement(tagName, attributes),\n                });\n\n                // Inject the new element\n                this.elements.container.appendChild(this.media);\n\n                // Autoplay the new source?\n                if (is.boolean(input.autoplay)) {\n                    this.config.autoplay = input.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (this.isHTML5) {\n                    if (this.config.crossorigin) {\n                        this.media.setAttribute('crossorigin', '');\n                    }\n                    if (this.config.autoplay) {\n                        this.media.setAttribute('autoplay', '');\n                    }\n                    if (!is.empty(input.poster)) {\n                        this.poster = input.poster;\n                    }\n                    if (this.config.loop.active) {\n                        this.media.setAttribute('loop', '');\n                    }\n                    if (this.config.muted) {\n                        this.media.setAttribute('muted', '');\n                    }\n                    if (this.config.playsinline) {\n                        this.media.setAttribute('playsinline', '');\n                    }\n                }\n\n                // Restore class hook\n                ui.addStyleHook.call(this);\n\n                // Set new sources for html5\n                if (this.isHTML5) {\n                    source.insertElements.call(this, 'source', sources);\n                }\n\n                // Set video title\n                this.config.title = input.title;\n\n                // Set up from scratch\n                media.setup.call(this);\n\n                // HTML5 stuff\n                if (this.isHTML5) {\n                    // Setup captions\n                    if (Object.keys(input).includes('tracks')) {\n                        source.insertElements.call(this, 'track', input.tracks);\n                    }\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n                    // Setup interface\n                    ui.build.call(this);\n                }\n\n                if (this.isHTML5) {\n                    // Load HTML5 sources\n                    this.media.load();\n                }\n\n                // Update the fullscreen support\n                this.fullscreen.update();\n            },\n            true,\n        );\n    },\n};\n\nexport default source;\n","// ==========================================================================\n// Plyr\n// plyr.js v3.4.7\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport captions from './captions';\nimport defaults from './config/defaults';\nimport { pip } from './config/states';\nimport { getProviderByUrl, providers, types } from './config/types';\nimport Console from './console';\nimport controls from './controls';\nimport Fullscreen from './fullscreen';\nimport Listeners from './listeners';\nimport media from './media';\nimport Ads from './plugins/ads';\nimport source from './source';\nimport Storage from './storage';\nimport support from './support';\nimport ui from './ui';\nimport { closest } from './utils/arrays';\nimport { createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { cloneDeep, extend } from './utils/objects';\nimport { parseUrl } from './utils/urls';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n    constructor(target, options) {\n        this.timers = {};\n\n        // State\n        this.ready = false;\n        this.loading = false;\n        this.failed = false;\n\n        // Touch device\n        this.touch = support.touch;\n\n        // Set the media element\n        this.media = target;\n\n        // String selector passed\n        if (is.string(this.media)) {\n            this.media = document.querySelectorAll(this.media);\n        }\n\n        // jQuery, NodeList or Array passed, use first element\n        if ((window.jQuery && this.media instanceof jQuery) || is.nodeList(this.media) || is.array(this.media)) {\n            // eslint-disable-next-line\n            this.media = this.media[0];\n        }\n\n        // Set config\n        this.config = extend(\n            {},\n            defaults,\n            Plyr.defaults,\n            options || {},\n            (() => {\n                try {\n                    return JSON.parse(this.media.getAttribute('data-plyr-config'));\n                } catch (e) {\n                    return {};\n                }\n            })(),\n        );\n\n        // Elements cache\n        this.elements = {\n            container: null,\n            captions: null,\n            buttons: {},\n            display: {},\n            progress: {},\n            inputs: {},\n            settings: {\n                popup: null,\n                menu: null,\n                panels: {},\n                buttons: {},\n            },\n        };\n\n        // Captions\n        this.captions = {\n            active: null,\n            currentTrack: -1,\n            meta: new WeakMap(),\n        };\n\n        // Fullscreen\n        this.fullscreen = {\n            active: false,\n        };\n\n        // Options\n        this.options = {\n            speed: [],\n            quality: [],\n        };\n\n        // Debugging\n        // TODO: move to globals\n        this.debug = new Console(this.config.debug);\n\n        // Log config options and support\n        this.debug.log('Config', this.config);\n        this.debug.log('Support', support);\n\n        // We need an element to setup\n        if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n            this.debug.error('Setup failed: no suitable element passed');\n            return;\n        }\n\n        // Bail if the element is initialized\n        if (this.media.plyr) {\n            this.debug.warn('Target already setup');\n            return;\n        }\n\n        // Bail if not enabled\n        if (!this.config.enabled) {\n            this.debug.error('Setup failed: disabled by config');\n            return;\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!support.check().api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Cache original element state for .destroy()\n        const clone = this.media.cloneNode(true);\n        clone.autoplay = false;\n        this.elements.original = clone;\n\n        // Set media type based on tag or data attribute\n        // Supported: video, audio, vimeo, youtube\n        const type = this.media.tagName.toLowerCase();\n\n        // Embed properties\n        let iframe = null;\n        let url = null;\n\n        // Different setup based on type\n        switch (type) {\n            case 'div':\n                // Find the frame\n                iframe = this.media.querySelector('iframe');\n\n                // <iframe> type\n                if (is.element(iframe)) {\n                    // Detect provider\n                    url = parseUrl(iframe.getAttribute('src'));\n                    this.provider = getProviderByUrl(url.toString());\n\n                    // Rework elements\n                    this.elements.container = this.media;\n                    this.media = iframe;\n\n                    // Reset classname\n                    this.elements.container.className = '';\n\n                    // Get attributes from URL and set config\n                    if (url.search.length) {\n                        const truthy = ['1', 'true'];\n\n                        if (truthy.includes(url.searchParams.get('autoplay'))) {\n                            this.config.autoplay = true;\n                        }\n                        if (truthy.includes(url.searchParams.get('loop'))) {\n                            this.config.loop.active = true;\n                        }\n\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\n                        // YouTube requires the playsinline in the URL\n                        if (this.isYouTube) {\n                            this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n                            this.config.hl = url.searchParams.get('hl'); // TODO: Should this be setting language?\n                        } else {\n                            this.config.playsinline = true;\n                        }\n                    }\n                } else {\n                    // <div> with attributes\n                    this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n                    // Remove attribute\n                    this.media.removeAttribute(this.config.attributes.embed.provider);\n                }\n\n                // Unsupported or missing provider\n                if (is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\n                    this.debug.error('Setup failed: Invalid provider');\n                    return;\n                }\n\n                // Audio will come later for external providers\n                this.type = types.video;\n\n                break;\n\n            case 'video':\n            case 'audio':\n                this.type = type;\n                this.provider = providers.html5;\n\n                // Get config from attributes\n                if (this.media.hasAttribute('crossorigin')) {\n                    this.config.crossorigin = true;\n                }\n                if (this.media.hasAttribute('autoplay')) {\n                    this.config.autoplay = true;\n                }\n                if (this.media.hasAttribute('playsinline') || this.media.hasAttribute('webkit-playsinline')) {\n                    this.config.playsinline = true;\n                }\n                if (this.media.hasAttribute('muted')) {\n                    this.config.muted = true;\n                }\n                if (this.media.hasAttribute('loop')) {\n                    this.config.loop.active = true;\n                }\n\n                break;\n\n            default:\n                this.debug.error('Setup failed: unsupported type');\n                return;\n        }\n\n        // Check for support again but with type\n        this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n        // If no support for even API, bail\n        if (!this.supported.api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        this.eventListeners = [];\n\n        // Create listeners\n        this.listeners = new Listeners(this);\n\n        // Setup local storage for user settings\n        this.storage = new Storage(this);\n\n        // Store reference\n        this.media.plyr = this;\n\n        // Wrap media\n        if (!is.element(this.elements.container)) {\n            this.elements.container = createElement('div', {\n                class: this.config.classNames.videoInitFlag,\n            });\n            wrap(this.media, this.elements.container);\n        }\n\n        // Add style hook\n        ui.addStyleHook.call(this);\n\n        // Setup media\n        media.setup.call(this);\n\n        // Listen for events if debugging\n        if (this.config.debug) {\n            on.call(this, this.elements.container, this.config.events.join(' '), event => {\n                this.debug.log(`event: ${event.type}`);\n            });\n        }\n\n        // Setup interface\n        // If embed but not fully supported, build interface now to avoid flash of controls\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n            ui.build.call(this);\n        }\n\n        // Container listeners\n        this.listeners.container();\n\n        // Global listeners\n        this.listeners.global();\n\n        // Setup fullscreen\n        this.fullscreen = new Fullscreen(this);\n\n        // Setup ads if provided\n        if (this.config.ads.enabled) {\n            this.ads = new Ads(this);\n        }\n\n        // Autoplay if required\n        if (this.config.autoplay) {\n            this.play();\n        }\n\n        // Seek time will be recorded (in listeners.js) so we can prevent hiding controls for a few seconds after seek\n        this.lastSeekTime = 0;\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n        return Boolean(this.provider === providers.html5);\n    }\n\n    get isEmbed() {\n        return Boolean(this.isYouTube || this.isVimeo);\n    }\n\n    get isYouTube() {\n        return Boolean(this.provider === providers.youtube);\n    }\n\n    get isVimeo() {\n        return Boolean(this.provider === providers.vimeo);\n    }\n\n    get isVideo() {\n        return Boolean(this.type === types.video);\n    }\n\n    get isAudio() {\n        return Boolean(this.type === types.audio);\n    }\n\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n    play() {\n        if (!is.function(this.media.play)) {\n            return null;\n        }\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n    }\n\n    /**\n     * Pause the media\n     */\n    pause() {\n        if (!this.playing || !is.function(this.media.pause)) {\n            return;\n        }\n\n        this.media.pause();\n    }\n\n    /**\n     * Get playing state\n     */\n    get playing() {\n        return Boolean(this.ready && !this.paused && !this.ended);\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n        return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get stopped state\n     */\n    get stopped() {\n        return Boolean(this.paused && this.currentTime === 0);\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n        return Boolean(this.media.ended);\n    }\n\n    /**\n     * Toggle playback based on current status\n     * @param {boolean} input\n     */\n    togglePlay(input) {\n        // Toggle based on current state if nothing passed\n        const toggle = is.boolean(input) ? input : !this.playing;\n\n        if (toggle) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n\n    /**\n     * Stop playback\n     */\n    stop() {\n        if (this.isHTML5) {\n            this.pause();\n            this.restart();\n        } else if (is.function(this.media.stop)) {\n            this.media.stop();\n        }\n    }\n\n    /**\n     * Restart playback\n     */\n    restart() {\n        this.currentTime = 0;\n    }\n\n    /**\n     * Rewind\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n     */\n    rewind(seekTime) {\n        this.currentTime = this.currentTime - (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Fast forward\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n     */\n    forward(seekTime) {\n        this.currentTime = this.currentTime + (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Seek to a time\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n        // Bail if media duration isn't available yet\n        if (!this.duration) {\n            return;\n        }\n\n        // Validate input\n        const inputIsValid = is.number(input) && input > 0;\n\n        // Set\n        this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\n\n        // Logging\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n        return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n        const { buffered } = this.media;\n\n        // YouTube / Vimeo return a float between 0-1\n        if (is.number(buffered)) {\n            return buffered;\n        }\n\n        // HTML5\n        // TODO: Handle buffered chunks of the media\n        // (i.e. seek to another section buffers only that section)\n        if (buffered && buffered.length && this.duration > 0) {\n            return buffered.end(0) / this.duration;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n        return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n        // Faux duration set via config\n        const fauxDuration = parseFloat(this.config.duration);\n\n        // Media duration can be NaN or Infinity before the media has loaded\n        const realDuration = (this.media || {}).duration;\n        const duration = !is.number(realDuration) || realDuration === Infinity ? 0 : realDuration;\n\n        // If config duration is funky, use regular duration\n        return fauxDuration || duration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n        let volume = value;\n        const max = 1;\n        const min = 0;\n\n        if (is.string(volume)) {\n            volume = Number(volume);\n        }\n\n        // Load volume from storage if no value specified\n        if (!is.number(volume)) {\n            volume = this.storage.get('volume');\n        }\n\n        // Use config if all else fails\n        if (!is.number(volume)) {\n            ({ volume } = this.config);\n        }\n\n        // Maximum is volumeMax\n        if (volume > max) {\n            volume = max;\n        }\n        // Minimum is volumeMin\n        if (volume < min) {\n            volume = min;\n        }\n\n        // Update config\n        this.config.volume = volume;\n\n        // Set the player volume\n        this.media.volume = volume;\n\n        // If muted, and we're increasing volume manually, reset muted state\n        if (!is.empty(value) && this.muted && volume > 0) {\n            this.muted = false;\n        }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n        return Number(this.media.volume);\n    }\n\n    /**\n     * Increase volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    increaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (is.number(step) ? step : 0);\n    }\n\n    /**\n     * Decrease volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    decreaseVolume(step) {\n        this.increaseVolume(-step);\n    }\n\n    /**\n     * Set muted state\n     * @param {boolean} mute\n     */\n    set muted(mute) {\n        let toggle = mute;\n\n        // Load muted state from storage\n        if (!is.boolean(toggle)) {\n            toggle = this.storage.get('muted');\n        }\n\n        // Use config if all else fails\n        if (!is.boolean(toggle)) {\n            toggle = this.config.muted;\n        }\n\n        // Update config\n        this.config.muted = toggle;\n\n        // Set mute on the player\n        this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n        return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n        // Assume yes for all non HTML5 (as we can't tell...)\n        if (!this.isHTML5) {\n            return true;\n        }\n\n        if (this.isAudio) {\n            return true;\n        }\n\n        // Get audio tracks\n        return (\n            Boolean(this.media.mozHasAudio) ||\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\n        );\n    }\n\n    /**\n     * Set playback speed\n     * @param {number} speed - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n        let speed = null;\n\n        if (is.number(input)) {\n            speed = input;\n        }\n\n        if (!is.number(speed)) {\n            speed = this.storage.get('speed');\n        }\n\n        if (!is.number(speed)) {\n            speed = this.config.speed.selected;\n        }\n\n        // Set min/max\n        if (speed < 0.1) {\n            speed = 0.1;\n        }\n        if (speed > 2.0) {\n            speed = 2.0;\n        }\n\n        if (!this.config.speed.options.includes(speed)) {\n            this.debug.warn(`Unsupported speed (${speed})`);\n            return;\n        }\n\n        // Update config\n        this.config.speed.selected = speed;\n\n        // Set media speed\n        this.media.playbackRate = speed;\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n        return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {number} input - Quality level\n     */\n    set quality(input) {\n        const config = this.config.quality;\n        const options = this.options.quality;\n\n        if (!options.length) {\n            return;\n        }\n\n        let quality = [\n            !is.empty(input) && Number(input),\n            this.storage.get('quality'),\n            config.selected,\n            config.default,\n        ].find(is.number);\n\n        let updateStorage = true;\n\n        if (!options.includes(quality)) {\n            const value = closest(options, quality);\n            this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\n            quality = value;\n\n            // Don't update storage if quality is not supported\n            updateStorage = false;\n        }\n\n        // Update config\n        config.selected = quality;\n\n        // Set quality\n        this.media.quality = quality;\n\n        // Save to storage\n        if (updateStorage) {\n            this.storage.set({ quality });\n        }\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n        return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n        const toggle = is.boolean(input) ? input : this.config.loop.active;\n        this.config.loop.active = toggle;\n        this.media.loop = toggle;\n\n        // Set default to be a true toggle\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n        return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {object} input - The new source object (see docs)\n     */\n    set source(input) {\n        source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n        return this.media.currentSrc;\n    }\n\n    /**\n     * Get a download URL (either source or custom)\n     */\n    get download() {\n        const { download } = this.config.urls;\n\n        return is.url(download) ? download : this.source;\n    }\n\n    /**\n     * Set the poster image for a video\n     * @param {input} - the URL for the new poster image\n     */\n    set poster(input) {\n        if (!this.isVideo) {\n            this.debug.warn('Poster can only be set for video');\n            return;\n        }\n\n        ui.setPoster.call(this, input, false).catch(() => {});\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n        if (!this.isVideo) {\n            return null;\n        }\n\n        return this.media.getAttribute('poster');\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n        const toggle = is.boolean(input) ? input : this.config.autoplay;\n        this.config.autoplay = toggle;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n        return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n        captions.toggle.call(this, input, false);\n    }\n\n    /**\n     * Set the caption track by index\n     * @param {number} - Caption index\n     */\n    set currentTrack(input) {\n        captions.set.call(this, input, false);\n    }\n\n    /**\n     * Get the current caption track index (-1 if disabled)\n     */\n    get currentTrack() {\n        const { toggled, currentTrack } = this.captions;\n        return toggled ? currentTrack : -1;\n    }\n\n    /**\n     * Set the wanted language for captions\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n        captions.setLanguage.call(this, input, false);\n    }\n\n    /**\n     * Get the current track's language\n     */\n    get language() {\n        return (captions.getCurrentTrack.call(this) || {}).language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n        // Bail if no support\n        if (!support.pip) {\n            return;\n        }\n\n        // Toggle based on current state if not passed\n        const toggle = is.boolean(input) ? input : !this.pip;\n\n        // Toggle based on current state\n        // Safari\n        if (is.function(this.media.webkitSetPresentationMode)) {\n            this.media.webkitSetPresentationMode(toggle ? pip.active : pip.inactive);\n        }\n\n        // Chrome\n        if (is.function(this.media.requestPictureInPicture)) {\n            if (!this.pip && toggle) {\n                this.media.requestPictureInPicture();\n            } else if (this.pip && !toggle) {\n                document.exitPictureInPicture();\n            }\n        }\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n        if (!support.pip) {\n            return null;\n        }\n\n        // Safari\n        if (!is.empty(this.media.webkitPresentationMode)) {\n            return this.media.webkitPresentationMode === pip.active;\n        }\n\n        // Chrome\n        return this.media === document.pictureInPictureElement;\n    }\n\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n    airplay() {\n        // Show dialog if supported\n        if (support.airplay) {\n            this.media.webkitShowPlaybackTargetPicker();\n        }\n    }\n\n    /**\n     * Toggle the player controls\n     * @param {boolean} [toggle] - Whether to show the controls\n     */\n    toggleControls(toggle) {\n        // Don't toggle if missing UI support or if it's audio\n        if (this.supported.ui && !this.isAudio) {\n            // Get state before change\n            const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\n\n            // Negate the argument if not undefined since adding the class to hides the controls\n            const force = typeof toggle === 'undefined' ? undefined : !toggle;\n\n            // Apply and get updated state\n            const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\n\n            // Close menu\n            if (hiding && this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n                controls.toggleMenu.call(this, false);\n            }\n\n            // Trigger event on change\n            if (hiding !== isHidden) {\n                const eventName = hiding ? 'controlshidden' : 'controlsshown';\n                triggerEvent.call(this, this.media, eventName);\n            }\n\n            return !hiding;\n        }\n\n        return false;\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    on(event, callback) {\n        on.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Add event listeners once\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    once(event, callback) {\n        once.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Remove event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    off(event, callback) {\n        off(this.elements.container, event, callback);\n    }\n\n    /**\n     * Destroy an instance\n     * Event listeners are removed when elements are removed\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n     * @param {function} callback - Callback for when destroy is complete\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\n     */\n    destroy(callback, soft = false) {\n        if (!this.ready) {\n            return;\n        }\n\n        const done = () => {\n            // Reset overflow (incase destroyed while in fullscreen)\n            document.body.style.overflow = '';\n\n            // GC for embed\n            this.embed = null;\n\n            // If it's a soft destroy, make minimal changes\n            if (soft) {\n                if (Object.keys(this.elements).length) {\n                    // Remove elements\n                    removeElement(this.elements.buttons.play);\n                    removeElement(this.elements.captions);\n                    removeElement(this.elements.controls);\n                    removeElement(this.elements.wrapper);\n\n                    // Clear for GC\n                    this.elements.buttons.play = null;\n                    this.elements.captions = null;\n                    this.elements.controls = null;\n                    this.elements.wrapper = null;\n                }\n\n                // Callback\n                if (is.function(callback)) {\n                    callback();\n                }\n            } else {\n                // Unbind listeners\n                unbindListeners.call(this);\n\n                // Replace the container with the original element provided\n                replaceElement(this.elements.original, this.elements.container);\n\n                // Event\n                triggerEvent.call(this, this.elements.original, 'destroyed', true);\n\n                // Callback\n                if (is.function(callback)) {\n                    callback.call(this.elements.original);\n                }\n\n                // Reset state\n                this.ready = false;\n\n                // Clear for garbage collection\n                setTimeout(() => {\n                    this.elements = null;\n                    this.media = null;\n                }, 200);\n            }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Provider specific stuff\n        if (this.isHTML5) {\n            // Clear timeout\n            clearTimeout(this.timers.loading);\n\n            // Restore native video controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Clean up\n            done();\n        } else if (this.isYouTube) {\n            // Clear timers\n            clearInterval(this.timers.buffering);\n            clearInterval(this.timers.playing);\n\n            // Destroy YouTube API\n            if (this.embed !== null && is.function(this.embed.destroy)) {\n                this.embed.destroy();\n            }\n\n            // Clean up\n            done();\n        } else if (this.isVimeo) {\n            // Destroy Vimeo API\n            // then clean up (wait, to prevent postmessage errors)\n            if (this.embed !== null) {\n                this.embed.unload().then(done);\n            }\n\n            // Vimeo does not always return\n            setTimeout(done, 200);\n        }\n    }\n\n    /**\n     * Check for support for a mime type (HTML5 only)\n     * @param {string} type - Mime type\n     */\n    supports(type) {\n        return support.mime.call(this, type);\n    }\n\n    /**\n     * Check for support\n     * @param {string} type - Player type (audio/video)\n     * @param {string} provider - Provider (html5/youtube/vimeo)\n     * @param {bool} inline - Where player has `playsinline` sttribute\n     */\n    static supported(type, provider, inline) {\n        return support.check(type, provider, inline);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {string} url - URL for the SVG sprite\n     * @param {string} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n        return loadSprite(url, id);\n    }\n\n    /**\n     * Setup multiple instances\n     * @param {*} selector\n     * @param {object} options\n     */\n    static setup(selector, options = {}) {\n        let targets = null;\n\n        if (is.string(selector)) {\n            targets = Array.from(document.querySelectorAll(selector));\n        } else if (is.nodeList(selector)) {\n            targets = Array.from(selector);\n        } else if (is.array(selector)) {\n            targets = selector.filter(is.element);\n        }\n\n        if (is.empty(targets)) {\n            return null;\n        }\n\n        return targets.map(t => new Plyr(t, options));\n    }\n}\n\nPlyr.defaults = cloneDeep(defaults);\n\nexport default Plyr;\n"]}